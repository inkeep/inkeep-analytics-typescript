/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ExportQuerySelect =
  | (components.SimpleFieldSelection & { type: "field" })
  | (components.AggregationSelection & { type: "aggregation" })
  | (components.TimeBasedGroupBySelection & { type: "time" });

export const ExportQueryField31 = {
  IsInitialQuestionAnswer: "isInitialQuestionAnswer",
} as const;
export type ExportQueryField31 = ClosedEnum<typeof ExportQueryField31>;

export const ExportQueryField30 = {
  AreAIAnnotationsVerified: "areAIAnnotationsVerified",
} as const;
export type ExportQueryField30 = ClosedEnum<typeof ExportQueryField30>;

export const ExportQueryField29 = {
  ConversationIds: "conversationIds",
} as const;
export type ExportQueryField29 = ClosedEnum<typeof ExportQueryField29>;

export const ExportQueryField28 = {
  HasNegativeFeedback: "hasNegativeFeedback",
} as const;
export type ExportQueryField28 = ClosedEnum<typeof ExportQueryField28>;

export const ExportQueryField27 = {
  HasPositiveFeedback: "hasPositiveFeedback",
} as const;
export type ExportQueryField27 = ClosedEnum<typeof ExportQueryField27>;

export const ExportQueryField26 = {
  LastUpdated: "lastUpdated",
} as const;
export type ExportQueryField26 = ClosedEnum<typeof ExportQueryField26>;

export const ExportQueryField25 = {
  LastMessageTime: "lastMessageTime",
} as const;
export type ExportQueryField25 = ClosedEnum<typeof ExportQueryField25>;

export const ExportQueryField24 = {
  FirstMessageTime: "firstMessageTime",
} as const;
export type ExportQueryField24 = ClosedEnum<typeof ExportQueryField24>;

export const ExportQueryField23 = {
  IntegrationId: "integrationId",
} as const;
export type ExportQueryField23 = ClosedEnum<typeof ExportQueryField23>;

export const ExportQueryField22 = {
  ProjectId: "projectId",
} as const;
export type ExportQueryField22 = ClosedEnum<typeof ExportQueryField22>;

export const ExportQueryField21 = {
  QuestionType: "questionType",
} as const;
export type ExportQueryField21 = ClosedEnum<typeof ExportQueryField21>;

export const ExportQueryField20 = {
  Sentiment: "sentiment",
} as const;
export type ExportQueryField20 = ClosedEnum<typeof ExportQueryField20>;

export const ExportQueryField19 = {
  Emotion: "emotion",
} as const;
export type ExportQueryField19 = ClosedEnum<typeof ExportQueryField19>;

export const ExportQueryField18 = {
  ThirdPartyEntities: "thirdPartyEntities",
} as const;
export type ExportQueryField18 = ClosedEnum<typeof ExportQueryField18>;

export const ExportQueryField17 = {
  FirstPartyEntities: "firstPartyEntities",
} as const;
export type ExportQueryField17 = ClosedEnum<typeof ExportQueryField17>;

export const ExportQueryField16 = {
  Languages: "languages",
} as const;
export type ExportQueryField16 = ClosedEnum<typeof ExportQueryField16>;

export const ExportQueryField15 = {
  Category: "category",
} as const;
export type ExportQueryField15 = ClosedEnum<typeof ExportQueryField15>;

export const ExportQueryField14 = {
  Subject: "subject",
} as const;
export type ExportQueryField14 = ClosedEnum<typeof ExportQueryField14>;

export const ExportQueryField13 = {
  GapSummary: "gapSummary",
} as const;
export type ExportQueryField13 = ClosedEnum<typeof ExportQueryField13>;

export const ExportQueryField12 = {
  IsAnswerConfident: "isAnswerConfident",
} as const;
export type ExportQueryField12 = ClosedEnum<typeof ExportQueryField12>;

export const ExportQueryField11 = {
  IsFeatureSupported: "isFeatureSupported",
} as const;
export type ExportQueryField11 = ClosedEnum<typeof ExportQueryField11>;

export const ExportQueryField10 = {
  IsDocumented: "isDocumented",
} as const;
export type ExportQueryField10 = ClosedEnum<typeof ExportQueryField10>;

export const ExportQueryField9 = {
  IsClear: "isClear",
} as const;
export type ExportQueryField9 = ClosedEnum<typeof ExportQueryField9>;

export const ExportQueryField8 = {
  IsOnTopic: "isOnTopic",
} as const;
export type ExportQueryField8 = ClosedEnum<typeof ExportQueryField8>;

export const ExportQueryField7 = {
  Answer: "answer",
} as const;
export type ExportQueryField7 = ClosedEnum<typeof ExportQueryField7>;

export const ExportQueryField6 = {
  QuestionLength: "questionLength",
} as const;
export type ExportQueryField6 = ClosedEnum<typeof ExportQueryField6>;

export const ExportQueryField5 = {
  Question: "question",
} as const;
export type ExportQueryField5 = ClosedEnum<typeof ExportQueryField5>;

export const ExportQueryField4 = {
  OrganizationId: "organizationId",
} as const;
export type ExportQueryField4 = ClosedEnum<typeof ExportQueryField4>;

export const ExportQueryField3 = {
  MessagesCount: "messagesCount",
} as const;
export type ExportQueryField3 = ClosedEnum<typeof ExportQueryField3>;

export const ExportQueryField2 = {
  MessageIds: "messageIds",
} as const;
export type ExportQueryField2 = ClosedEnum<typeof ExportQueryField2>;

export const ExportQueryField1 = {
  Id: "id",
} as const;
export type ExportQueryField1 = ClosedEnum<typeof ExportQueryField1>;

export type ExportQueryField =
  | ExportQueryField1
  | ExportQueryField2
  | ExportQueryField3
  | ExportQueryField4
  | ExportQueryField5
  | ExportQueryField6
  | ExportQueryField7
  | ExportQueryField8
  | ExportQueryField9
  | ExportQueryField10
  | ExportQueryField11
  | ExportQueryField12
  | ExportQueryField13
  | ExportQueryField14
  | ExportQueryField15
  | ExportQueryField16
  | ExportQueryField17
  | ExportQueryField18
  | ExportQueryField19
  | ExportQueryField20
  | ExportQueryField21
  | ExportQueryField22
  | ExportQueryField23
  | ExportQueryField24
  | ExportQueryField25
  | ExportQueryField26
  | ExportQueryField27
  | ExportQueryField28
  | ExportQueryField29
  | ExportQueryField30
  | ExportQueryField31;

export type ExportQueryGroupBy = {
  field:
    | ExportQueryField1
    | ExportQueryField2
    | ExportQueryField3
    | ExportQueryField4
    | ExportQueryField5
    | ExportQueryField6
    | ExportQueryField7
    | ExportQueryField8
    | ExportQueryField9
    | ExportQueryField10
    | ExportQueryField11
    | ExportQueryField12
    | ExportQueryField13
    | ExportQueryField14
    | ExportQueryField15
    | ExportQueryField16
    | ExportQueryField17
    | ExportQueryField18
    | ExportQueryField19
    | ExportQueryField20
    | ExportQueryField21
    | ExportQueryField22
    | ExportQueryField23
    | ExportQueryField24
    | ExportQueryField25
    | ExportQueryField26
    | ExportQueryField27
    | ExportQueryField28
    | ExportQueryField29
    | ExportQueryField30
    | ExportQueryField31;
};

export const Field310 = {
  MaxIsInitialQuestionAnswer: "max_isInitialQuestionAnswer",
} as const;
export type Field310 = ClosedEnum<typeof Field310>;

export const Field309 = {
  MinIsInitialQuestionAnswer: "min_isInitialQuestionAnswer",
} as const;
export type Field309 = ClosedEnum<typeof Field309>;

export const Field308 = {
  AvgIsInitialQuestionAnswer: "avg_isInitialQuestionAnswer",
} as const;
export type Field308 = ClosedEnum<typeof Field308>;

export const Field307 = {
  CountIsInitialQuestionAnswer: "count_isInitialQuestionAnswer",
} as const;
export type Field307 = ClosedEnum<typeof Field307>;

export const Field306 = {
  SumIsInitialQuestionAnswer: "sum_isInitialQuestionAnswer",
} as const;
export type Field306 = ClosedEnum<typeof Field306>;

export const Field305 = {
  MaxAreAIAnnotationsVerified: "max_areAIAnnotationsVerified",
} as const;
export type Field305 = ClosedEnum<typeof Field305>;

export const Field304 = {
  MinAreAIAnnotationsVerified: "min_areAIAnnotationsVerified",
} as const;
export type Field304 = ClosedEnum<typeof Field304>;

export const Field303 = {
  AvgAreAIAnnotationsVerified: "avg_areAIAnnotationsVerified",
} as const;
export type Field303 = ClosedEnum<typeof Field303>;

export const Field302 = {
  CountAreAIAnnotationsVerified: "count_areAIAnnotationsVerified",
} as const;
export type Field302 = ClosedEnum<typeof Field302>;

export const Field301 = {
  SumAreAIAnnotationsVerified: "sum_areAIAnnotationsVerified",
} as const;
export type Field301 = ClosedEnum<typeof Field301>;

export const Field300 = {
  MaxConversationIds: "max_conversationIds",
} as const;
export type Field300 = ClosedEnum<typeof Field300>;

export const Field299 = {
  MinConversationIds: "min_conversationIds",
} as const;
export type Field299 = ClosedEnum<typeof Field299>;

export const Field298 = {
  AvgConversationIds: "avg_conversationIds",
} as const;
export type Field298 = ClosedEnum<typeof Field298>;

export const Field297 = {
  CountConversationIds: "count_conversationIds",
} as const;
export type Field297 = ClosedEnum<typeof Field297>;

export const Field296 = {
  SumConversationIds: "sum_conversationIds",
} as const;
export type Field296 = ClosedEnum<typeof Field296>;

export const Field295 = {
  MaxHasNegativeFeedback: "max_hasNegativeFeedback",
} as const;
export type Field295 = ClosedEnum<typeof Field295>;

export const Field294 = {
  MinHasNegativeFeedback: "min_hasNegativeFeedback",
} as const;
export type Field294 = ClosedEnum<typeof Field294>;

export const Field293 = {
  AvgHasNegativeFeedback: "avg_hasNegativeFeedback",
} as const;
export type Field293 = ClosedEnum<typeof Field293>;

export const Field292 = {
  CountHasNegativeFeedback: "count_hasNegativeFeedback",
} as const;
export type Field292 = ClosedEnum<typeof Field292>;

export const Field291 = {
  SumHasNegativeFeedback: "sum_hasNegativeFeedback",
} as const;
export type Field291 = ClosedEnum<typeof Field291>;

export const Field290 = {
  MaxHasPositiveFeedback: "max_hasPositiveFeedback",
} as const;
export type Field290 = ClosedEnum<typeof Field290>;

export const Field289 = {
  MinHasPositiveFeedback: "min_hasPositiveFeedback",
} as const;
export type Field289 = ClosedEnum<typeof Field289>;

export const Field288 = {
  AvgHasPositiveFeedback: "avg_hasPositiveFeedback",
} as const;
export type Field288 = ClosedEnum<typeof Field288>;

export const Field287 = {
  CountHasPositiveFeedback: "count_hasPositiveFeedback",
} as const;
export type Field287 = ClosedEnum<typeof Field287>;

export const Field286 = {
  SumHasPositiveFeedback: "sum_hasPositiveFeedback",
} as const;
export type Field286 = ClosedEnum<typeof Field286>;

export const Field285 = {
  MaxLastUpdated: "max_lastUpdated",
} as const;
export type Field285 = ClosedEnum<typeof Field285>;

export const Field284 = {
  MinLastUpdated: "min_lastUpdated",
} as const;
export type Field284 = ClosedEnum<typeof Field284>;

export const Field283 = {
  AvgLastUpdated: "avg_lastUpdated",
} as const;
export type Field283 = ClosedEnum<typeof Field283>;

export const Field282 = {
  CountLastUpdated: "count_lastUpdated",
} as const;
export type Field282 = ClosedEnum<typeof Field282>;

export const Field281 = {
  SumLastUpdated: "sum_lastUpdated",
} as const;
export type Field281 = ClosedEnum<typeof Field281>;

export const Field280 = {
  MaxLastMessageTime: "max_lastMessageTime",
} as const;
export type Field280 = ClosedEnum<typeof Field280>;

export const Field279 = {
  MinLastMessageTime: "min_lastMessageTime",
} as const;
export type Field279 = ClosedEnum<typeof Field279>;

export const Field278 = {
  AvgLastMessageTime: "avg_lastMessageTime",
} as const;
export type Field278 = ClosedEnum<typeof Field278>;

export const Field277 = {
  CountLastMessageTime: "count_lastMessageTime",
} as const;
export type Field277 = ClosedEnum<typeof Field277>;

export const Field276 = {
  SumLastMessageTime: "sum_lastMessageTime",
} as const;
export type Field276 = ClosedEnum<typeof Field276>;

export const Field275 = {
  MaxFirstMessageTime: "max_firstMessageTime",
} as const;
export type Field275 = ClosedEnum<typeof Field275>;

export const Field274 = {
  MinFirstMessageTime: "min_firstMessageTime",
} as const;
export type Field274 = ClosedEnum<typeof Field274>;

export const Field273 = {
  AvgFirstMessageTime: "avg_firstMessageTime",
} as const;
export type Field273 = ClosedEnum<typeof Field273>;

export const Field272 = {
  CountFirstMessageTime: "count_firstMessageTime",
} as const;
export type Field272 = ClosedEnum<typeof Field272>;

export const Field271 = {
  SumFirstMessageTime: "sum_firstMessageTime",
} as const;
export type Field271 = ClosedEnum<typeof Field271>;

export const Field270 = {
  MaxIntegrationId: "max_integrationId",
} as const;
export type Field270 = ClosedEnum<typeof Field270>;

export const Field269 = {
  MinIntegrationId: "min_integrationId",
} as const;
export type Field269 = ClosedEnum<typeof Field269>;

export const Field268 = {
  AvgIntegrationId: "avg_integrationId",
} as const;
export type Field268 = ClosedEnum<typeof Field268>;

export const Field267 = {
  CountIntegrationId: "count_integrationId",
} as const;
export type Field267 = ClosedEnum<typeof Field267>;

export const Field266 = {
  SumIntegrationId: "sum_integrationId",
} as const;
export type Field266 = ClosedEnum<typeof Field266>;

export const Field265 = {
  MaxProjectId: "max_projectId",
} as const;
export type Field265 = ClosedEnum<typeof Field265>;

export const Field264 = {
  MinProjectId: "min_projectId",
} as const;
export type Field264 = ClosedEnum<typeof Field264>;

export const Field263 = {
  AvgProjectId: "avg_projectId",
} as const;
export type Field263 = ClosedEnum<typeof Field263>;

export const Field262 = {
  CountProjectId: "count_projectId",
} as const;
export type Field262 = ClosedEnum<typeof Field262>;

export const Field261 = {
  SumProjectId: "sum_projectId",
} as const;
export type Field261 = ClosedEnum<typeof Field261>;

export const Field260 = {
  MaxQuestionType: "max_questionType",
} as const;
export type Field260 = ClosedEnum<typeof Field260>;

export const Field259 = {
  MinQuestionType: "min_questionType",
} as const;
export type Field259 = ClosedEnum<typeof Field259>;

export const Field258 = {
  AvgQuestionType: "avg_questionType",
} as const;
export type Field258 = ClosedEnum<typeof Field258>;

export const Field257 = {
  CountQuestionType: "count_questionType",
} as const;
export type Field257 = ClosedEnum<typeof Field257>;

export const Field256 = {
  SumQuestionType: "sum_questionType",
} as const;
export type Field256 = ClosedEnum<typeof Field256>;

export const Field255 = {
  MaxSentiment: "max_sentiment",
} as const;
export type Field255 = ClosedEnum<typeof Field255>;

export const Field254 = {
  MinSentiment: "min_sentiment",
} as const;
export type Field254 = ClosedEnum<typeof Field254>;

export const Field253 = {
  AvgSentiment: "avg_sentiment",
} as const;
export type Field253 = ClosedEnum<typeof Field253>;

export const Field252 = {
  CountSentiment: "count_sentiment",
} as const;
export type Field252 = ClosedEnum<typeof Field252>;

export const Field251 = {
  SumSentiment: "sum_sentiment",
} as const;
export type Field251 = ClosedEnum<typeof Field251>;

export const Field250 = {
  MaxEmotion: "max_emotion",
} as const;
export type Field250 = ClosedEnum<typeof Field250>;

export const Field249 = {
  MinEmotion: "min_emotion",
} as const;
export type Field249 = ClosedEnum<typeof Field249>;

export const Field248 = {
  AvgEmotion: "avg_emotion",
} as const;
export type Field248 = ClosedEnum<typeof Field248>;

export const Field247 = {
  CountEmotion: "count_emotion",
} as const;
export type Field247 = ClosedEnum<typeof Field247>;

export const Field246 = {
  SumEmotion: "sum_emotion",
} as const;
export type Field246 = ClosedEnum<typeof Field246>;

export const Field245 = {
  MaxThirdPartyEntities: "max_thirdPartyEntities",
} as const;
export type Field245 = ClosedEnum<typeof Field245>;

export const Field244 = {
  MinThirdPartyEntities: "min_thirdPartyEntities",
} as const;
export type Field244 = ClosedEnum<typeof Field244>;

export const Field243 = {
  AvgThirdPartyEntities: "avg_thirdPartyEntities",
} as const;
export type Field243 = ClosedEnum<typeof Field243>;

export const Field242 = {
  CountThirdPartyEntities: "count_thirdPartyEntities",
} as const;
export type Field242 = ClosedEnum<typeof Field242>;

export const Field241 = {
  SumThirdPartyEntities: "sum_thirdPartyEntities",
} as const;
export type Field241 = ClosedEnum<typeof Field241>;

export const Field240 = {
  MaxFirstPartyEntities: "max_firstPartyEntities",
} as const;
export type Field240 = ClosedEnum<typeof Field240>;

export const Field239 = {
  MinFirstPartyEntities: "min_firstPartyEntities",
} as const;
export type Field239 = ClosedEnum<typeof Field239>;

export const Field238 = {
  AvgFirstPartyEntities: "avg_firstPartyEntities",
} as const;
export type Field238 = ClosedEnum<typeof Field238>;

export const Field237 = {
  CountFirstPartyEntities: "count_firstPartyEntities",
} as const;
export type Field237 = ClosedEnum<typeof Field237>;

export const Field236 = {
  SumFirstPartyEntities: "sum_firstPartyEntities",
} as const;
export type Field236 = ClosedEnum<typeof Field236>;

export const Field235 = {
  MaxLanguages: "max_languages",
} as const;
export type Field235 = ClosedEnum<typeof Field235>;

export const Field234 = {
  MinLanguages: "min_languages",
} as const;
export type Field234 = ClosedEnum<typeof Field234>;

export const Field233 = {
  AvgLanguages: "avg_languages",
} as const;
export type Field233 = ClosedEnum<typeof Field233>;

export const Field232 = {
  CountLanguages: "count_languages",
} as const;
export type Field232 = ClosedEnum<typeof Field232>;

export const Field231 = {
  SumLanguages: "sum_languages",
} as const;
export type Field231 = ClosedEnum<typeof Field231>;

export const Field230 = {
  MaxCategory: "max_category",
} as const;
export type Field230 = ClosedEnum<typeof Field230>;

export const Field229 = {
  MinCategory: "min_category",
} as const;
export type Field229 = ClosedEnum<typeof Field229>;

export const Field228 = {
  AvgCategory: "avg_category",
} as const;
export type Field228 = ClosedEnum<typeof Field228>;

export const Field227 = {
  CountCategory: "count_category",
} as const;
export type Field227 = ClosedEnum<typeof Field227>;

export const Field226 = {
  SumCategory: "sum_category",
} as const;
export type Field226 = ClosedEnum<typeof Field226>;

export const Field225 = {
  MaxSubject: "max_subject",
} as const;
export type Field225 = ClosedEnum<typeof Field225>;

export const Field224 = {
  MinSubject: "min_subject",
} as const;
export type Field224 = ClosedEnum<typeof Field224>;

export const Field223 = {
  AvgSubject: "avg_subject",
} as const;
export type Field223 = ClosedEnum<typeof Field223>;

export const Field222 = {
  CountSubject: "count_subject",
} as const;
export type Field222 = ClosedEnum<typeof Field222>;

export const Field221 = {
  SumSubject: "sum_subject",
} as const;
export type Field221 = ClosedEnum<typeof Field221>;

export const Field220 = {
  MaxGapSummary: "max_gapSummary",
} as const;
export type Field220 = ClosedEnum<typeof Field220>;

export const Field219 = {
  MinGapSummary: "min_gapSummary",
} as const;
export type Field219 = ClosedEnum<typeof Field219>;

export const Field218 = {
  AvgGapSummary: "avg_gapSummary",
} as const;
export type Field218 = ClosedEnum<typeof Field218>;

export const Field217 = {
  CountGapSummary: "count_gapSummary",
} as const;
export type Field217 = ClosedEnum<typeof Field217>;

export const Field216 = {
  SumGapSummary: "sum_gapSummary",
} as const;
export type Field216 = ClosedEnum<typeof Field216>;

export const Field215 = {
  MaxIsAnswerConfident: "max_isAnswerConfident",
} as const;
export type Field215 = ClosedEnum<typeof Field215>;

export const Field214 = {
  MinIsAnswerConfident: "min_isAnswerConfident",
} as const;
export type Field214 = ClosedEnum<typeof Field214>;

export const Field213 = {
  AvgIsAnswerConfident: "avg_isAnswerConfident",
} as const;
export type Field213 = ClosedEnum<typeof Field213>;

export const Field212 = {
  CountIsAnswerConfident: "count_isAnswerConfident",
} as const;
export type Field212 = ClosedEnum<typeof Field212>;

export const Field211 = {
  SumIsAnswerConfident: "sum_isAnswerConfident",
} as const;
export type Field211 = ClosedEnum<typeof Field211>;

export const Field210 = {
  MaxIsFeatureSupported: "max_isFeatureSupported",
} as const;
export type Field210 = ClosedEnum<typeof Field210>;

export const Field209 = {
  MinIsFeatureSupported: "min_isFeatureSupported",
} as const;
export type Field209 = ClosedEnum<typeof Field209>;

export const Field208 = {
  AvgIsFeatureSupported: "avg_isFeatureSupported",
} as const;
export type Field208 = ClosedEnum<typeof Field208>;

export const Field207 = {
  CountIsFeatureSupported: "count_isFeatureSupported",
} as const;
export type Field207 = ClosedEnum<typeof Field207>;

export const Field206 = {
  SumIsFeatureSupported: "sum_isFeatureSupported",
} as const;
export type Field206 = ClosedEnum<typeof Field206>;

export const Field205 = {
  MaxIsDocumented: "max_isDocumented",
} as const;
export type Field205 = ClosedEnum<typeof Field205>;

export const Field204 = {
  MinIsDocumented: "min_isDocumented",
} as const;
export type Field204 = ClosedEnum<typeof Field204>;

export const Field203 = {
  AvgIsDocumented: "avg_isDocumented",
} as const;
export type Field203 = ClosedEnum<typeof Field203>;

export const Field202 = {
  CountIsDocumented: "count_isDocumented",
} as const;
export type Field202 = ClosedEnum<typeof Field202>;

export const Field201 = {
  SumIsDocumented: "sum_isDocumented",
} as const;
export type Field201 = ClosedEnum<typeof Field201>;

export const Field200 = {
  MaxIsClear: "max_isClear",
} as const;
export type Field200 = ClosedEnum<typeof Field200>;

export const Field199 = {
  MinIsClear: "min_isClear",
} as const;
export type Field199 = ClosedEnum<typeof Field199>;

export const Field198 = {
  AvgIsClear: "avg_isClear",
} as const;
export type Field198 = ClosedEnum<typeof Field198>;

export const Field197 = {
  CountIsClear: "count_isClear",
} as const;
export type Field197 = ClosedEnum<typeof Field197>;

export const Field196 = {
  SumIsClear: "sum_isClear",
} as const;
export type Field196 = ClosedEnum<typeof Field196>;

export const Field195 = {
  MaxIsOnTopic: "max_isOnTopic",
} as const;
export type Field195 = ClosedEnum<typeof Field195>;

export const Field194 = {
  MinIsOnTopic: "min_isOnTopic",
} as const;
export type Field194 = ClosedEnum<typeof Field194>;

export const Field193 = {
  AvgIsOnTopic: "avg_isOnTopic",
} as const;
export type Field193 = ClosedEnum<typeof Field193>;

export const Field192 = {
  CountIsOnTopic: "count_isOnTopic",
} as const;
export type Field192 = ClosedEnum<typeof Field192>;

export const Field191 = {
  SumIsOnTopic: "sum_isOnTopic",
} as const;
export type Field191 = ClosedEnum<typeof Field191>;

export const Field190 = {
  MaxAnswer: "max_answer",
} as const;
export type Field190 = ClosedEnum<typeof Field190>;

export const Field189 = {
  MinAnswer: "min_answer",
} as const;
export type Field189 = ClosedEnum<typeof Field189>;

export const Field188 = {
  AvgAnswer: "avg_answer",
} as const;
export type Field188 = ClosedEnum<typeof Field188>;

export const Field187 = {
  CountAnswer: "count_answer",
} as const;
export type Field187 = ClosedEnum<typeof Field187>;

export const Field186 = {
  SumAnswer: "sum_answer",
} as const;
export type Field186 = ClosedEnum<typeof Field186>;

export const Field185 = {
  MaxQuestionLength: "max_questionLength",
} as const;
export type Field185 = ClosedEnum<typeof Field185>;

export const Field184 = {
  MinQuestionLength: "min_questionLength",
} as const;
export type Field184 = ClosedEnum<typeof Field184>;

export const Field183 = {
  AvgQuestionLength: "avg_questionLength",
} as const;
export type Field183 = ClosedEnum<typeof Field183>;

export const Field182 = {
  CountQuestionLength: "count_questionLength",
} as const;
export type Field182 = ClosedEnum<typeof Field182>;

export const Field181 = {
  SumQuestionLength: "sum_questionLength",
} as const;
export type Field181 = ClosedEnum<typeof Field181>;

export const Field180 = {
  MaxQuestion: "max_question",
} as const;
export type Field180 = ClosedEnum<typeof Field180>;

export const Field179 = {
  MinQuestion: "min_question",
} as const;
export type Field179 = ClosedEnum<typeof Field179>;

export const Field178 = {
  AvgQuestion: "avg_question",
} as const;
export type Field178 = ClosedEnum<typeof Field178>;

export const Field177 = {
  CountQuestion: "count_question",
} as const;
export type Field177 = ClosedEnum<typeof Field177>;

export const Field176 = {
  SumQuestion: "sum_question",
} as const;
export type Field176 = ClosedEnum<typeof Field176>;

export const Field175 = {
  MaxOrganizationId: "max_organizationId",
} as const;
export type Field175 = ClosedEnum<typeof Field175>;

export const Field174 = {
  MinOrganizationId: "min_organizationId",
} as const;
export type Field174 = ClosedEnum<typeof Field174>;

export const Field173 = {
  AvgOrganizationId: "avg_organizationId",
} as const;
export type Field173 = ClosedEnum<typeof Field173>;

export const Field172 = {
  CountOrganizationId: "count_organizationId",
} as const;
export type Field172 = ClosedEnum<typeof Field172>;

export const Field171 = {
  SumOrganizationId: "sum_organizationId",
} as const;
export type Field171 = ClosedEnum<typeof Field171>;

export const Field170 = {
  MaxMessagesCount: "max_messagesCount",
} as const;
export type Field170 = ClosedEnum<typeof Field170>;

export const Field169 = {
  MinMessagesCount: "min_messagesCount",
} as const;
export type Field169 = ClosedEnum<typeof Field169>;

export const Field168 = {
  AvgMessagesCount: "avg_messagesCount",
} as const;
export type Field168 = ClosedEnum<typeof Field168>;

export const Field167 = {
  CountMessagesCount: "count_messagesCount",
} as const;
export type Field167 = ClosedEnum<typeof Field167>;

export const Field166 = {
  SumMessagesCount: "sum_messagesCount",
} as const;
export type Field166 = ClosedEnum<typeof Field166>;

export const Field165 = {
  MaxMessageIds: "max_messageIds",
} as const;
export type Field165 = ClosedEnum<typeof Field165>;

export const Field164 = {
  MinMessageIds: "min_messageIds",
} as const;
export type Field164 = ClosedEnum<typeof Field164>;

export const Field163 = {
  AvgMessageIds: "avg_messageIds",
} as const;
export type Field163 = ClosedEnum<typeof Field163>;

export const Field162 = {
  CountMessageIds: "count_messageIds",
} as const;
export type Field162 = ClosedEnum<typeof Field162>;

export const Field161 = {
  SumMessageIds: "sum_messageIds",
} as const;
export type Field161 = ClosedEnum<typeof Field161>;

export const Field160 = {
  MaxId: "max_id",
} as const;
export type Field160 = ClosedEnum<typeof Field160>;

export const Field159 = {
  MinId: "min_id",
} as const;
export type Field159 = ClosedEnum<typeof Field159>;

export const Field158 = {
  AvgId: "avg_id",
} as const;
export type Field158 = ClosedEnum<typeof Field158>;

export const Field157 = {
  CountId: "count_id",
} as const;
export type Field157 = ClosedEnum<typeof Field157>;

export const Field156 = {
  SumId: "sum_id",
} as const;
export type Field156 = ClosedEnum<typeof Field156>;

export const Field155 = {
  IsInitialQuestionAnswerMonth: "isInitialQuestionAnswer_month",
} as const;
export type Field155 = ClosedEnum<typeof Field155>;

export const Field154 = {
  IsInitialQuestionAnswerWeek: "isInitialQuestionAnswer_week",
} as const;
export type Field154 = ClosedEnum<typeof Field154>;

export const Field153 = {
  IsInitialQuestionAnswerDay: "isInitialQuestionAnswer_day",
} as const;
export type Field153 = ClosedEnum<typeof Field153>;

export const Field152 = {
  IsInitialQuestionAnswerHour: "isInitialQuestionAnswer_hour",
} as const;
export type Field152 = ClosedEnum<typeof Field152>;

export const Field151 = {
  AreAIAnnotationsVerifiedMonth: "areAIAnnotationsVerified_month",
} as const;
export type Field151 = ClosedEnum<typeof Field151>;

export const Field150 = {
  AreAIAnnotationsVerifiedWeek: "areAIAnnotationsVerified_week",
} as const;
export type Field150 = ClosedEnum<typeof Field150>;

export const Field149 = {
  AreAIAnnotationsVerifiedDay: "areAIAnnotationsVerified_day",
} as const;
export type Field149 = ClosedEnum<typeof Field149>;

export const Field148 = {
  AreAIAnnotationsVerifiedHour: "areAIAnnotationsVerified_hour",
} as const;
export type Field148 = ClosedEnum<typeof Field148>;

export const Field147 = {
  ConversationIdsMonth: "conversationIds_month",
} as const;
export type Field147 = ClosedEnum<typeof Field147>;

export const Field146 = {
  ConversationIdsWeek: "conversationIds_week",
} as const;
export type Field146 = ClosedEnum<typeof Field146>;

export const Field145 = {
  ConversationIdsDay: "conversationIds_day",
} as const;
export type Field145 = ClosedEnum<typeof Field145>;

export const Field144 = {
  ConversationIdsHour: "conversationIds_hour",
} as const;
export type Field144 = ClosedEnum<typeof Field144>;

export const Field143 = {
  HasNegativeFeedbackMonth: "hasNegativeFeedback_month",
} as const;
export type Field143 = ClosedEnum<typeof Field143>;

export const Field142 = {
  HasNegativeFeedbackWeek: "hasNegativeFeedback_week",
} as const;
export type Field142 = ClosedEnum<typeof Field142>;

export const Field141 = {
  HasNegativeFeedbackDay: "hasNegativeFeedback_day",
} as const;
export type Field141 = ClosedEnum<typeof Field141>;

export const Field140 = {
  HasNegativeFeedbackHour: "hasNegativeFeedback_hour",
} as const;
export type Field140 = ClosedEnum<typeof Field140>;

export const Field139 = {
  HasPositiveFeedbackMonth: "hasPositiveFeedback_month",
} as const;
export type Field139 = ClosedEnum<typeof Field139>;

export const Field138 = {
  HasPositiveFeedbackWeek: "hasPositiveFeedback_week",
} as const;
export type Field138 = ClosedEnum<typeof Field138>;

export const Field137 = {
  HasPositiveFeedbackDay: "hasPositiveFeedback_day",
} as const;
export type Field137 = ClosedEnum<typeof Field137>;

export const Field136 = {
  HasPositiveFeedbackHour: "hasPositiveFeedback_hour",
} as const;
export type Field136 = ClosedEnum<typeof Field136>;

export const Field135 = {
  LastUpdatedMonth: "lastUpdated_month",
} as const;
export type Field135 = ClosedEnum<typeof Field135>;

export const Field134 = {
  LastUpdatedWeek: "lastUpdated_week",
} as const;
export type Field134 = ClosedEnum<typeof Field134>;

export const Field133 = {
  LastUpdatedDay: "lastUpdated_day",
} as const;
export type Field133 = ClosedEnum<typeof Field133>;

export const Field132 = {
  LastUpdatedHour: "lastUpdated_hour",
} as const;
export type Field132 = ClosedEnum<typeof Field132>;

export const Field131 = {
  LastMessageTimeMonth: "lastMessageTime_month",
} as const;
export type Field131 = ClosedEnum<typeof Field131>;

export const Field130 = {
  LastMessageTimeWeek: "lastMessageTime_week",
} as const;
export type Field130 = ClosedEnum<typeof Field130>;

export const Field129 = {
  LastMessageTimeDay: "lastMessageTime_day",
} as const;
export type Field129 = ClosedEnum<typeof Field129>;

export const Field128 = {
  LastMessageTimeHour: "lastMessageTime_hour",
} as const;
export type Field128 = ClosedEnum<typeof Field128>;

export const Field127 = {
  FirstMessageTimeMonth: "firstMessageTime_month",
} as const;
export type Field127 = ClosedEnum<typeof Field127>;

export const Field126 = {
  FirstMessageTimeWeek: "firstMessageTime_week",
} as const;
export type Field126 = ClosedEnum<typeof Field126>;

export const Field125 = {
  FirstMessageTimeDay: "firstMessageTime_day",
} as const;
export type Field125 = ClosedEnum<typeof Field125>;

export const Field124 = {
  FirstMessageTimeHour: "firstMessageTime_hour",
} as const;
export type Field124 = ClosedEnum<typeof Field124>;

export const Field123 = {
  IntegrationIdMonth: "integrationId_month",
} as const;
export type Field123 = ClosedEnum<typeof Field123>;

export const Field122 = {
  IntegrationIdWeek: "integrationId_week",
} as const;
export type Field122 = ClosedEnum<typeof Field122>;

export const Field121 = {
  IntegrationIdDay: "integrationId_day",
} as const;
export type Field121 = ClosedEnum<typeof Field121>;

export const Field120 = {
  IntegrationIdHour: "integrationId_hour",
} as const;
export type Field120 = ClosedEnum<typeof Field120>;

export const Field119 = {
  ProjectIdMonth: "projectId_month",
} as const;
export type Field119 = ClosedEnum<typeof Field119>;

export const Field118 = {
  ProjectIdWeek: "projectId_week",
} as const;
export type Field118 = ClosedEnum<typeof Field118>;

export const Field117 = {
  ProjectIdDay: "projectId_day",
} as const;
export type Field117 = ClosedEnum<typeof Field117>;

export const Field116 = {
  ProjectIdHour: "projectId_hour",
} as const;
export type Field116 = ClosedEnum<typeof Field116>;

export const Field115 = {
  QuestionTypeMonth: "questionType_month",
} as const;
export type Field115 = ClosedEnum<typeof Field115>;

export const Field114 = {
  QuestionTypeWeek: "questionType_week",
} as const;
export type Field114 = ClosedEnum<typeof Field114>;

export const Field113 = {
  QuestionTypeDay: "questionType_day",
} as const;
export type Field113 = ClosedEnum<typeof Field113>;

export const Field112 = {
  QuestionTypeHour: "questionType_hour",
} as const;
export type Field112 = ClosedEnum<typeof Field112>;

export const Field111 = {
  SentimentMonth: "sentiment_month",
} as const;
export type Field111 = ClosedEnum<typeof Field111>;

export const Field110 = {
  SentimentWeek: "sentiment_week",
} as const;
export type Field110 = ClosedEnum<typeof Field110>;

export const Field109 = {
  SentimentDay: "sentiment_day",
} as const;
export type Field109 = ClosedEnum<typeof Field109>;

export const Field108 = {
  SentimentHour: "sentiment_hour",
} as const;
export type Field108 = ClosedEnum<typeof Field108>;

export const Field107 = {
  EmotionMonth: "emotion_month",
} as const;
export type Field107 = ClosedEnum<typeof Field107>;

export const Field106 = {
  EmotionWeek: "emotion_week",
} as const;
export type Field106 = ClosedEnum<typeof Field106>;

export const Field105 = {
  EmotionDay: "emotion_day",
} as const;
export type Field105 = ClosedEnum<typeof Field105>;

export const Field104 = {
  EmotionHour: "emotion_hour",
} as const;
export type Field104 = ClosedEnum<typeof Field104>;

export const Field103 = {
  ThirdPartyEntitiesMonth: "thirdPartyEntities_month",
} as const;
export type Field103 = ClosedEnum<typeof Field103>;

export const Field102 = {
  ThirdPartyEntitiesWeek: "thirdPartyEntities_week",
} as const;
export type Field102 = ClosedEnum<typeof Field102>;

export const Field101 = {
  ThirdPartyEntitiesDay: "thirdPartyEntities_day",
} as const;
export type Field101 = ClosedEnum<typeof Field101>;

export const Field100 = {
  ThirdPartyEntitiesHour: "thirdPartyEntities_hour",
} as const;
export type Field100 = ClosedEnum<typeof Field100>;

export const Field99 = {
  FirstPartyEntitiesMonth: "firstPartyEntities_month",
} as const;
export type Field99 = ClosedEnum<typeof Field99>;

export const Field98 = {
  FirstPartyEntitiesWeek: "firstPartyEntities_week",
} as const;
export type Field98 = ClosedEnum<typeof Field98>;

export const Field97 = {
  FirstPartyEntitiesDay: "firstPartyEntities_day",
} as const;
export type Field97 = ClosedEnum<typeof Field97>;

export const Field96 = {
  FirstPartyEntitiesHour: "firstPartyEntities_hour",
} as const;
export type Field96 = ClosedEnum<typeof Field96>;

export const Field95 = {
  LanguagesMonth: "languages_month",
} as const;
export type Field95 = ClosedEnum<typeof Field95>;

export const Field94 = {
  LanguagesWeek: "languages_week",
} as const;
export type Field94 = ClosedEnum<typeof Field94>;

export const Field93 = {
  LanguagesDay: "languages_day",
} as const;
export type Field93 = ClosedEnum<typeof Field93>;

export const Field92 = {
  LanguagesHour: "languages_hour",
} as const;
export type Field92 = ClosedEnum<typeof Field92>;

export const Field91 = {
  CategoryMonth: "category_month",
} as const;
export type Field91 = ClosedEnum<typeof Field91>;

export const Field90 = {
  CategoryWeek: "category_week",
} as const;
export type Field90 = ClosedEnum<typeof Field90>;

export const Field89 = {
  CategoryDay: "category_day",
} as const;
export type Field89 = ClosedEnum<typeof Field89>;

export const Field88 = {
  CategoryHour: "category_hour",
} as const;
export type Field88 = ClosedEnum<typeof Field88>;

export const Field87 = {
  SubjectMonth: "subject_month",
} as const;
export type Field87 = ClosedEnum<typeof Field87>;

export const Field86 = {
  SubjectWeek: "subject_week",
} as const;
export type Field86 = ClosedEnum<typeof Field86>;

export const Field85 = {
  SubjectDay: "subject_day",
} as const;
export type Field85 = ClosedEnum<typeof Field85>;

export const Field84 = {
  SubjectHour: "subject_hour",
} as const;
export type Field84 = ClosedEnum<typeof Field84>;

export const Field83 = {
  GapSummaryMonth: "gapSummary_month",
} as const;
export type Field83 = ClosedEnum<typeof Field83>;

export const Field82 = {
  GapSummaryWeek: "gapSummary_week",
} as const;
export type Field82 = ClosedEnum<typeof Field82>;

export const Field81 = {
  GapSummaryDay: "gapSummary_day",
} as const;
export type Field81 = ClosedEnum<typeof Field81>;

export const Field80 = {
  GapSummaryHour: "gapSummary_hour",
} as const;
export type Field80 = ClosedEnum<typeof Field80>;

export const Field79 = {
  IsAnswerConfidentMonth: "isAnswerConfident_month",
} as const;
export type Field79 = ClosedEnum<typeof Field79>;

export const Field78 = {
  IsAnswerConfidentWeek: "isAnswerConfident_week",
} as const;
export type Field78 = ClosedEnum<typeof Field78>;

export const Field77 = {
  IsAnswerConfidentDay: "isAnswerConfident_day",
} as const;
export type Field77 = ClosedEnum<typeof Field77>;

export const Field76 = {
  IsAnswerConfidentHour: "isAnswerConfident_hour",
} as const;
export type Field76 = ClosedEnum<typeof Field76>;

export const Field75 = {
  IsFeatureSupportedMonth: "isFeatureSupported_month",
} as const;
export type Field75 = ClosedEnum<typeof Field75>;

export const Field74 = {
  IsFeatureSupportedWeek: "isFeatureSupported_week",
} as const;
export type Field74 = ClosedEnum<typeof Field74>;

export const Field73 = {
  IsFeatureSupportedDay: "isFeatureSupported_day",
} as const;
export type Field73 = ClosedEnum<typeof Field73>;

export const Field72 = {
  IsFeatureSupportedHour: "isFeatureSupported_hour",
} as const;
export type Field72 = ClosedEnum<typeof Field72>;

export const Field71 = {
  IsDocumentedMonth: "isDocumented_month",
} as const;
export type Field71 = ClosedEnum<typeof Field71>;

export const ExportQueryField70 = {
  IsDocumentedWeek: "isDocumented_week",
} as const;
export type ExportQueryField70 = ClosedEnum<typeof ExportQueryField70>;

export const ExportQueryField69 = {
  IsDocumentedDay: "isDocumented_day",
} as const;
export type ExportQueryField69 = ClosedEnum<typeof ExportQueryField69>;

export const ExportQueryField68 = {
  IsDocumentedHour: "isDocumented_hour",
} as const;
export type ExportQueryField68 = ClosedEnum<typeof ExportQueryField68>;

export const ExportQueryField67 = {
  IsClearMonth: "isClear_month",
} as const;
export type ExportQueryField67 = ClosedEnum<typeof ExportQueryField67>;

export const ExportQueryField66 = {
  IsClearWeek: "isClear_week",
} as const;
export type ExportQueryField66 = ClosedEnum<typeof ExportQueryField66>;

export const ExportQueryField65 = {
  IsClearDay: "isClear_day",
} as const;
export type ExportQueryField65 = ClosedEnum<typeof ExportQueryField65>;

export const ExportQueryField64 = {
  IsClearHour: "isClear_hour",
} as const;
export type ExportQueryField64 = ClosedEnum<typeof ExportQueryField64>;

export const ExportQueryField63 = {
  IsOnTopicMonth: "isOnTopic_month",
} as const;
export type ExportQueryField63 = ClosedEnum<typeof ExportQueryField63>;

export const ExportQueryField62 = {
  IsOnTopicWeek: "isOnTopic_week",
} as const;
export type ExportQueryField62 = ClosedEnum<typeof ExportQueryField62>;

export const ExportQueryField61 = {
  IsOnTopicDay: "isOnTopic_day",
} as const;
export type ExportQueryField61 = ClosedEnum<typeof ExportQueryField61>;

export const ExportQueryField60 = {
  IsOnTopicHour: "isOnTopic_hour",
} as const;
export type ExportQueryField60 = ClosedEnum<typeof ExportQueryField60>;

export const ExportQueryField59 = {
  AnswerMonth: "answer_month",
} as const;
export type ExportQueryField59 = ClosedEnum<typeof ExportQueryField59>;

export const ExportQueryField58 = {
  AnswerWeek: "answer_week",
} as const;
export type ExportQueryField58 = ClosedEnum<typeof ExportQueryField58>;

export const ExportQueryField57 = {
  AnswerDay: "answer_day",
} as const;
export type ExportQueryField57 = ClosedEnum<typeof ExportQueryField57>;

export const ExportQueryField56 = {
  AnswerHour: "answer_hour",
} as const;
export type ExportQueryField56 = ClosedEnum<typeof ExportQueryField56>;

export const ExportQueryField55 = {
  QuestionLengthMonth: "questionLength_month",
} as const;
export type ExportQueryField55 = ClosedEnum<typeof ExportQueryField55>;

export const ExportQueryField54 = {
  QuestionLengthWeek: "questionLength_week",
} as const;
export type ExportQueryField54 = ClosedEnum<typeof ExportQueryField54>;

export const ExportQueryField53 = {
  QuestionLengthDay: "questionLength_day",
} as const;
export type ExportQueryField53 = ClosedEnum<typeof ExportQueryField53>;

export const ExportQueryField52 = {
  QuestionLengthHour: "questionLength_hour",
} as const;
export type ExportQueryField52 = ClosedEnum<typeof ExportQueryField52>;

export const ExportQueryField51 = {
  QuestionMonth: "question_month",
} as const;
export type ExportQueryField51 = ClosedEnum<typeof ExportQueryField51>;

export const ExportQueryField50 = {
  QuestionWeek: "question_week",
} as const;
export type ExportQueryField50 = ClosedEnum<typeof ExportQueryField50>;

export const ExportQueryField49 = {
  QuestionDay: "question_day",
} as const;
export type ExportQueryField49 = ClosedEnum<typeof ExportQueryField49>;

export const ExportQueryField48 = {
  QuestionHour: "question_hour",
} as const;
export type ExportQueryField48 = ClosedEnum<typeof ExportQueryField48>;

export const ExportQueryField47 = {
  OrganizationIdMonth: "organizationId_month",
} as const;
export type ExportQueryField47 = ClosedEnum<typeof ExportQueryField47>;

export const ExportQueryField46 = {
  OrganizationIdWeek: "organizationId_week",
} as const;
export type ExportQueryField46 = ClosedEnum<typeof ExportQueryField46>;

export const ExportQueryField45 = {
  OrganizationIdDay: "organizationId_day",
} as const;
export type ExportQueryField45 = ClosedEnum<typeof ExportQueryField45>;

export const ExportQueryField44 = {
  OrganizationIdHour: "organizationId_hour",
} as const;
export type ExportQueryField44 = ClosedEnum<typeof ExportQueryField44>;

export const ExportQueryField43 = {
  MessagesCountMonth: "messagesCount_month",
} as const;
export type ExportQueryField43 = ClosedEnum<typeof ExportQueryField43>;

export const ExportQueryField42 = {
  MessagesCountWeek: "messagesCount_week",
} as const;
export type ExportQueryField42 = ClosedEnum<typeof ExportQueryField42>;

export const ExportQueryField41 = {
  MessagesCountDay: "messagesCount_day",
} as const;
export type ExportQueryField41 = ClosedEnum<typeof ExportQueryField41>;

export const ExportQueryField40 = {
  MessagesCountHour: "messagesCount_hour",
} as const;
export type ExportQueryField40 = ClosedEnum<typeof ExportQueryField40>;

export const ExportQueryField39 = {
  MessageIdsMonth: "messageIds_month",
} as const;
export type ExportQueryField39 = ClosedEnum<typeof ExportQueryField39>;

export const ExportQueryField38 = {
  MessageIdsWeek: "messageIds_week",
} as const;
export type ExportQueryField38 = ClosedEnum<typeof ExportQueryField38>;

export const ExportQueryField37 = {
  MessageIdsDay: "messageIds_day",
} as const;
export type ExportQueryField37 = ClosedEnum<typeof ExportQueryField37>;

export const ExportQueryField36 = {
  MessageIdsHour: "messageIds_hour",
} as const;
export type ExportQueryField36 = ClosedEnum<typeof ExportQueryField36>;

export const ExportQueryField35 = {
  IdMonth: "id_month",
} as const;
export type ExportQueryField35 = ClosedEnum<typeof ExportQueryField35>;

export const ExportQueryField34 = {
  IdWeek: "id_week",
} as const;
export type ExportQueryField34 = ClosedEnum<typeof ExportQueryField34>;

export const ExportQueryField33 = {
  IdDay: "id_day",
} as const;
export type ExportQueryField33 = ClosedEnum<typeof ExportQueryField33>;

export const ExportQueryField32 = {
  IdHour: "id_hour",
} as const;
export type ExportQueryField32 = ClosedEnum<typeof ExportQueryField32>;

export const ExportQueryFieldQuery31 = {
  IsInitialQuestionAnswer: "isInitialQuestionAnswer",
} as const;
export type ExportQueryFieldQuery31 = ClosedEnum<
  typeof ExportQueryFieldQuery31
>;

export const ExportQueryFieldQuery30 = {
  AreAIAnnotationsVerified: "areAIAnnotationsVerified",
} as const;
export type ExportQueryFieldQuery30 = ClosedEnum<
  typeof ExportQueryFieldQuery30
>;

export const ExportQueryFieldQuery29 = {
  ConversationIds: "conversationIds",
} as const;
export type ExportQueryFieldQuery29 = ClosedEnum<
  typeof ExportQueryFieldQuery29
>;

export const ExportQueryFieldQuery28 = {
  HasNegativeFeedback: "hasNegativeFeedback",
} as const;
export type ExportQueryFieldQuery28 = ClosedEnum<
  typeof ExportQueryFieldQuery28
>;

export const ExportQueryFieldQuery27 = {
  HasPositiveFeedback: "hasPositiveFeedback",
} as const;
export type ExportQueryFieldQuery27 = ClosedEnum<
  typeof ExportQueryFieldQuery27
>;

export const ExportQueryFieldQuery26 = {
  LastUpdated: "lastUpdated",
} as const;
export type ExportQueryFieldQuery26 = ClosedEnum<
  typeof ExportQueryFieldQuery26
>;

export const ExportQueryFieldQuery25 = {
  LastMessageTime: "lastMessageTime",
} as const;
export type ExportQueryFieldQuery25 = ClosedEnum<
  typeof ExportQueryFieldQuery25
>;

export const ExportQueryFieldQuery24 = {
  FirstMessageTime: "firstMessageTime",
} as const;
export type ExportQueryFieldQuery24 = ClosedEnum<
  typeof ExportQueryFieldQuery24
>;

export const ExportQueryFieldQuery23 = {
  IntegrationId: "integrationId",
} as const;
export type ExportQueryFieldQuery23 = ClosedEnum<
  typeof ExportQueryFieldQuery23
>;

export const ExportQueryFieldQuery22 = {
  ProjectId: "projectId",
} as const;
export type ExportQueryFieldQuery22 = ClosedEnum<
  typeof ExportQueryFieldQuery22
>;

export const ExportQueryFieldQuery21 = {
  QuestionType: "questionType",
} as const;
export type ExportQueryFieldQuery21 = ClosedEnum<
  typeof ExportQueryFieldQuery21
>;

export const ExportQueryFieldQuery20 = {
  Sentiment: "sentiment",
} as const;
export type ExportQueryFieldQuery20 = ClosedEnum<
  typeof ExportQueryFieldQuery20
>;

export const ExportQueryFieldQuery19 = {
  Emotion: "emotion",
} as const;
export type ExportQueryFieldQuery19 = ClosedEnum<
  typeof ExportQueryFieldQuery19
>;

export const ExportQueryFieldQuery18 = {
  ThirdPartyEntities: "thirdPartyEntities",
} as const;
export type ExportQueryFieldQuery18 = ClosedEnum<
  typeof ExportQueryFieldQuery18
>;

export const ExportQueryFieldQuery17 = {
  FirstPartyEntities: "firstPartyEntities",
} as const;
export type ExportQueryFieldQuery17 = ClosedEnum<
  typeof ExportQueryFieldQuery17
>;

export const ExportQueryFieldQuery16 = {
  Languages: "languages",
} as const;
export type ExportQueryFieldQuery16 = ClosedEnum<
  typeof ExportQueryFieldQuery16
>;

export const ExportQueryFieldQuery15 = {
  Category: "category",
} as const;
export type ExportQueryFieldQuery15 = ClosedEnum<
  typeof ExportQueryFieldQuery15
>;

export const ExportQueryFieldQuery14 = {
  Subject: "subject",
} as const;
export type ExportQueryFieldQuery14 = ClosedEnum<
  typeof ExportQueryFieldQuery14
>;

export const ExportQueryFieldQuery13 = {
  GapSummary: "gapSummary",
} as const;
export type ExportQueryFieldQuery13 = ClosedEnum<
  typeof ExportQueryFieldQuery13
>;

export const ExportQueryFieldQuery12 = {
  IsAnswerConfident: "isAnswerConfident",
} as const;
export type ExportQueryFieldQuery12 = ClosedEnum<
  typeof ExportQueryFieldQuery12
>;

export const ExportQueryFieldQuery11 = {
  IsFeatureSupported: "isFeatureSupported",
} as const;
export type ExportQueryFieldQuery11 = ClosedEnum<
  typeof ExportQueryFieldQuery11
>;

export const ExportQueryFieldQuery10 = {
  IsDocumented: "isDocumented",
} as const;
export type ExportQueryFieldQuery10 = ClosedEnum<
  typeof ExportQueryFieldQuery10
>;

export const ExportQueryFieldQuery9 = {
  IsClear: "isClear",
} as const;
export type ExportQueryFieldQuery9 = ClosedEnum<typeof ExportQueryFieldQuery9>;

export const ExportQueryFieldQuery8 = {
  IsOnTopic: "isOnTopic",
} as const;
export type ExportQueryFieldQuery8 = ClosedEnum<typeof ExportQueryFieldQuery8>;

export const ExportQueryFieldQuery7 = {
  Answer: "answer",
} as const;
export type ExportQueryFieldQuery7 = ClosedEnum<typeof ExportQueryFieldQuery7>;

export const ExportQueryFieldQuery6 = {
  QuestionLength: "questionLength",
} as const;
export type ExportQueryFieldQuery6 = ClosedEnum<typeof ExportQueryFieldQuery6>;

export const ExportQueryFieldQuery5 = {
  Question: "question",
} as const;
export type ExportQueryFieldQuery5 = ClosedEnum<typeof ExportQueryFieldQuery5>;

export const ExportQueryFieldQuery4 = {
  OrganizationId: "organizationId",
} as const;
export type ExportQueryFieldQuery4 = ClosedEnum<typeof ExportQueryFieldQuery4>;

export const ExportQueryFieldQuery3 = {
  MessagesCount: "messagesCount",
} as const;
export type ExportQueryFieldQuery3 = ClosedEnum<typeof ExportQueryFieldQuery3>;

export const ExportQueryFieldQuery2 = {
  MessageIds: "messageIds",
} as const;
export type ExportQueryFieldQuery2 = ClosedEnum<typeof ExportQueryFieldQuery2>;

export const ExportQueryFieldQuery1 = {
  Id: "id",
} as const;
export type ExportQueryFieldQuery1 = ClosedEnum<typeof ExportQueryFieldQuery1>;

export type ExportQueryQueryField =
  | ExportQueryFieldQuery1
  | ExportQueryFieldQuery2
  | ExportQueryFieldQuery3
  | ExportQueryFieldQuery4
  | ExportQueryFieldQuery5
  | ExportQueryFieldQuery6
  | ExportQueryFieldQuery7
  | ExportQueryFieldQuery8
  | ExportQueryFieldQuery9
  | ExportQueryFieldQuery10
  | ExportQueryFieldQuery11
  | ExportQueryFieldQuery12
  | ExportQueryFieldQuery13
  | ExportQueryFieldQuery14
  | ExportQueryFieldQuery15
  | ExportQueryFieldQuery16
  | ExportQueryFieldQuery17
  | ExportQueryFieldQuery18
  | ExportQueryFieldQuery19
  | ExportQueryFieldQuery20
  | ExportQueryFieldQuery21
  | ExportQueryFieldQuery22
  | ExportQueryFieldQuery23
  | ExportQueryFieldQuery24
  | ExportQueryFieldQuery25
  | ExportQueryFieldQuery26
  | ExportQueryFieldQuery27
  | ExportQueryFieldQuery28
  | ExportQueryFieldQuery29
  | ExportQueryFieldQuery30
  | ExportQueryFieldQuery31
  | ExportQueryField32
  | ExportQueryField33
  | ExportQueryField34
  | ExportQueryField35
  | ExportQueryField36
  | ExportQueryField37
  | ExportQueryField38
  | ExportQueryField39
  | ExportQueryField40
  | ExportQueryField41
  | ExportQueryField42
  | ExportQueryField43
  | ExportQueryField44
  | ExportQueryField45
  | ExportQueryField46
  | ExportQueryField47
  | ExportQueryField48
  | ExportQueryField49
  | ExportQueryField50
  | ExportQueryField51
  | ExportQueryField52
  | ExportQueryField53
  | ExportQueryField54
  | ExportQueryField55
  | ExportQueryField56
  | ExportQueryField57
  | ExportQueryField58
  | ExportQueryField59
  | ExportQueryField60
  | ExportQueryField61
  | ExportQueryField62
  | ExportQueryField63
  | ExportQueryField64
  | ExportQueryField65
  | ExportQueryField66
  | ExportQueryField67
  | ExportQueryField68
  | ExportQueryField69
  | ExportQueryField70
  | Field71
  | Field72
  | Field73
  | Field74
  | Field75
  | Field76
  | Field77
  | Field78
  | Field79
  | Field80
  | Field81
  | Field82
  | Field83
  | Field84
  | Field85
  | Field86
  | Field87
  | Field88
  | Field89
  | Field90
  | Field91
  | Field92
  | Field93
  | Field94
  | Field95
  | Field96
  | Field97
  | Field98
  | Field99
  | Field100
  | Field101
  | Field102
  | Field103
  | Field104
  | Field105
  | Field106
  | Field107
  | Field108
  | Field109
  | Field110
  | Field111
  | Field112
  | Field113
  | Field114
  | Field115
  | Field116
  | Field117
  | Field118
  | Field119
  | Field120
  | Field121
  | Field122
  | Field123
  | Field124
  | Field125
  | Field126
  | Field127
  | Field128
  | Field129
  | Field130
  | Field131
  | Field132
  | Field133
  | Field134
  | Field135
  | Field136
  | Field137
  | Field138
  | Field139
  | Field140
  | Field141
  | Field142
  | Field143
  | Field144
  | Field145
  | Field146
  | Field147
  | Field148
  | Field149
  | Field150
  | Field151
  | Field152
  | Field153
  | Field154
  | Field155
  | Field156
  | Field157
  | Field158
  | Field159
  | Field160
  | Field161
  | Field162
  | Field163
  | Field164
  | Field165
  | Field166
  | Field167
  | Field168
  | Field169
  | Field170
  | Field171
  | Field172
  | Field173
  | Field174
  | Field175
  | Field176
  | Field177
  | Field178
  | Field179
  | Field180
  | Field181
  | Field182
  | Field183
  | Field184
  | Field185
  | Field186
  | Field187
  | Field188
  | Field189
  | Field190
  | Field191
  | Field192
  | Field193
  | Field194
  | Field195
  | Field196
  | Field197
  | Field198
  | Field199
  | Field200
  | Field201
  | Field202
  | Field203
  | Field204
  | Field205
  | Field206
  | Field207
  | Field208
  | Field209
  | Field210
  | Field211
  | Field212
  | Field213
  | Field214
  | Field215
  | Field216
  | Field217
  | Field218
  | Field219
  | Field220
  | Field221
  | Field222
  | Field223
  | Field224
  | Field225
  | Field226
  | Field227
  | Field228
  | Field229
  | Field230
  | Field231
  | Field232
  | Field233
  | Field234
  | Field235
  | Field236
  | Field237
  | Field238
  | Field239
  | Field240
  | Field241
  | Field242
  | Field243
  | Field244
  | Field245
  | Field246
  | Field247
  | Field248
  | Field249
  | Field250
  | Field251
  | Field252
  | Field253
  | Field254
  | Field255
  | Field256
  | Field257
  | Field258
  | Field259
  | Field260
  | Field261
  | Field262
  | Field263
  | Field264
  | Field265
  | Field266
  | Field267
  | Field268
  | Field269
  | Field270
  | Field271
  | Field272
  | Field273
  | Field274
  | Field275
  | Field276
  | Field277
  | Field278
  | Field279
  | Field280
  | Field281
  | Field282
  | Field283
  | Field284
  | Field285
  | Field286
  | Field287
  | Field288
  | Field289
  | Field290
  | Field291
  | Field292
  | Field293
  | Field294
  | Field295
  | Field296
  | Field297
  | Field298
  | Field299
  | Field300
  | Field301
  | Field302
  | Field303
  | Field304
  | Field305
  | Field306
  | Field307
  | Field308
  | Field309
  | Field310;

export const ExportQueryDirection2 = {
  Desc: "desc",
} as const;
export type ExportQueryDirection2 = ClosedEnum<typeof ExportQueryDirection2>;

export const ExportQueryDirection1 = {
  Asc: "asc",
} as const;
export type ExportQueryDirection1 = ClosedEnum<typeof ExportQueryDirection1>;

export type ExportQueryDirection =
  | ExportQueryDirection1
  | ExportQueryDirection2;

export type ExportQueryOrderBy = {
  field:
    | ExportQueryFieldQuery1
    | ExportQueryFieldQuery2
    | ExportQueryFieldQuery3
    | ExportQueryFieldQuery4
    | ExportQueryFieldQuery5
    | ExportQueryFieldQuery6
    | ExportQueryFieldQuery7
    | ExportQueryFieldQuery8
    | ExportQueryFieldQuery9
    | ExportQueryFieldQuery10
    | ExportQueryFieldQuery11
    | ExportQueryFieldQuery12
    | ExportQueryFieldQuery13
    | ExportQueryFieldQuery14
    | ExportQueryFieldQuery15
    | ExportQueryFieldQuery16
    | ExportQueryFieldQuery17
    | ExportQueryFieldQuery18
    | ExportQueryFieldQuery19
    | ExportQueryFieldQuery20
    | ExportQueryFieldQuery21
    | ExportQueryFieldQuery22
    | ExportQueryFieldQuery23
    | ExportQueryFieldQuery24
    | ExportQueryFieldQuery25
    | ExportQueryFieldQuery26
    | ExportQueryFieldQuery27
    | ExportQueryFieldQuery28
    | ExportQueryFieldQuery29
    | ExportQueryFieldQuery30
    | ExportQueryFieldQuery31
    | ExportQueryField32
    | ExportQueryField33
    | ExportQueryField34
    | ExportQueryField35
    | ExportQueryField36
    | ExportQueryField37
    | ExportQueryField38
    | ExportQueryField39
    | ExportQueryField40
    | ExportQueryField41
    | ExportQueryField42
    | ExportQueryField43
    | ExportQueryField44
    | ExportQueryField45
    | ExportQueryField46
    | ExportQueryField47
    | ExportQueryField48
    | ExportQueryField49
    | ExportQueryField50
    | ExportQueryField51
    | ExportQueryField52
    | ExportQueryField53
    | ExportQueryField54
    | ExportQueryField55
    | ExportQueryField56
    | ExportQueryField57
    | ExportQueryField58
    | ExportQueryField59
    | ExportQueryField60
    | ExportQueryField61
    | ExportQueryField62
    | ExportQueryField63
    | ExportQueryField64
    | ExportQueryField65
    | ExportQueryField66
    | ExportQueryField67
    | ExportQueryField68
    | ExportQueryField69
    | ExportQueryField70
    | Field71
    | Field72
    | Field73
    | Field74
    | Field75
    | Field76
    | Field77
    | Field78
    | Field79
    | Field80
    | Field81
    | Field82
    | Field83
    | Field84
    | Field85
    | Field86
    | Field87
    | Field88
    | Field89
    | Field90
    | Field91
    | Field92
    | Field93
    | Field94
    | Field95
    | Field96
    | Field97
    | Field98
    | Field99
    | Field100
    | Field101
    | Field102
    | Field103
    | Field104
    | Field105
    | Field106
    | Field107
    | Field108
    | Field109
    | Field110
    | Field111
    | Field112
    | Field113
    | Field114
    | Field115
    | Field116
    | Field117
    | Field118
    | Field119
    | Field120
    | Field121
    | Field122
    | Field123
    | Field124
    | Field125
    | Field126
    | Field127
    | Field128
    | Field129
    | Field130
    | Field131
    | Field132
    | Field133
    | Field134
    | Field135
    | Field136
    | Field137
    | Field138
    | Field139
    | Field140
    | Field141
    | Field142
    | Field143
    | Field144
    | Field145
    | Field146
    | Field147
    | Field148
    | Field149
    | Field150
    | Field151
    | Field152
    | Field153
    | Field154
    | Field155
    | Field156
    | Field157
    | Field158
    | Field159
    | Field160
    | Field161
    | Field162
    | Field163
    | Field164
    | Field165
    | Field166
    | Field167
    | Field168
    | Field169
    | Field170
    | Field171
    | Field172
    | Field173
    | Field174
    | Field175
    | Field176
    | Field177
    | Field178
    | Field179
    | Field180
    | Field181
    | Field182
    | Field183
    | Field184
    | Field185
    | Field186
    | Field187
    | Field188
    | Field189
    | Field190
    | Field191
    | Field192
    | Field193
    | Field194
    | Field195
    | Field196
    | Field197
    | Field198
    | Field199
    | Field200
    | Field201
    | Field202
    | Field203
    | Field204
    | Field205
    | Field206
    | Field207
    | Field208
    | Field209
    | Field210
    | Field211
    | Field212
    | Field213
    | Field214
    | Field215
    | Field216
    | Field217
    | Field218
    | Field219
    | Field220
    | Field221
    | Field222
    | Field223
    | Field224
    | Field225
    | Field226
    | Field227
    | Field228
    | Field229
    | Field230
    | Field231
    | Field232
    | Field233
    | Field234
    | Field235
    | Field236
    | Field237
    | Field238
    | Field239
    | Field240
    | Field241
    | Field242
    | Field243
    | Field244
    | Field245
    | Field246
    | Field247
    | Field248
    | Field249
    | Field250
    | Field251
    | Field252
    | Field253
    | Field254
    | Field255
    | Field256
    | Field257
    | Field258
    | Field259
    | Field260
    | Field261
    | Field262
    | Field263
    | Field264
    | Field265
    | Field266
    | Field267
    | Field268
    | Field269
    | Field270
    | Field271
    | Field272
    | Field273
    | Field274
    | Field275
    | Field276
    | Field277
    | Field278
    | Field279
    | Field280
    | Field281
    | Field282
    | Field283
    | Field284
    | Field285
    | Field286
    | Field287
    | Field288
    | Field289
    | Field290
    | Field291
    | Field292
    | Field293
    | Field294
    | Field295
    | Field296
    | Field297
    | Field298
    | Field299
    | Field300
    | Field301
    | Field302
    | Field303
    | Field304
    | Field305
    | Field306
    | Field307
    | Field308
    | Field309
    | Field310;
  direction: ExportQueryDirection1 | ExportQueryDirection2;
};

/**
 * Note: The maximum size of the request body is 2 MB.
 */
export type ExportQueryRequestBody = {
  select?:
    | Array<
      | (components.SimpleFieldSelection & { type: "field" })
      | (components.AggregationSelection & { type: "aggregation" })
      | (components.TimeBasedGroupBySelection & { type: "time" })
    >
    | undefined;
  groupBy?: Array<ExportQueryGroupBy> | undefined;
  where?: components.SemanticThreadFilter | undefined;
  orderBy?: Array<ExportQueryOrderBy> | undefined;
};

export type ExportQueryRequest = {
  table: string;
  /**
   * Note: The maximum size of the request body is 2 MB.
   */
  requestBody: ExportQueryRequestBody;
};

/** @internal */
export const ExportQuerySelect$inboundSchema: z.ZodType<
  ExportQuerySelect,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.SimpleFieldSelection$inboundSchema.and(
    z.object({ type: z.literal("field") }).transform((v) => ({ type: v.type })),
  ),
  components.AggregationSelection$inboundSchema.and(
    z.object({ type: z.literal("aggregation") }).transform((v) => ({
      type: v.type,
    })),
  ),
  components.TimeBasedGroupBySelection$inboundSchema.and(
    z.object({ type: z.literal("time") }).transform((v) => ({ type: v.type })),
  ),
]);

/** @internal */
export type ExportQuerySelect$Outbound =
  | (components.SimpleFieldSelection$Outbound & { type: "field" })
  | (components.AggregationSelection$Outbound & { type: "aggregation" })
  | (components.TimeBasedGroupBySelection$Outbound & { type: "time" });

/** @internal */
export const ExportQuerySelect$outboundSchema: z.ZodType<
  ExportQuerySelect$Outbound,
  z.ZodTypeDef,
  ExportQuerySelect
> = z.union([
  components.SimpleFieldSelection$outboundSchema.and(
    z.object({ type: z.literal("field") }).transform((v) => ({ type: v.type })),
  ),
  components.AggregationSelection$outboundSchema.and(
    z.object({ type: z.literal("aggregation") }).transform((v) => ({
      type: v.type,
    })),
  ),
  components.TimeBasedGroupBySelection$outboundSchema.and(
    z.object({ type: z.literal("time") }).transform((v) => ({ type: v.type })),
  ),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQuerySelect$ {
  /** @deprecated use `ExportQuerySelect$inboundSchema` instead. */
  export const inboundSchema = ExportQuerySelect$inboundSchema;
  /** @deprecated use `ExportQuerySelect$outboundSchema` instead. */
  export const outboundSchema = ExportQuerySelect$outboundSchema;
  /** @deprecated use `ExportQuerySelect$Outbound` instead. */
  export type Outbound = ExportQuerySelect$Outbound;
}

export function exportQuerySelectToJSON(
  exportQuerySelect: ExportQuerySelect,
): string {
  return JSON.stringify(
    ExportQuerySelect$outboundSchema.parse(exportQuerySelect),
  );
}

export function exportQuerySelectFromJSON(
  jsonString: string,
): SafeParseResult<ExportQuerySelect, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ExportQuerySelect$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ExportQuerySelect' from JSON`,
  );
}

/** @internal */
export const ExportQueryField31$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField31
> = z.nativeEnum(ExportQueryField31);

/** @internal */
export const ExportQueryField31$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField31
> = ExportQueryField31$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField31$ {
  /** @deprecated use `ExportQueryField31$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField31$inboundSchema;
  /** @deprecated use `ExportQueryField31$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField31$outboundSchema;
}

/** @internal */
export const ExportQueryField30$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField30
> = z.nativeEnum(ExportQueryField30);

/** @internal */
export const ExportQueryField30$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField30
> = ExportQueryField30$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField30$ {
  /** @deprecated use `ExportQueryField30$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField30$inboundSchema;
  /** @deprecated use `ExportQueryField30$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField30$outboundSchema;
}

/** @internal */
export const ExportQueryField29$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField29
> = z.nativeEnum(ExportQueryField29);

/** @internal */
export const ExportQueryField29$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField29
> = ExportQueryField29$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField29$ {
  /** @deprecated use `ExportQueryField29$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField29$inboundSchema;
  /** @deprecated use `ExportQueryField29$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField29$outboundSchema;
}

/** @internal */
export const ExportQueryField28$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField28
> = z.nativeEnum(ExportQueryField28);

/** @internal */
export const ExportQueryField28$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField28
> = ExportQueryField28$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField28$ {
  /** @deprecated use `ExportQueryField28$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField28$inboundSchema;
  /** @deprecated use `ExportQueryField28$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField28$outboundSchema;
}

/** @internal */
export const ExportQueryField27$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField27
> = z.nativeEnum(ExportQueryField27);

/** @internal */
export const ExportQueryField27$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField27
> = ExportQueryField27$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField27$ {
  /** @deprecated use `ExportQueryField27$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField27$inboundSchema;
  /** @deprecated use `ExportQueryField27$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField27$outboundSchema;
}

/** @internal */
export const ExportQueryField26$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField26
> = z.nativeEnum(ExportQueryField26);

/** @internal */
export const ExportQueryField26$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField26
> = ExportQueryField26$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField26$ {
  /** @deprecated use `ExportQueryField26$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField26$inboundSchema;
  /** @deprecated use `ExportQueryField26$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField26$outboundSchema;
}

/** @internal */
export const ExportQueryField25$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField25
> = z.nativeEnum(ExportQueryField25);

/** @internal */
export const ExportQueryField25$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField25
> = ExportQueryField25$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField25$ {
  /** @deprecated use `ExportQueryField25$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField25$inboundSchema;
  /** @deprecated use `ExportQueryField25$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField25$outboundSchema;
}

/** @internal */
export const ExportQueryField24$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField24
> = z.nativeEnum(ExportQueryField24);

/** @internal */
export const ExportQueryField24$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField24
> = ExportQueryField24$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField24$ {
  /** @deprecated use `ExportQueryField24$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField24$inboundSchema;
  /** @deprecated use `ExportQueryField24$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField24$outboundSchema;
}

/** @internal */
export const ExportQueryField23$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField23
> = z.nativeEnum(ExportQueryField23);

/** @internal */
export const ExportQueryField23$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField23
> = ExportQueryField23$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField23$ {
  /** @deprecated use `ExportQueryField23$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField23$inboundSchema;
  /** @deprecated use `ExportQueryField23$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField23$outboundSchema;
}

/** @internal */
export const ExportQueryField22$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField22
> = z.nativeEnum(ExportQueryField22);

/** @internal */
export const ExportQueryField22$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField22
> = ExportQueryField22$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField22$ {
  /** @deprecated use `ExportQueryField22$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField22$inboundSchema;
  /** @deprecated use `ExportQueryField22$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField22$outboundSchema;
}

/** @internal */
export const ExportQueryField21$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField21
> = z.nativeEnum(ExportQueryField21);

/** @internal */
export const ExportQueryField21$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField21
> = ExportQueryField21$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField21$ {
  /** @deprecated use `ExportQueryField21$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField21$inboundSchema;
  /** @deprecated use `ExportQueryField21$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField21$outboundSchema;
}

/** @internal */
export const ExportQueryField20$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField20
> = z.nativeEnum(ExportQueryField20);

/** @internal */
export const ExportQueryField20$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField20
> = ExportQueryField20$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField20$ {
  /** @deprecated use `ExportQueryField20$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField20$inboundSchema;
  /** @deprecated use `ExportQueryField20$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField20$outboundSchema;
}

/** @internal */
export const ExportQueryField19$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField19
> = z.nativeEnum(ExportQueryField19);

/** @internal */
export const ExportQueryField19$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField19
> = ExportQueryField19$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField19$ {
  /** @deprecated use `ExportQueryField19$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField19$inboundSchema;
  /** @deprecated use `ExportQueryField19$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField19$outboundSchema;
}

/** @internal */
export const ExportQueryField18$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField18
> = z.nativeEnum(ExportQueryField18);

/** @internal */
export const ExportQueryField18$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField18
> = ExportQueryField18$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField18$ {
  /** @deprecated use `ExportQueryField18$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField18$inboundSchema;
  /** @deprecated use `ExportQueryField18$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField18$outboundSchema;
}

/** @internal */
export const ExportQueryField17$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField17
> = z.nativeEnum(ExportQueryField17);

/** @internal */
export const ExportQueryField17$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField17
> = ExportQueryField17$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField17$ {
  /** @deprecated use `ExportQueryField17$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField17$inboundSchema;
  /** @deprecated use `ExportQueryField17$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField17$outboundSchema;
}

/** @internal */
export const ExportQueryField16$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField16
> = z.nativeEnum(ExportQueryField16);

/** @internal */
export const ExportQueryField16$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField16
> = ExportQueryField16$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField16$ {
  /** @deprecated use `ExportQueryField16$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField16$inboundSchema;
  /** @deprecated use `ExportQueryField16$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField16$outboundSchema;
}

/** @internal */
export const ExportQueryField15$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField15
> = z.nativeEnum(ExportQueryField15);

/** @internal */
export const ExportQueryField15$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField15
> = ExportQueryField15$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField15$ {
  /** @deprecated use `ExportQueryField15$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField15$inboundSchema;
  /** @deprecated use `ExportQueryField15$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField15$outboundSchema;
}

/** @internal */
export const ExportQueryField14$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField14
> = z.nativeEnum(ExportQueryField14);

/** @internal */
export const ExportQueryField14$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField14
> = ExportQueryField14$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField14$ {
  /** @deprecated use `ExportQueryField14$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField14$inboundSchema;
  /** @deprecated use `ExportQueryField14$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField14$outboundSchema;
}

/** @internal */
export const ExportQueryField13$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField13
> = z.nativeEnum(ExportQueryField13);

/** @internal */
export const ExportQueryField13$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField13
> = ExportQueryField13$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField13$ {
  /** @deprecated use `ExportQueryField13$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField13$inboundSchema;
  /** @deprecated use `ExportQueryField13$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField13$outboundSchema;
}

/** @internal */
export const ExportQueryField12$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField12
> = z.nativeEnum(ExportQueryField12);

/** @internal */
export const ExportQueryField12$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField12
> = ExportQueryField12$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField12$ {
  /** @deprecated use `ExportQueryField12$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField12$inboundSchema;
  /** @deprecated use `ExportQueryField12$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField12$outboundSchema;
}

/** @internal */
export const ExportQueryField11$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField11
> = z.nativeEnum(ExportQueryField11);

/** @internal */
export const ExportQueryField11$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField11
> = ExportQueryField11$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField11$ {
  /** @deprecated use `ExportQueryField11$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField11$inboundSchema;
  /** @deprecated use `ExportQueryField11$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField11$outboundSchema;
}

/** @internal */
export const ExportQueryField10$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField10
> = z.nativeEnum(ExportQueryField10);

/** @internal */
export const ExportQueryField10$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField10
> = ExportQueryField10$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField10$ {
  /** @deprecated use `ExportQueryField10$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField10$inboundSchema;
  /** @deprecated use `ExportQueryField10$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField10$outboundSchema;
}

/** @internal */
export const ExportQueryField9$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField9
> = z.nativeEnum(ExportQueryField9);

/** @internal */
export const ExportQueryField9$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField9
> = ExportQueryField9$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField9$ {
  /** @deprecated use `ExportQueryField9$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField9$inboundSchema;
  /** @deprecated use `ExportQueryField9$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField9$outboundSchema;
}

/** @internal */
export const ExportQueryField8$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField8
> = z.nativeEnum(ExportQueryField8);

/** @internal */
export const ExportQueryField8$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField8
> = ExportQueryField8$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField8$ {
  /** @deprecated use `ExportQueryField8$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField8$inboundSchema;
  /** @deprecated use `ExportQueryField8$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField8$outboundSchema;
}

/** @internal */
export const ExportQueryField7$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField7
> = z.nativeEnum(ExportQueryField7);

/** @internal */
export const ExportQueryField7$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField7
> = ExportQueryField7$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField7$ {
  /** @deprecated use `ExportQueryField7$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField7$inboundSchema;
  /** @deprecated use `ExportQueryField7$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField7$outboundSchema;
}

/** @internal */
export const ExportQueryField6$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField6
> = z.nativeEnum(ExportQueryField6);

/** @internal */
export const ExportQueryField6$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField6
> = ExportQueryField6$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField6$ {
  /** @deprecated use `ExportQueryField6$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField6$inboundSchema;
  /** @deprecated use `ExportQueryField6$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField6$outboundSchema;
}

/** @internal */
export const ExportQueryField5$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField5
> = z.nativeEnum(ExportQueryField5);

/** @internal */
export const ExportQueryField5$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField5
> = ExportQueryField5$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField5$ {
  /** @deprecated use `ExportQueryField5$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField5$inboundSchema;
  /** @deprecated use `ExportQueryField5$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField5$outboundSchema;
}

/** @internal */
export const ExportQueryField4$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField4
> = z.nativeEnum(ExportQueryField4);

/** @internal */
export const ExportQueryField4$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField4
> = ExportQueryField4$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField4$ {
  /** @deprecated use `ExportQueryField4$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField4$inboundSchema;
  /** @deprecated use `ExportQueryField4$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField4$outboundSchema;
}

/** @internal */
export const ExportQueryField3$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField3
> = z.nativeEnum(ExportQueryField3);

/** @internal */
export const ExportQueryField3$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField3
> = ExportQueryField3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField3$ {
  /** @deprecated use `ExportQueryField3$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField3$inboundSchema;
  /** @deprecated use `ExportQueryField3$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField3$outboundSchema;
}

/** @internal */
export const ExportQueryField2$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField2
> = z.nativeEnum(ExportQueryField2);

/** @internal */
export const ExportQueryField2$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField2
> = ExportQueryField2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField2$ {
  /** @deprecated use `ExportQueryField2$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField2$inboundSchema;
  /** @deprecated use `ExportQueryField2$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField2$outboundSchema;
}

/** @internal */
export const ExportQueryField1$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField1
> = z.nativeEnum(ExportQueryField1);

/** @internal */
export const ExportQueryField1$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField1
> = ExportQueryField1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField1$ {
  /** @deprecated use `ExportQueryField1$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField1$inboundSchema;
  /** @deprecated use `ExportQueryField1$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField1$outboundSchema;
}

/** @internal */
export const ExportQueryField$inboundSchema: z.ZodType<
  ExportQueryField,
  z.ZodTypeDef,
  unknown
> = z.union([
  ExportQueryField1$inboundSchema,
  ExportQueryField2$inboundSchema,
  ExportQueryField3$inboundSchema,
  ExportQueryField4$inboundSchema,
  ExportQueryField5$inboundSchema,
  ExportQueryField6$inboundSchema,
  ExportQueryField7$inboundSchema,
  ExportQueryField8$inboundSchema,
  ExportQueryField9$inboundSchema,
  ExportQueryField10$inboundSchema,
  ExportQueryField11$inboundSchema,
  ExportQueryField12$inboundSchema,
  ExportQueryField13$inboundSchema,
  ExportQueryField14$inboundSchema,
  ExportQueryField15$inboundSchema,
  ExportQueryField16$inboundSchema,
  ExportQueryField17$inboundSchema,
  ExportQueryField18$inboundSchema,
  ExportQueryField19$inboundSchema,
  ExportQueryField20$inboundSchema,
  ExportQueryField21$inboundSchema,
  ExportQueryField22$inboundSchema,
  ExportQueryField23$inboundSchema,
  ExportQueryField24$inboundSchema,
  ExportQueryField25$inboundSchema,
  ExportQueryField26$inboundSchema,
  ExportQueryField27$inboundSchema,
  ExportQueryField28$inboundSchema,
  ExportQueryField29$inboundSchema,
  ExportQueryField30$inboundSchema,
  ExportQueryField31$inboundSchema,
]);

/** @internal */
export type ExportQueryField$Outbound =
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string;

/** @internal */
export const ExportQueryField$outboundSchema: z.ZodType<
  ExportQueryField$Outbound,
  z.ZodTypeDef,
  ExportQueryField
> = z.union([
  ExportQueryField1$outboundSchema,
  ExportQueryField2$outboundSchema,
  ExportQueryField3$outboundSchema,
  ExportQueryField4$outboundSchema,
  ExportQueryField5$outboundSchema,
  ExportQueryField6$outboundSchema,
  ExportQueryField7$outboundSchema,
  ExportQueryField8$outboundSchema,
  ExportQueryField9$outboundSchema,
  ExportQueryField10$outboundSchema,
  ExportQueryField11$outboundSchema,
  ExportQueryField12$outboundSchema,
  ExportQueryField13$outboundSchema,
  ExportQueryField14$outboundSchema,
  ExportQueryField15$outboundSchema,
  ExportQueryField16$outboundSchema,
  ExportQueryField17$outboundSchema,
  ExportQueryField18$outboundSchema,
  ExportQueryField19$outboundSchema,
  ExportQueryField20$outboundSchema,
  ExportQueryField21$outboundSchema,
  ExportQueryField22$outboundSchema,
  ExportQueryField23$outboundSchema,
  ExportQueryField24$outboundSchema,
  ExportQueryField25$outboundSchema,
  ExportQueryField26$outboundSchema,
  ExportQueryField27$outboundSchema,
  ExportQueryField28$outboundSchema,
  ExportQueryField29$outboundSchema,
  ExportQueryField30$outboundSchema,
  ExportQueryField31$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField$ {
  /** @deprecated use `ExportQueryField$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField$inboundSchema;
  /** @deprecated use `ExportQueryField$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField$outboundSchema;
  /** @deprecated use `ExportQueryField$Outbound` instead. */
  export type Outbound = ExportQueryField$Outbound;
}

export function exportQueryFieldToJSON(
  exportQueryField: ExportQueryField,
): string {
  return JSON.stringify(
    ExportQueryField$outboundSchema.parse(exportQueryField),
  );
}

export function exportQueryFieldFromJSON(
  jsonString: string,
): SafeParseResult<ExportQueryField, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ExportQueryField$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ExportQueryField' from JSON`,
  );
}

/** @internal */
export const ExportQueryGroupBy$inboundSchema: z.ZodType<
  ExportQueryGroupBy,
  z.ZodTypeDef,
  unknown
> = z.object({
  field: z.union([
    ExportQueryField1$inboundSchema,
    ExportQueryField2$inboundSchema,
    ExportQueryField3$inboundSchema,
    ExportQueryField4$inboundSchema,
    ExportQueryField5$inboundSchema,
    ExportQueryField6$inboundSchema,
    ExportQueryField7$inboundSchema,
    ExportQueryField8$inboundSchema,
    ExportQueryField9$inboundSchema,
    ExportQueryField10$inboundSchema,
    ExportQueryField11$inboundSchema,
    ExportQueryField12$inboundSchema,
    ExportQueryField13$inboundSchema,
    ExportQueryField14$inboundSchema,
    ExportQueryField15$inboundSchema,
    ExportQueryField16$inboundSchema,
    ExportQueryField17$inboundSchema,
    ExportQueryField18$inboundSchema,
    ExportQueryField19$inboundSchema,
    ExportQueryField20$inboundSchema,
    ExportQueryField21$inboundSchema,
    ExportQueryField22$inboundSchema,
    ExportQueryField23$inboundSchema,
    ExportQueryField24$inboundSchema,
    ExportQueryField25$inboundSchema,
    ExportQueryField26$inboundSchema,
    ExportQueryField27$inboundSchema,
    ExportQueryField28$inboundSchema,
    ExportQueryField29$inboundSchema,
    ExportQueryField30$inboundSchema,
    ExportQueryField31$inboundSchema,
  ]),
});

/** @internal */
export type ExportQueryGroupBy$Outbound = {
  field:
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string;
};

/** @internal */
export const ExportQueryGroupBy$outboundSchema: z.ZodType<
  ExportQueryGroupBy$Outbound,
  z.ZodTypeDef,
  ExportQueryGroupBy
> = z.object({
  field: z.union([
    ExportQueryField1$outboundSchema,
    ExportQueryField2$outboundSchema,
    ExportQueryField3$outboundSchema,
    ExportQueryField4$outboundSchema,
    ExportQueryField5$outboundSchema,
    ExportQueryField6$outboundSchema,
    ExportQueryField7$outboundSchema,
    ExportQueryField8$outboundSchema,
    ExportQueryField9$outboundSchema,
    ExportQueryField10$outboundSchema,
    ExportQueryField11$outboundSchema,
    ExportQueryField12$outboundSchema,
    ExportQueryField13$outboundSchema,
    ExportQueryField14$outboundSchema,
    ExportQueryField15$outboundSchema,
    ExportQueryField16$outboundSchema,
    ExportQueryField17$outboundSchema,
    ExportQueryField18$outboundSchema,
    ExportQueryField19$outboundSchema,
    ExportQueryField20$outboundSchema,
    ExportQueryField21$outboundSchema,
    ExportQueryField22$outboundSchema,
    ExportQueryField23$outboundSchema,
    ExportQueryField24$outboundSchema,
    ExportQueryField25$outboundSchema,
    ExportQueryField26$outboundSchema,
    ExportQueryField27$outboundSchema,
    ExportQueryField28$outboundSchema,
    ExportQueryField29$outboundSchema,
    ExportQueryField30$outboundSchema,
    ExportQueryField31$outboundSchema,
  ]),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryGroupBy$ {
  /** @deprecated use `ExportQueryGroupBy$inboundSchema` instead. */
  export const inboundSchema = ExportQueryGroupBy$inboundSchema;
  /** @deprecated use `ExportQueryGroupBy$outboundSchema` instead. */
  export const outboundSchema = ExportQueryGroupBy$outboundSchema;
  /** @deprecated use `ExportQueryGroupBy$Outbound` instead. */
  export type Outbound = ExportQueryGroupBy$Outbound;
}

export function exportQueryGroupByToJSON(
  exportQueryGroupBy: ExportQueryGroupBy,
): string {
  return JSON.stringify(
    ExportQueryGroupBy$outboundSchema.parse(exportQueryGroupBy),
  );
}

export function exportQueryGroupByFromJSON(
  jsonString: string,
): SafeParseResult<ExportQueryGroupBy, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ExportQueryGroupBy$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ExportQueryGroupBy' from JSON`,
  );
}

/** @internal */
export const Field310$inboundSchema: z.ZodNativeEnum<typeof Field310> = z
  .nativeEnum(Field310);

/** @internal */
export const Field310$outboundSchema: z.ZodNativeEnum<typeof Field310> =
  Field310$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field310$ {
  /** @deprecated use `Field310$inboundSchema` instead. */
  export const inboundSchema = Field310$inboundSchema;
  /** @deprecated use `Field310$outboundSchema` instead. */
  export const outboundSchema = Field310$outboundSchema;
}

/** @internal */
export const Field309$inboundSchema: z.ZodNativeEnum<typeof Field309> = z
  .nativeEnum(Field309);

/** @internal */
export const Field309$outboundSchema: z.ZodNativeEnum<typeof Field309> =
  Field309$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field309$ {
  /** @deprecated use `Field309$inboundSchema` instead. */
  export const inboundSchema = Field309$inboundSchema;
  /** @deprecated use `Field309$outboundSchema` instead. */
  export const outboundSchema = Field309$outboundSchema;
}

/** @internal */
export const Field308$inboundSchema: z.ZodNativeEnum<typeof Field308> = z
  .nativeEnum(Field308);

/** @internal */
export const Field308$outboundSchema: z.ZodNativeEnum<typeof Field308> =
  Field308$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field308$ {
  /** @deprecated use `Field308$inboundSchema` instead. */
  export const inboundSchema = Field308$inboundSchema;
  /** @deprecated use `Field308$outboundSchema` instead. */
  export const outboundSchema = Field308$outboundSchema;
}

/** @internal */
export const Field307$inboundSchema: z.ZodNativeEnum<typeof Field307> = z
  .nativeEnum(Field307);

/** @internal */
export const Field307$outboundSchema: z.ZodNativeEnum<typeof Field307> =
  Field307$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field307$ {
  /** @deprecated use `Field307$inboundSchema` instead. */
  export const inboundSchema = Field307$inboundSchema;
  /** @deprecated use `Field307$outboundSchema` instead. */
  export const outboundSchema = Field307$outboundSchema;
}

/** @internal */
export const Field306$inboundSchema: z.ZodNativeEnum<typeof Field306> = z
  .nativeEnum(Field306);

/** @internal */
export const Field306$outboundSchema: z.ZodNativeEnum<typeof Field306> =
  Field306$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field306$ {
  /** @deprecated use `Field306$inboundSchema` instead. */
  export const inboundSchema = Field306$inboundSchema;
  /** @deprecated use `Field306$outboundSchema` instead. */
  export const outboundSchema = Field306$outboundSchema;
}

/** @internal */
export const Field305$inboundSchema: z.ZodNativeEnum<typeof Field305> = z
  .nativeEnum(Field305);

/** @internal */
export const Field305$outboundSchema: z.ZodNativeEnum<typeof Field305> =
  Field305$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field305$ {
  /** @deprecated use `Field305$inboundSchema` instead. */
  export const inboundSchema = Field305$inboundSchema;
  /** @deprecated use `Field305$outboundSchema` instead. */
  export const outboundSchema = Field305$outboundSchema;
}

/** @internal */
export const Field304$inboundSchema: z.ZodNativeEnum<typeof Field304> = z
  .nativeEnum(Field304);

/** @internal */
export const Field304$outboundSchema: z.ZodNativeEnum<typeof Field304> =
  Field304$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field304$ {
  /** @deprecated use `Field304$inboundSchema` instead. */
  export const inboundSchema = Field304$inboundSchema;
  /** @deprecated use `Field304$outboundSchema` instead. */
  export const outboundSchema = Field304$outboundSchema;
}

/** @internal */
export const Field303$inboundSchema: z.ZodNativeEnum<typeof Field303> = z
  .nativeEnum(Field303);

/** @internal */
export const Field303$outboundSchema: z.ZodNativeEnum<typeof Field303> =
  Field303$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field303$ {
  /** @deprecated use `Field303$inboundSchema` instead. */
  export const inboundSchema = Field303$inboundSchema;
  /** @deprecated use `Field303$outboundSchema` instead. */
  export const outboundSchema = Field303$outboundSchema;
}

/** @internal */
export const Field302$inboundSchema: z.ZodNativeEnum<typeof Field302> = z
  .nativeEnum(Field302);

/** @internal */
export const Field302$outboundSchema: z.ZodNativeEnum<typeof Field302> =
  Field302$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field302$ {
  /** @deprecated use `Field302$inboundSchema` instead. */
  export const inboundSchema = Field302$inboundSchema;
  /** @deprecated use `Field302$outboundSchema` instead. */
  export const outboundSchema = Field302$outboundSchema;
}

/** @internal */
export const Field301$inboundSchema: z.ZodNativeEnum<typeof Field301> = z
  .nativeEnum(Field301);

/** @internal */
export const Field301$outboundSchema: z.ZodNativeEnum<typeof Field301> =
  Field301$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field301$ {
  /** @deprecated use `Field301$inboundSchema` instead. */
  export const inboundSchema = Field301$inboundSchema;
  /** @deprecated use `Field301$outboundSchema` instead. */
  export const outboundSchema = Field301$outboundSchema;
}

/** @internal */
export const Field300$inboundSchema: z.ZodNativeEnum<typeof Field300> = z
  .nativeEnum(Field300);

/** @internal */
export const Field300$outboundSchema: z.ZodNativeEnum<typeof Field300> =
  Field300$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field300$ {
  /** @deprecated use `Field300$inboundSchema` instead. */
  export const inboundSchema = Field300$inboundSchema;
  /** @deprecated use `Field300$outboundSchema` instead. */
  export const outboundSchema = Field300$outboundSchema;
}

/** @internal */
export const Field299$inboundSchema: z.ZodNativeEnum<typeof Field299> = z
  .nativeEnum(Field299);

/** @internal */
export const Field299$outboundSchema: z.ZodNativeEnum<typeof Field299> =
  Field299$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field299$ {
  /** @deprecated use `Field299$inboundSchema` instead. */
  export const inboundSchema = Field299$inboundSchema;
  /** @deprecated use `Field299$outboundSchema` instead. */
  export const outboundSchema = Field299$outboundSchema;
}

/** @internal */
export const Field298$inboundSchema: z.ZodNativeEnum<typeof Field298> = z
  .nativeEnum(Field298);

/** @internal */
export const Field298$outboundSchema: z.ZodNativeEnum<typeof Field298> =
  Field298$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field298$ {
  /** @deprecated use `Field298$inboundSchema` instead. */
  export const inboundSchema = Field298$inboundSchema;
  /** @deprecated use `Field298$outboundSchema` instead. */
  export const outboundSchema = Field298$outboundSchema;
}

/** @internal */
export const Field297$inboundSchema: z.ZodNativeEnum<typeof Field297> = z
  .nativeEnum(Field297);

/** @internal */
export const Field297$outboundSchema: z.ZodNativeEnum<typeof Field297> =
  Field297$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field297$ {
  /** @deprecated use `Field297$inboundSchema` instead. */
  export const inboundSchema = Field297$inboundSchema;
  /** @deprecated use `Field297$outboundSchema` instead. */
  export const outboundSchema = Field297$outboundSchema;
}

/** @internal */
export const Field296$inboundSchema: z.ZodNativeEnum<typeof Field296> = z
  .nativeEnum(Field296);

/** @internal */
export const Field296$outboundSchema: z.ZodNativeEnum<typeof Field296> =
  Field296$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field296$ {
  /** @deprecated use `Field296$inboundSchema` instead. */
  export const inboundSchema = Field296$inboundSchema;
  /** @deprecated use `Field296$outboundSchema` instead. */
  export const outboundSchema = Field296$outboundSchema;
}

/** @internal */
export const Field295$inboundSchema: z.ZodNativeEnum<typeof Field295> = z
  .nativeEnum(Field295);

/** @internal */
export const Field295$outboundSchema: z.ZodNativeEnum<typeof Field295> =
  Field295$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field295$ {
  /** @deprecated use `Field295$inboundSchema` instead. */
  export const inboundSchema = Field295$inboundSchema;
  /** @deprecated use `Field295$outboundSchema` instead. */
  export const outboundSchema = Field295$outboundSchema;
}

/** @internal */
export const Field294$inboundSchema: z.ZodNativeEnum<typeof Field294> = z
  .nativeEnum(Field294);

/** @internal */
export const Field294$outboundSchema: z.ZodNativeEnum<typeof Field294> =
  Field294$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field294$ {
  /** @deprecated use `Field294$inboundSchema` instead. */
  export const inboundSchema = Field294$inboundSchema;
  /** @deprecated use `Field294$outboundSchema` instead. */
  export const outboundSchema = Field294$outboundSchema;
}

/** @internal */
export const Field293$inboundSchema: z.ZodNativeEnum<typeof Field293> = z
  .nativeEnum(Field293);

/** @internal */
export const Field293$outboundSchema: z.ZodNativeEnum<typeof Field293> =
  Field293$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field293$ {
  /** @deprecated use `Field293$inboundSchema` instead. */
  export const inboundSchema = Field293$inboundSchema;
  /** @deprecated use `Field293$outboundSchema` instead. */
  export const outboundSchema = Field293$outboundSchema;
}

/** @internal */
export const Field292$inboundSchema: z.ZodNativeEnum<typeof Field292> = z
  .nativeEnum(Field292);

/** @internal */
export const Field292$outboundSchema: z.ZodNativeEnum<typeof Field292> =
  Field292$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field292$ {
  /** @deprecated use `Field292$inboundSchema` instead. */
  export const inboundSchema = Field292$inboundSchema;
  /** @deprecated use `Field292$outboundSchema` instead. */
  export const outboundSchema = Field292$outboundSchema;
}

/** @internal */
export const Field291$inboundSchema: z.ZodNativeEnum<typeof Field291> = z
  .nativeEnum(Field291);

/** @internal */
export const Field291$outboundSchema: z.ZodNativeEnum<typeof Field291> =
  Field291$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field291$ {
  /** @deprecated use `Field291$inboundSchema` instead. */
  export const inboundSchema = Field291$inboundSchema;
  /** @deprecated use `Field291$outboundSchema` instead. */
  export const outboundSchema = Field291$outboundSchema;
}

/** @internal */
export const Field290$inboundSchema: z.ZodNativeEnum<typeof Field290> = z
  .nativeEnum(Field290);

/** @internal */
export const Field290$outboundSchema: z.ZodNativeEnum<typeof Field290> =
  Field290$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field290$ {
  /** @deprecated use `Field290$inboundSchema` instead. */
  export const inboundSchema = Field290$inboundSchema;
  /** @deprecated use `Field290$outboundSchema` instead. */
  export const outboundSchema = Field290$outboundSchema;
}

/** @internal */
export const Field289$inboundSchema: z.ZodNativeEnum<typeof Field289> = z
  .nativeEnum(Field289);

/** @internal */
export const Field289$outboundSchema: z.ZodNativeEnum<typeof Field289> =
  Field289$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field289$ {
  /** @deprecated use `Field289$inboundSchema` instead. */
  export const inboundSchema = Field289$inboundSchema;
  /** @deprecated use `Field289$outboundSchema` instead. */
  export const outboundSchema = Field289$outboundSchema;
}

/** @internal */
export const Field288$inboundSchema: z.ZodNativeEnum<typeof Field288> = z
  .nativeEnum(Field288);

/** @internal */
export const Field288$outboundSchema: z.ZodNativeEnum<typeof Field288> =
  Field288$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field288$ {
  /** @deprecated use `Field288$inboundSchema` instead. */
  export const inboundSchema = Field288$inboundSchema;
  /** @deprecated use `Field288$outboundSchema` instead. */
  export const outboundSchema = Field288$outboundSchema;
}

/** @internal */
export const Field287$inboundSchema: z.ZodNativeEnum<typeof Field287> = z
  .nativeEnum(Field287);

/** @internal */
export const Field287$outboundSchema: z.ZodNativeEnum<typeof Field287> =
  Field287$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field287$ {
  /** @deprecated use `Field287$inboundSchema` instead. */
  export const inboundSchema = Field287$inboundSchema;
  /** @deprecated use `Field287$outboundSchema` instead. */
  export const outboundSchema = Field287$outboundSchema;
}

/** @internal */
export const Field286$inboundSchema: z.ZodNativeEnum<typeof Field286> = z
  .nativeEnum(Field286);

/** @internal */
export const Field286$outboundSchema: z.ZodNativeEnum<typeof Field286> =
  Field286$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field286$ {
  /** @deprecated use `Field286$inboundSchema` instead. */
  export const inboundSchema = Field286$inboundSchema;
  /** @deprecated use `Field286$outboundSchema` instead. */
  export const outboundSchema = Field286$outboundSchema;
}

/** @internal */
export const Field285$inboundSchema: z.ZodNativeEnum<typeof Field285> = z
  .nativeEnum(Field285);

/** @internal */
export const Field285$outboundSchema: z.ZodNativeEnum<typeof Field285> =
  Field285$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field285$ {
  /** @deprecated use `Field285$inboundSchema` instead. */
  export const inboundSchema = Field285$inboundSchema;
  /** @deprecated use `Field285$outboundSchema` instead. */
  export const outboundSchema = Field285$outboundSchema;
}

/** @internal */
export const Field284$inboundSchema: z.ZodNativeEnum<typeof Field284> = z
  .nativeEnum(Field284);

/** @internal */
export const Field284$outboundSchema: z.ZodNativeEnum<typeof Field284> =
  Field284$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field284$ {
  /** @deprecated use `Field284$inboundSchema` instead. */
  export const inboundSchema = Field284$inboundSchema;
  /** @deprecated use `Field284$outboundSchema` instead. */
  export const outboundSchema = Field284$outboundSchema;
}

/** @internal */
export const Field283$inboundSchema: z.ZodNativeEnum<typeof Field283> = z
  .nativeEnum(Field283);

/** @internal */
export const Field283$outboundSchema: z.ZodNativeEnum<typeof Field283> =
  Field283$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field283$ {
  /** @deprecated use `Field283$inboundSchema` instead. */
  export const inboundSchema = Field283$inboundSchema;
  /** @deprecated use `Field283$outboundSchema` instead. */
  export const outboundSchema = Field283$outboundSchema;
}

/** @internal */
export const Field282$inboundSchema: z.ZodNativeEnum<typeof Field282> = z
  .nativeEnum(Field282);

/** @internal */
export const Field282$outboundSchema: z.ZodNativeEnum<typeof Field282> =
  Field282$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field282$ {
  /** @deprecated use `Field282$inboundSchema` instead. */
  export const inboundSchema = Field282$inboundSchema;
  /** @deprecated use `Field282$outboundSchema` instead. */
  export const outboundSchema = Field282$outboundSchema;
}

/** @internal */
export const Field281$inboundSchema: z.ZodNativeEnum<typeof Field281> = z
  .nativeEnum(Field281);

/** @internal */
export const Field281$outboundSchema: z.ZodNativeEnum<typeof Field281> =
  Field281$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field281$ {
  /** @deprecated use `Field281$inboundSchema` instead. */
  export const inboundSchema = Field281$inboundSchema;
  /** @deprecated use `Field281$outboundSchema` instead. */
  export const outboundSchema = Field281$outboundSchema;
}

/** @internal */
export const Field280$inboundSchema: z.ZodNativeEnum<typeof Field280> = z
  .nativeEnum(Field280);

/** @internal */
export const Field280$outboundSchema: z.ZodNativeEnum<typeof Field280> =
  Field280$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field280$ {
  /** @deprecated use `Field280$inboundSchema` instead. */
  export const inboundSchema = Field280$inboundSchema;
  /** @deprecated use `Field280$outboundSchema` instead. */
  export const outboundSchema = Field280$outboundSchema;
}

/** @internal */
export const Field279$inboundSchema: z.ZodNativeEnum<typeof Field279> = z
  .nativeEnum(Field279);

/** @internal */
export const Field279$outboundSchema: z.ZodNativeEnum<typeof Field279> =
  Field279$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field279$ {
  /** @deprecated use `Field279$inboundSchema` instead. */
  export const inboundSchema = Field279$inboundSchema;
  /** @deprecated use `Field279$outboundSchema` instead. */
  export const outboundSchema = Field279$outboundSchema;
}

/** @internal */
export const Field278$inboundSchema: z.ZodNativeEnum<typeof Field278> = z
  .nativeEnum(Field278);

/** @internal */
export const Field278$outboundSchema: z.ZodNativeEnum<typeof Field278> =
  Field278$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field278$ {
  /** @deprecated use `Field278$inboundSchema` instead. */
  export const inboundSchema = Field278$inboundSchema;
  /** @deprecated use `Field278$outboundSchema` instead. */
  export const outboundSchema = Field278$outboundSchema;
}

/** @internal */
export const Field277$inboundSchema: z.ZodNativeEnum<typeof Field277> = z
  .nativeEnum(Field277);

/** @internal */
export const Field277$outboundSchema: z.ZodNativeEnum<typeof Field277> =
  Field277$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field277$ {
  /** @deprecated use `Field277$inboundSchema` instead. */
  export const inboundSchema = Field277$inboundSchema;
  /** @deprecated use `Field277$outboundSchema` instead. */
  export const outboundSchema = Field277$outboundSchema;
}

/** @internal */
export const Field276$inboundSchema: z.ZodNativeEnum<typeof Field276> = z
  .nativeEnum(Field276);

/** @internal */
export const Field276$outboundSchema: z.ZodNativeEnum<typeof Field276> =
  Field276$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field276$ {
  /** @deprecated use `Field276$inboundSchema` instead. */
  export const inboundSchema = Field276$inboundSchema;
  /** @deprecated use `Field276$outboundSchema` instead. */
  export const outboundSchema = Field276$outboundSchema;
}

/** @internal */
export const Field275$inboundSchema: z.ZodNativeEnum<typeof Field275> = z
  .nativeEnum(Field275);

/** @internal */
export const Field275$outboundSchema: z.ZodNativeEnum<typeof Field275> =
  Field275$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field275$ {
  /** @deprecated use `Field275$inboundSchema` instead. */
  export const inboundSchema = Field275$inboundSchema;
  /** @deprecated use `Field275$outboundSchema` instead. */
  export const outboundSchema = Field275$outboundSchema;
}

/** @internal */
export const Field274$inboundSchema: z.ZodNativeEnum<typeof Field274> = z
  .nativeEnum(Field274);

/** @internal */
export const Field274$outboundSchema: z.ZodNativeEnum<typeof Field274> =
  Field274$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field274$ {
  /** @deprecated use `Field274$inboundSchema` instead. */
  export const inboundSchema = Field274$inboundSchema;
  /** @deprecated use `Field274$outboundSchema` instead. */
  export const outboundSchema = Field274$outboundSchema;
}

/** @internal */
export const Field273$inboundSchema: z.ZodNativeEnum<typeof Field273> = z
  .nativeEnum(Field273);

/** @internal */
export const Field273$outboundSchema: z.ZodNativeEnum<typeof Field273> =
  Field273$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field273$ {
  /** @deprecated use `Field273$inboundSchema` instead. */
  export const inboundSchema = Field273$inboundSchema;
  /** @deprecated use `Field273$outboundSchema` instead. */
  export const outboundSchema = Field273$outboundSchema;
}

/** @internal */
export const Field272$inboundSchema: z.ZodNativeEnum<typeof Field272> = z
  .nativeEnum(Field272);

/** @internal */
export const Field272$outboundSchema: z.ZodNativeEnum<typeof Field272> =
  Field272$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field272$ {
  /** @deprecated use `Field272$inboundSchema` instead. */
  export const inboundSchema = Field272$inboundSchema;
  /** @deprecated use `Field272$outboundSchema` instead. */
  export const outboundSchema = Field272$outboundSchema;
}

/** @internal */
export const Field271$inboundSchema: z.ZodNativeEnum<typeof Field271> = z
  .nativeEnum(Field271);

/** @internal */
export const Field271$outboundSchema: z.ZodNativeEnum<typeof Field271> =
  Field271$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field271$ {
  /** @deprecated use `Field271$inboundSchema` instead. */
  export const inboundSchema = Field271$inboundSchema;
  /** @deprecated use `Field271$outboundSchema` instead. */
  export const outboundSchema = Field271$outboundSchema;
}

/** @internal */
export const Field270$inboundSchema: z.ZodNativeEnum<typeof Field270> = z
  .nativeEnum(Field270);

/** @internal */
export const Field270$outboundSchema: z.ZodNativeEnum<typeof Field270> =
  Field270$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field270$ {
  /** @deprecated use `Field270$inboundSchema` instead. */
  export const inboundSchema = Field270$inboundSchema;
  /** @deprecated use `Field270$outboundSchema` instead. */
  export const outboundSchema = Field270$outboundSchema;
}

/** @internal */
export const Field269$inboundSchema: z.ZodNativeEnum<typeof Field269> = z
  .nativeEnum(Field269);

/** @internal */
export const Field269$outboundSchema: z.ZodNativeEnum<typeof Field269> =
  Field269$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field269$ {
  /** @deprecated use `Field269$inboundSchema` instead. */
  export const inboundSchema = Field269$inboundSchema;
  /** @deprecated use `Field269$outboundSchema` instead. */
  export const outboundSchema = Field269$outboundSchema;
}

/** @internal */
export const Field268$inboundSchema: z.ZodNativeEnum<typeof Field268> = z
  .nativeEnum(Field268);

/** @internal */
export const Field268$outboundSchema: z.ZodNativeEnum<typeof Field268> =
  Field268$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field268$ {
  /** @deprecated use `Field268$inboundSchema` instead. */
  export const inboundSchema = Field268$inboundSchema;
  /** @deprecated use `Field268$outboundSchema` instead. */
  export const outboundSchema = Field268$outboundSchema;
}

/** @internal */
export const Field267$inboundSchema: z.ZodNativeEnum<typeof Field267> = z
  .nativeEnum(Field267);

/** @internal */
export const Field267$outboundSchema: z.ZodNativeEnum<typeof Field267> =
  Field267$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field267$ {
  /** @deprecated use `Field267$inboundSchema` instead. */
  export const inboundSchema = Field267$inboundSchema;
  /** @deprecated use `Field267$outboundSchema` instead. */
  export const outboundSchema = Field267$outboundSchema;
}

/** @internal */
export const Field266$inboundSchema: z.ZodNativeEnum<typeof Field266> = z
  .nativeEnum(Field266);

/** @internal */
export const Field266$outboundSchema: z.ZodNativeEnum<typeof Field266> =
  Field266$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field266$ {
  /** @deprecated use `Field266$inboundSchema` instead. */
  export const inboundSchema = Field266$inboundSchema;
  /** @deprecated use `Field266$outboundSchema` instead. */
  export const outboundSchema = Field266$outboundSchema;
}

/** @internal */
export const Field265$inboundSchema: z.ZodNativeEnum<typeof Field265> = z
  .nativeEnum(Field265);

/** @internal */
export const Field265$outboundSchema: z.ZodNativeEnum<typeof Field265> =
  Field265$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field265$ {
  /** @deprecated use `Field265$inboundSchema` instead. */
  export const inboundSchema = Field265$inboundSchema;
  /** @deprecated use `Field265$outboundSchema` instead. */
  export const outboundSchema = Field265$outboundSchema;
}

/** @internal */
export const Field264$inboundSchema: z.ZodNativeEnum<typeof Field264> = z
  .nativeEnum(Field264);

/** @internal */
export const Field264$outboundSchema: z.ZodNativeEnum<typeof Field264> =
  Field264$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field264$ {
  /** @deprecated use `Field264$inboundSchema` instead. */
  export const inboundSchema = Field264$inboundSchema;
  /** @deprecated use `Field264$outboundSchema` instead. */
  export const outboundSchema = Field264$outboundSchema;
}

/** @internal */
export const Field263$inboundSchema: z.ZodNativeEnum<typeof Field263> = z
  .nativeEnum(Field263);

/** @internal */
export const Field263$outboundSchema: z.ZodNativeEnum<typeof Field263> =
  Field263$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field263$ {
  /** @deprecated use `Field263$inboundSchema` instead. */
  export const inboundSchema = Field263$inboundSchema;
  /** @deprecated use `Field263$outboundSchema` instead. */
  export const outboundSchema = Field263$outboundSchema;
}

/** @internal */
export const Field262$inboundSchema: z.ZodNativeEnum<typeof Field262> = z
  .nativeEnum(Field262);

/** @internal */
export const Field262$outboundSchema: z.ZodNativeEnum<typeof Field262> =
  Field262$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field262$ {
  /** @deprecated use `Field262$inboundSchema` instead. */
  export const inboundSchema = Field262$inboundSchema;
  /** @deprecated use `Field262$outboundSchema` instead. */
  export const outboundSchema = Field262$outboundSchema;
}

/** @internal */
export const Field261$inboundSchema: z.ZodNativeEnum<typeof Field261> = z
  .nativeEnum(Field261);

/** @internal */
export const Field261$outboundSchema: z.ZodNativeEnum<typeof Field261> =
  Field261$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field261$ {
  /** @deprecated use `Field261$inboundSchema` instead. */
  export const inboundSchema = Field261$inboundSchema;
  /** @deprecated use `Field261$outboundSchema` instead. */
  export const outboundSchema = Field261$outboundSchema;
}

/** @internal */
export const Field260$inboundSchema: z.ZodNativeEnum<typeof Field260> = z
  .nativeEnum(Field260);

/** @internal */
export const Field260$outboundSchema: z.ZodNativeEnum<typeof Field260> =
  Field260$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field260$ {
  /** @deprecated use `Field260$inboundSchema` instead. */
  export const inboundSchema = Field260$inboundSchema;
  /** @deprecated use `Field260$outboundSchema` instead. */
  export const outboundSchema = Field260$outboundSchema;
}

/** @internal */
export const Field259$inboundSchema: z.ZodNativeEnum<typeof Field259> = z
  .nativeEnum(Field259);

/** @internal */
export const Field259$outboundSchema: z.ZodNativeEnum<typeof Field259> =
  Field259$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field259$ {
  /** @deprecated use `Field259$inboundSchema` instead. */
  export const inboundSchema = Field259$inboundSchema;
  /** @deprecated use `Field259$outboundSchema` instead. */
  export const outboundSchema = Field259$outboundSchema;
}

/** @internal */
export const Field258$inboundSchema: z.ZodNativeEnum<typeof Field258> = z
  .nativeEnum(Field258);

/** @internal */
export const Field258$outboundSchema: z.ZodNativeEnum<typeof Field258> =
  Field258$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field258$ {
  /** @deprecated use `Field258$inboundSchema` instead. */
  export const inboundSchema = Field258$inboundSchema;
  /** @deprecated use `Field258$outboundSchema` instead. */
  export const outboundSchema = Field258$outboundSchema;
}

/** @internal */
export const Field257$inboundSchema: z.ZodNativeEnum<typeof Field257> = z
  .nativeEnum(Field257);

/** @internal */
export const Field257$outboundSchema: z.ZodNativeEnum<typeof Field257> =
  Field257$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field257$ {
  /** @deprecated use `Field257$inboundSchema` instead. */
  export const inboundSchema = Field257$inboundSchema;
  /** @deprecated use `Field257$outboundSchema` instead. */
  export const outboundSchema = Field257$outboundSchema;
}

/** @internal */
export const Field256$inboundSchema: z.ZodNativeEnum<typeof Field256> = z
  .nativeEnum(Field256);

/** @internal */
export const Field256$outboundSchema: z.ZodNativeEnum<typeof Field256> =
  Field256$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field256$ {
  /** @deprecated use `Field256$inboundSchema` instead. */
  export const inboundSchema = Field256$inboundSchema;
  /** @deprecated use `Field256$outboundSchema` instead. */
  export const outboundSchema = Field256$outboundSchema;
}

/** @internal */
export const Field255$inboundSchema: z.ZodNativeEnum<typeof Field255> = z
  .nativeEnum(Field255);

/** @internal */
export const Field255$outboundSchema: z.ZodNativeEnum<typeof Field255> =
  Field255$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field255$ {
  /** @deprecated use `Field255$inboundSchema` instead. */
  export const inboundSchema = Field255$inboundSchema;
  /** @deprecated use `Field255$outboundSchema` instead. */
  export const outboundSchema = Field255$outboundSchema;
}

/** @internal */
export const Field254$inboundSchema: z.ZodNativeEnum<typeof Field254> = z
  .nativeEnum(Field254);

/** @internal */
export const Field254$outboundSchema: z.ZodNativeEnum<typeof Field254> =
  Field254$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field254$ {
  /** @deprecated use `Field254$inboundSchema` instead. */
  export const inboundSchema = Field254$inboundSchema;
  /** @deprecated use `Field254$outboundSchema` instead. */
  export const outboundSchema = Field254$outboundSchema;
}

/** @internal */
export const Field253$inboundSchema: z.ZodNativeEnum<typeof Field253> = z
  .nativeEnum(Field253);

/** @internal */
export const Field253$outboundSchema: z.ZodNativeEnum<typeof Field253> =
  Field253$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field253$ {
  /** @deprecated use `Field253$inboundSchema` instead. */
  export const inboundSchema = Field253$inboundSchema;
  /** @deprecated use `Field253$outboundSchema` instead. */
  export const outboundSchema = Field253$outboundSchema;
}

/** @internal */
export const Field252$inboundSchema: z.ZodNativeEnum<typeof Field252> = z
  .nativeEnum(Field252);

/** @internal */
export const Field252$outboundSchema: z.ZodNativeEnum<typeof Field252> =
  Field252$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field252$ {
  /** @deprecated use `Field252$inboundSchema` instead. */
  export const inboundSchema = Field252$inboundSchema;
  /** @deprecated use `Field252$outboundSchema` instead. */
  export const outboundSchema = Field252$outboundSchema;
}

/** @internal */
export const Field251$inboundSchema: z.ZodNativeEnum<typeof Field251> = z
  .nativeEnum(Field251);

/** @internal */
export const Field251$outboundSchema: z.ZodNativeEnum<typeof Field251> =
  Field251$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field251$ {
  /** @deprecated use `Field251$inboundSchema` instead. */
  export const inboundSchema = Field251$inboundSchema;
  /** @deprecated use `Field251$outboundSchema` instead. */
  export const outboundSchema = Field251$outboundSchema;
}

/** @internal */
export const Field250$inboundSchema: z.ZodNativeEnum<typeof Field250> = z
  .nativeEnum(Field250);

/** @internal */
export const Field250$outboundSchema: z.ZodNativeEnum<typeof Field250> =
  Field250$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field250$ {
  /** @deprecated use `Field250$inboundSchema` instead. */
  export const inboundSchema = Field250$inboundSchema;
  /** @deprecated use `Field250$outboundSchema` instead. */
  export const outboundSchema = Field250$outboundSchema;
}

/** @internal */
export const Field249$inboundSchema: z.ZodNativeEnum<typeof Field249> = z
  .nativeEnum(Field249);

/** @internal */
export const Field249$outboundSchema: z.ZodNativeEnum<typeof Field249> =
  Field249$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field249$ {
  /** @deprecated use `Field249$inboundSchema` instead. */
  export const inboundSchema = Field249$inboundSchema;
  /** @deprecated use `Field249$outboundSchema` instead. */
  export const outboundSchema = Field249$outboundSchema;
}

/** @internal */
export const Field248$inboundSchema: z.ZodNativeEnum<typeof Field248> = z
  .nativeEnum(Field248);

/** @internal */
export const Field248$outboundSchema: z.ZodNativeEnum<typeof Field248> =
  Field248$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field248$ {
  /** @deprecated use `Field248$inboundSchema` instead. */
  export const inboundSchema = Field248$inboundSchema;
  /** @deprecated use `Field248$outboundSchema` instead. */
  export const outboundSchema = Field248$outboundSchema;
}

/** @internal */
export const Field247$inboundSchema: z.ZodNativeEnum<typeof Field247> = z
  .nativeEnum(Field247);

/** @internal */
export const Field247$outboundSchema: z.ZodNativeEnum<typeof Field247> =
  Field247$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field247$ {
  /** @deprecated use `Field247$inboundSchema` instead. */
  export const inboundSchema = Field247$inboundSchema;
  /** @deprecated use `Field247$outboundSchema` instead. */
  export const outboundSchema = Field247$outboundSchema;
}

/** @internal */
export const Field246$inboundSchema: z.ZodNativeEnum<typeof Field246> = z
  .nativeEnum(Field246);

/** @internal */
export const Field246$outboundSchema: z.ZodNativeEnum<typeof Field246> =
  Field246$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field246$ {
  /** @deprecated use `Field246$inboundSchema` instead. */
  export const inboundSchema = Field246$inboundSchema;
  /** @deprecated use `Field246$outboundSchema` instead. */
  export const outboundSchema = Field246$outboundSchema;
}

/** @internal */
export const Field245$inboundSchema: z.ZodNativeEnum<typeof Field245> = z
  .nativeEnum(Field245);

/** @internal */
export const Field245$outboundSchema: z.ZodNativeEnum<typeof Field245> =
  Field245$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field245$ {
  /** @deprecated use `Field245$inboundSchema` instead. */
  export const inboundSchema = Field245$inboundSchema;
  /** @deprecated use `Field245$outboundSchema` instead. */
  export const outboundSchema = Field245$outboundSchema;
}

/** @internal */
export const Field244$inboundSchema: z.ZodNativeEnum<typeof Field244> = z
  .nativeEnum(Field244);

/** @internal */
export const Field244$outboundSchema: z.ZodNativeEnum<typeof Field244> =
  Field244$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field244$ {
  /** @deprecated use `Field244$inboundSchema` instead. */
  export const inboundSchema = Field244$inboundSchema;
  /** @deprecated use `Field244$outboundSchema` instead. */
  export const outboundSchema = Field244$outboundSchema;
}

/** @internal */
export const Field243$inboundSchema: z.ZodNativeEnum<typeof Field243> = z
  .nativeEnum(Field243);

/** @internal */
export const Field243$outboundSchema: z.ZodNativeEnum<typeof Field243> =
  Field243$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field243$ {
  /** @deprecated use `Field243$inboundSchema` instead. */
  export const inboundSchema = Field243$inboundSchema;
  /** @deprecated use `Field243$outboundSchema` instead. */
  export const outboundSchema = Field243$outboundSchema;
}

/** @internal */
export const Field242$inboundSchema: z.ZodNativeEnum<typeof Field242> = z
  .nativeEnum(Field242);

/** @internal */
export const Field242$outboundSchema: z.ZodNativeEnum<typeof Field242> =
  Field242$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field242$ {
  /** @deprecated use `Field242$inboundSchema` instead. */
  export const inboundSchema = Field242$inboundSchema;
  /** @deprecated use `Field242$outboundSchema` instead. */
  export const outboundSchema = Field242$outboundSchema;
}

/** @internal */
export const Field241$inboundSchema: z.ZodNativeEnum<typeof Field241> = z
  .nativeEnum(Field241);

/** @internal */
export const Field241$outboundSchema: z.ZodNativeEnum<typeof Field241> =
  Field241$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field241$ {
  /** @deprecated use `Field241$inboundSchema` instead. */
  export const inboundSchema = Field241$inboundSchema;
  /** @deprecated use `Field241$outboundSchema` instead. */
  export const outboundSchema = Field241$outboundSchema;
}

/** @internal */
export const Field240$inboundSchema: z.ZodNativeEnum<typeof Field240> = z
  .nativeEnum(Field240);

/** @internal */
export const Field240$outboundSchema: z.ZodNativeEnum<typeof Field240> =
  Field240$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field240$ {
  /** @deprecated use `Field240$inboundSchema` instead. */
  export const inboundSchema = Field240$inboundSchema;
  /** @deprecated use `Field240$outboundSchema` instead. */
  export const outboundSchema = Field240$outboundSchema;
}

/** @internal */
export const Field239$inboundSchema: z.ZodNativeEnum<typeof Field239> = z
  .nativeEnum(Field239);

/** @internal */
export const Field239$outboundSchema: z.ZodNativeEnum<typeof Field239> =
  Field239$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field239$ {
  /** @deprecated use `Field239$inboundSchema` instead. */
  export const inboundSchema = Field239$inboundSchema;
  /** @deprecated use `Field239$outboundSchema` instead. */
  export const outboundSchema = Field239$outboundSchema;
}

/** @internal */
export const Field238$inboundSchema: z.ZodNativeEnum<typeof Field238> = z
  .nativeEnum(Field238);

/** @internal */
export const Field238$outboundSchema: z.ZodNativeEnum<typeof Field238> =
  Field238$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field238$ {
  /** @deprecated use `Field238$inboundSchema` instead. */
  export const inboundSchema = Field238$inboundSchema;
  /** @deprecated use `Field238$outboundSchema` instead. */
  export const outboundSchema = Field238$outboundSchema;
}

/** @internal */
export const Field237$inboundSchema: z.ZodNativeEnum<typeof Field237> = z
  .nativeEnum(Field237);

/** @internal */
export const Field237$outboundSchema: z.ZodNativeEnum<typeof Field237> =
  Field237$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field237$ {
  /** @deprecated use `Field237$inboundSchema` instead. */
  export const inboundSchema = Field237$inboundSchema;
  /** @deprecated use `Field237$outboundSchema` instead. */
  export const outboundSchema = Field237$outboundSchema;
}

/** @internal */
export const Field236$inboundSchema: z.ZodNativeEnum<typeof Field236> = z
  .nativeEnum(Field236);

/** @internal */
export const Field236$outboundSchema: z.ZodNativeEnum<typeof Field236> =
  Field236$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field236$ {
  /** @deprecated use `Field236$inboundSchema` instead. */
  export const inboundSchema = Field236$inboundSchema;
  /** @deprecated use `Field236$outboundSchema` instead. */
  export const outboundSchema = Field236$outboundSchema;
}

/** @internal */
export const Field235$inboundSchema: z.ZodNativeEnum<typeof Field235> = z
  .nativeEnum(Field235);

/** @internal */
export const Field235$outboundSchema: z.ZodNativeEnum<typeof Field235> =
  Field235$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field235$ {
  /** @deprecated use `Field235$inboundSchema` instead. */
  export const inboundSchema = Field235$inboundSchema;
  /** @deprecated use `Field235$outboundSchema` instead. */
  export const outboundSchema = Field235$outboundSchema;
}

/** @internal */
export const Field234$inboundSchema: z.ZodNativeEnum<typeof Field234> = z
  .nativeEnum(Field234);

/** @internal */
export const Field234$outboundSchema: z.ZodNativeEnum<typeof Field234> =
  Field234$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field234$ {
  /** @deprecated use `Field234$inboundSchema` instead. */
  export const inboundSchema = Field234$inboundSchema;
  /** @deprecated use `Field234$outboundSchema` instead. */
  export const outboundSchema = Field234$outboundSchema;
}

/** @internal */
export const Field233$inboundSchema: z.ZodNativeEnum<typeof Field233> = z
  .nativeEnum(Field233);

/** @internal */
export const Field233$outboundSchema: z.ZodNativeEnum<typeof Field233> =
  Field233$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field233$ {
  /** @deprecated use `Field233$inboundSchema` instead. */
  export const inboundSchema = Field233$inboundSchema;
  /** @deprecated use `Field233$outboundSchema` instead. */
  export const outboundSchema = Field233$outboundSchema;
}

/** @internal */
export const Field232$inboundSchema: z.ZodNativeEnum<typeof Field232> = z
  .nativeEnum(Field232);

/** @internal */
export const Field232$outboundSchema: z.ZodNativeEnum<typeof Field232> =
  Field232$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field232$ {
  /** @deprecated use `Field232$inboundSchema` instead. */
  export const inboundSchema = Field232$inboundSchema;
  /** @deprecated use `Field232$outboundSchema` instead. */
  export const outboundSchema = Field232$outboundSchema;
}

/** @internal */
export const Field231$inboundSchema: z.ZodNativeEnum<typeof Field231> = z
  .nativeEnum(Field231);

/** @internal */
export const Field231$outboundSchema: z.ZodNativeEnum<typeof Field231> =
  Field231$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field231$ {
  /** @deprecated use `Field231$inboundSchema` instead. */
  export const inboundSchema = Field231$inboundSchema;
  /** @deprecated use `Field231$outboundSchema` instead. */
  export const outboundSchema = Field231$outboundSchema;
}

/** @internal */
export const Field230$inboundSchema: z.ZodNativeEnum<typeof Field230> = z
  .nativeEnum(Field230);

/** @internal */
export const Field230$outboundSchema: z.ZodNativeEnum<typeof Field230> =
  Field230$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field230$ {
  /** @deprecated use `Field230$inboundSchema` instead. */
  export const inboundSchema = Field230$inboundSchema;
  /** @deprecated use `Field230$outboundSchema` instead. */
  export const outboundSchema = Field230$outboundSchema;
}

/** @internal */
export const Field229$inboundSchema: z.ZodNativeEnum<typeof Field229> = z
  .nativeEnum(Field229);

/** @internal */
export const Field229$outboundSchema: z.ZodNativeEnum<typeof Field229> =
  Field229$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field229$ {
  /** @deprecated use `Field229$inboundSchema` instead. */
  export const inboundSchema = Field229$inboundSchema;
  /** @deprecated use `Field229$outboundSchema` instead. */
  export const outboundSchema = Field229$outboundSchema;
}

/** @internal */
export const Field228$inboundSchema: z.ZodNativeEnum<typeof Field228> = z
  .nativeEnum(Field228);

/** @internal */
export const Field228$outboundSchema: z.ZodNativeEnum<typeof Field228> =
  Field228$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field228$ {
  /** @deprecated use `Field228$inboundSchema` instead. */
  export const inboundSchema = Field228$inboundSchema;
  /** @deprecated use `Field228$outboundSchema` instead. */
  export const outboundSchema = Field228$outboundSchema;
}

/** @internal */
export const Field227$inboundSchema: z.ZodNativeEnum<typeof Field227> = z
  .nativeEnum(Field227);

/** @internal */
export const Field227$outboundSchema: z.ZodNativeEnum<typeof Field227> =
  Field227$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field227$ {
  /** @deprecated use `Field227$inboundSchema` instead. */
  export const inboundSchema = Field227$inboundSchema;
  /** @deprecated use `Field227$outboundSchema` instead. */
  export const outboundSchema = Field227$outboundSchema;
}

/** @internal */
export const Field226$inboundSchema: z.ZodNativeEnum<typeof Field226> = z
  .nativeEnum(Field226);

/** @internal */
export const Field226$outboundSchema: z.ZodNativeEnum<typeof Field226> =
  Field226$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field226$ {
  /** @deprecated use `Field226$inboundSchema` instead. */
  export const inboundSchema = Field226$inboundSchema;
  /** @deprecated use `Field226$outboundSchema` instead. */
  export const outboundSchema = Field226$outboundSchema;
}

/** @internal */
export const Field225$inboundSchema: z.ZodNativeEnum<typeof Field225> = z
  .nativeEnum(Field225);

/** @internal */
export const Field225$outboundSchema: z.ZodNativeEnum<typeof Field225> =
  Field225$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field225$ {
  /** @deprecated use `Field225$inboundSchema` instead. */
  export const inboundSchema = Field225$inboundSchema;
  /** @deprecated use `Field225$outboundSchema` instead. */
  export const outboundSchema = Field225$outboundSchema;
}

/** @internal */
export const Field224$inboundSchema: z.ZodNativeEnum<typeof Field224> = z
  .nativeEnum(Field224);

/** @internal */
export const Field224$outboundSchema: z.ZodNativeEnum<typeof Field224> =
  Field224$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field224$ {
  /** @deprecated use `Field224$inboundSchema` instead. */
  export const inboundSchema = Field224$inboundSchema;
  /** @deprecated use `Field224$outboundSchema` instead. */
  export const outboundSchema = Field224$outboundSchema;
}

/** @internal */
export const Field223$inboundSchema: z.ZodNativeEnum<typeof Field223> = z
  .nativeEnum(Field223);

/** @internal */
export const Field223$outboundSchema: z.ZodNativeEnum<typeof Field223> =
  Field223$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field223$ {
  /** @deprecated use `Field223$inboundSchema` instead. */
  export const inboundSchema = Field223$inboundSchema;
  /** @deprecated use `Field223$outboundSchema` instead. */
  export const outboundSchema = Field223$outboundSchema;
}

/** @internal */
export const Field222$inboundSchema: z.ZodNativeEnum<typeof Field222> = z
  .nativeEnum(Field222);

/** @internal */
export const Field222$outboundSchema: z.ZodNativeEnum<typeof Field222> =
  Field222$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field222$ {
  /** @deprecated use `Field222$inboundSchema` instead. */
  export const inboundSchema = Field222$inboundSchema;
  /** @deprecated use `Field222$outboundSchema` instead. */
  export const outboundSchema = Field222$outboundSchema;
}

/** @internal */
export const Field221$inboundSchema: z.ZodNativeEnum<typeof Field221> = z
  .nativeEnum(Field221);

/** @internal */
export const Field221$outboundSchema: z.ZodNativeEnum<typeof Field221> =
  Field221$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field221$ {
  /** @deprecated use `Field221$inboundSchema` instead. */
  export const inboundSchema = Field221$inboundSchema;
  /** @deprecated use `Field221$outboundSchema` instead. */
  export const outboundSchema = Field221$outboundSchema;
}

/** @internal */
export const Field220$inboundSchema: z.ZodNativeEnum<typeof Field220> = z
  .nativeEnum(Field220);

/** @internal */
export const Field220$outboundSchema: z.ZodNativeEnum<typeof Field220> =
  Field220$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field220$ {
  /** @deprecated use `Field220$inboundSchema` instead. */
  export const inboundSchema = Field220$inboundSchema;
  /** @deprecated use `Field220$outboundSchema` instead. */
  export const outboundSchema = Field220$outboundSchema;
}

/** @internal */
export const Field219$inboundSchema: z.ZodNativeEnum<typeof Field219> = z
  .nativeEnum(Field219);

/** @internal */
export const Field219$outboundSchema: z.ZodNativeEnum<typeof Field219> =
  Field219$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field219$ {
  /** @deprecated use `Field219$inboundSchema` instead. */
  export const inboundSchema = Field219$inboundSchema;
  /** @deprecated use `Field219$outboundSchema` instead. */
  export const outboundSchema = Field219$outboundSchema;
}

/** @internal */
export const Field218$inboundSchema: z.ZodNativeEnum<typeof Field218> = z
  .nativeEnum(Field218);

/** @internal */
export const Field218$outboundSchema: z.ZodNativeEnum<typeof Field218> =
  Field218$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field218$ {
  /** @deprecated use `Field218$inboundSchema` instead. */
  export const inboundSchema = Field218$inboundSchema;
  /** @deprecated use `Field218$outboundSchema` instead. */
  export const outboundSchema = Field218$outboundSchema;
}

/** @internal */
export const Field217$inboundSchema: z.ZodNativeEnum<typeof Field217> = z
  .nativeEnum(Field217);

/** @internal */
export const Field217$outboundSchema: z.ZodNativeEnum<typeof Field217> =
  Field217$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field217$ {
  /** @deprecated use `Field217$inboundSchema` instead. */
  export const inboundSchema = Field217$inboundSchema;
  /** @deprecated use `Field217$outboundSchema` instead. */
  export const outboundSchema = Field217$outboundSchema;
}

/** @internal */
export const Field216$inboundSchema: z.ZodNativeEnum<typeof Field216> = z
  .nativeEnum(Field216);

/** @internal */
export const Field216$outboundSchema: z.ZodNativeEnum<typeof Field216> =
  Field216$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field216$ {
  /** @deprecated use `Field216$inboundSchema` instead. */
  export const inboundSchema = Field216$inboundSchema;
  /** @deprecated use `Field216$outboundSchema` instead. */
  export const outboundSchema = Field216$outboundSchema;
}

/** @internal */
export const Field215$inboundSchema: z.ZodNativeEnum<typeof Field215> = z
  .nativeEnum(Field215);

/** @internal */
export const Field215$outboundSchema: z.ZodNativeEnum<typeof Field215> =
  Field215$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field215$ {
  /** @deprecated use `Field215$inboundSchema` instead. */
  export const inboundSchema = Field215$inboundSchema;
  /** @deprecated use `Field215$outboundSchema` instead. */
  export const outboundSchema = Field215$outboundSchema;
}

/** @internal */
export const Field214$inboundSchema: z.ZodNativeEnum<typeof Field214> = z
  .nativeEnum(Field214);

/** @internal */
export const Field214$outboundSchema: z.ZodNativeEnum<typeof Field214> =
  Field214$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field214$ {
  /** @deprecated use `Field214$inboundSchema` instead. */
  export const inboundSchema = Field214$inboundSchema;
  /** @deprecated use `Field214$outboundSchema` instead. */
  export const outboundSchema = Field214$outboundSchema;
}

/** @internal */
export const Field213$inboundSchema: z.ZodNativeEnum<typeof Field213> = z
  .nativeEnum(Field213);

/** @internal */
export const Field213$outboundSchema: z.ZodNativeEnum<typeof Field213> =
  Field213$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field213$ {
  /** @deprecated use `Field213$inboundSchema` instead. */
  export const inboundSchema = Field213$inboundSchema;
  /** @deprecated use `Field213$outboundSchema` instead. */
  export const outboundSchema = Field213$outboundSchema;
}

/** @internal */
export const Field212$inboundSchema: z.ZodNativeEnum<typeof Field212> = z
  .nativeEnum(Field212);

/** @internal */
export const Field212$outboundSchema: z.ZodNativeEnum<typeof Field212> =
  Field212$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field212$ {
  /** @deprecated use `Field212$inboundSchema` instead. */
  export const inboundSchema = Field212$inboundSchema;
  /** @deprecated use `Field212$outboundSchema` instead. */
  export const outboundSchema = Field212$outboundSchema;
}

/** @internal */
export const Field211$inboundSchema: z.ZodNativeEnum<typeof Field211> = z
  .nativeEnum(Field211);

/** @internal */
export const Field211$outboundSchema: z.ZodNativeEnum<typeof Field211> =
  Field211$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field211$ {
  /** @deprecated use `Field211$inboundSchema` instead. */
  export const inboundSchema = Field211$inboundSchema;
  /** @deprecated use `Field211$outboundSchema` instead. */
  export const outboundSchema = Field211$outboundSchema;
}

/** @internal */
export const Field210$inboundSchema: z.ZodNativeEnum<typeof Field210> = z
  .nativeEnum(Field210);

/** @internal */
export const Field210$outboundSchema: z.ZodNativeEnum<typeof Field210> =
  Field210$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field210$ {
  /** @deprecated use `Field210$inboundSchema` instead. */
  export const inboundSchema = Field210$inboundSchema;
  /** @deprecated use `Field210$outboundSchema` instead. */
  export const outboundSchema = Field210$outboundSchema;
}

/** @internal */
export const Field209$inboundSchema: z.ZodNativeEnum<typeof Field209> = z
  .nativeEnum(Field209);

/** @internal */
export const Field209$outboundSchema: z.ZodNativeEnum<typeof Field209> =
  Field209$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field209$ {
  /** @deprecated use `Field209$inboundSchema` instead. */
  export const inboundSchema = Field209$inboundSchema;
  /** @deprecated use `Field209$outboundSchema` instead. */
  export const outboundSchema = Field209$outboundSchema;
}

/** @internal */
export const Field208$inboundSchema: z.ZodNativeEnum<typeof Field208> = z
  .nativeEnum(Field208);

/** @internal */
export const Field208$outboundSchema: z.ZodNativeEnum<typeof Field208> =
  Field208$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field208$ {
  /** @deprecated use `Field208$inboundSchema` instead. */
  export const inboundSchema = Field208$inboundSchema;
  /** @deprecated use `Field208$outboundSchema` instead. */
  export const outboundSchema = Field208$outboundSchema;
}

/** @internal */
export const Field207$inboundSchema: z.ZodNativeEnum<typeof Field207> = z
  .nativeEnum(Field207);

/** @internal */
export const Field207$outboundSchema: z.ZodNativeEnum<typeof Field207> =
  Field207$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field207$ {
  /** @deprecated use `Field207$inboundSchema` instead. */
  export const inboundSchema = Field207$inboundSchema;
  /** @deprecated use `Field207$outboundSchema` instead. */
  export const outboundSchema = Field207$outboundSchema;
}

/** @internal */
export const Field206$inboundSchema: z.ZodNativeEnum<typeof Field206> = z
  .nativeEnum(Field206);

/** @internal */
export const Field206$outboundSchema: z.ZodNativeEnum<typeof Field206> =
  Field206$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field206$ {
  /** @deprecated use `Field206$inboundSchema` instead. */
  export const inboundSchema = Field206$inboundSchema;
  /** @deprecated use `Field206$outboundSchema` instead. */
  export const outboundSchema = Field206$outboundSchema;
}

/** @internal */
export const Field205$inboundSchema: z.ZodNativeEnum<typeof Field205> = z
  .nativeEnum(Field205);

/** @internal */
export const Field205$outboundSchema: z.ZodNativeEnum<typeof Field205> =
  Field205$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field205$ {
  /** @deprecated use `Field205$inboundSchema` instead. */
  export const inboundSchema = Field205$inboundSchema;
  /** @deprecated use `Field205$outboundSchema` instead. */
  export const outboundSchema = Field205$outboundSchema;
}

/** @internal */
export const Field204$inboundSchema: z.ZodNativeEnum<typeof Field204> = z
  .nativeEnum(Field204);

/** @internal */
export const Field204$outboundSchema: z.ZodNativeEnum<typeof Field204> =
  Field204$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field204$ {
  /** @deprecated use `Field204$inboundSchema` instead. */
  export const inboundSchema = Field204$inboundSchema;
  /** @deprecated use `Field204$outboundSchema` instead. */
  export const outboundSchema = Field204$outboundSchema;
}

/** @internal */
export const Field203$inboundSchema: z.ZodNativeEnum<typeof Field203> = z
  .nativeEnum(Field203);

/** @internal */
export const Field203$outboundSchema: z.ZodNativeEnum<typeof Field203> =
  Field203$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field203$ {
  /** @deprecated use `Field203$inboundSchema` instead. */
  export const inboundSchema = Field203$inboundSchema;
  /** @deprecated use `Field203$outboundSchema` instead. */
  export const outboundSchema = Field203$outboundSchema;
}

/** @internal */
export const Field202$inboundSchema: z.ZodNativeEnum<typeof Field202> = z
  .nativeEnum(Field202);

/** @internal */
export const Field202$outboundSchema: z.ZodNativeEnum<typeof Field202> =
  Field202$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field202$ {
  /** @deprecated use `Field202$inboundSchema` instead. */
  export const inboundSchema = Field202$inboundSchema;
  /** @deprecated use `Field202$outboundSchema` instead. */
  export const outboundSchema = Field202$outboundSchema;
}

/** @internal */
export const Field201$inboundSchema: z.ZodNativeEnum<typeof Field201> = z
  .nativeEnum(Field201);

/** @internal */
export const Field201$outboundSchema: z.ZodNativeEnum<typeof Field201> =
  Field201$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field201$ {
  /** @deprecated use `Field201$inboundSchema` instead. */
  export const inboundSchema = Field201$inboundSchema;
  /** @deprecated use `Field201$outboundSchema` instead. */
  export const outboundSchema = Field201$outboundSchema;
}

/** @internal */
export const Field200$inboundSchema: z.ZodNativeEnum<typeof Field200> = z
  .nativeEnum(Field200);

/** @internal */
export const Field200$outboundSchema: z.ZodNativeEnum<typeof Field200> =
  Field200$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field200$ {
  /** @deprecated use `Field200$inboundSchema` instead. */
  export const inboundSchema = Field200$inboundSchema;
  /** @deprecated use `Field200$outboundSchema` instead. */
  export const outboundSchema = Field200$outboundSchema;
}

/** @internal */
export const Field199$inboundSchema: z.ZodNativeEnum<typeof Field199> = z
  .nativeEnum(Field199);

/** @internal */
export const Field199$outboundSchema: z.ZodNativeEnum<typeof Field199> =
  Field199$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field199$ {
  /** @deprecated use `Field199$inboundSchema` instead. */
  export const inboundSchema = Field199$inboundSchema;
  /** @deprecated use `Field199$outboundSchema` instead. */
  export const outboundSchema = Field199$outboundSchema;
}

/** @internal */
export const Field198$inboundSchema: z.ZodNativeEnum<typeof Field198> = z
  .nativeEnum(Field198);

/** @internal */
export const Field198$outboundSchema: z.ZodNativeEnum<typeof Field198> =
  Field198$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field198$ {
  /** @deprecated use `Field198$inboundSchema` instead. */
  export const inboundSchema = Field198$inboundSchema;
  /** @deprecated use `Field198$outboundSchema` instead. */
  export const outboundSchema = Field198$outboundSchema;
}

/** @internal */
export const Field197$inboundSchema: z.ZodNativeEnum<typeof Field197> = z
  .nativeEnum(Field197);

/** @internal */
export const Field197$outboundSchema: z.ZodNativeEnum<typeof Field197> =
  Field197$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field197$ {
  /** @deprecated use `Field197$inboundSchema` instead. */
  export const inboundSchema = Field197$inboundSchema;
  /** @deprecated use `Field197$outboundSchema` instead. */
  export const outboundSchema = Field197$outboundSchema;
}

/** @internal */
export const Field196$inboundSchema: z.ZodNativeEnum<typeof Field196> = z
  .nativeEnum(Field196);

/** @internal */
export const Field196$outboundSchema: z.ZodNativeEnum<typeof Field196> =
  Field196$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field196$ {
  /** @deprecated use `Field196$inboundSchema` instead. */
  export const inboundSchema = Field196$inboundSchema;
  /** @deprecated use `Field196$outboundSchema` instead. */
  export const outboundSchema = Field196$outboundSchema;
}

/** @internal */
export const Field195$inboundSchema: z.ZodNativeEnum<typeof Field195> = z
  .nativeEnum(Field195);

/** @internal */
export const Field195$outboundSchema: z.ZodNativeEnum<typeof Field195> =
  Field195$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field195$ {
  /** @deprecated use `Field195$inboundSchema` instead. */
  export const inboundSchema = Field195$inboundSchema;
  /** @deprecated use `Field195$outboundSchema` instead. */
  export const outboundSchema = Field195$outboundSchema;
}

/** @internal */
export const Field194$inboundSchema: z.ZodNativeEnum<typeof Field194> = z
  .nativeEnum(Field194);

/** @internal */
export const Field194$outboundSchema: z.ZodNativeEnum<typeof Field194> =
  Field194$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field194$ {
  /** @deprecated use `Field194$inboundSchema` instead. */
  export const inboundSchema = Field194$inboundSchema;
  /** @deprecated use `Field194$outboundSchema` instead. */
  export const outboundSchema = Field194$outboundSchema;
}

/** @internal */
export const Field193$inboundSchema: z.ZodNativeEnum<typeof Field193> = z
  .nativeEnum(Field193);

/** @internal */
export const Field193$outboundSchema: z.ZodNativeEnum<typeof Field193> =
  Field193$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field193$ {
  /** @deprecated use `Field193$inboundSchema` instead. */
  export const inboundSchema = Field193$inboundSchema;
  /** @deprecated use `Field193$outboundSchema` instead. */
  export const outboundSchema = Field193$outboundSchema;
}

/** @internal */
export const Field192$inboundSchema: z.ZodNativeEnum<typeof Field192> = z
  .nativeEnum(Field192);

/** @internal */
export const Field192$outboundSchema: z.ZodNativeEnum<typeof Field192> =
  Field192$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field192$ {
  /** @deprecated use `Field192$inboundSchema` instead. */
  export const inboundSchema = Field192$inboundSchema;
  /** @deprecated use `Field192$outboundSchema` instead. */
  export const outboundSchema = Field192$outboundSchema;
}

/** @internal */
export const Field191$inboundSchema: z.ZodNativeEnum<typeof Field191> = z
  .nativeEnum(Field191);

/** @internal */
export const Field191$outboundSchema: z.ZodNativeEnum<typeof Field191> =
  Field191$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field191$ {
  /** @deprecated use `Field191$inboundSchema` instead. */
  export const inboundSchema = Field191$inboundSchema;
  /** @deprecated use `Field191$outboundSchema` instead. */
  export const outboundSchema = Field191$outboundSchema;
}

/** @internal */
export const Field190$inboundSchema: z.ZodNativeEnum<typeof Field190> = z
  .nativeEnum(Field190);

/** @internal */
export const Field190$outboundSchema: z.ZodNativeEnum<typeof Field190> =
  Field190$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field190$ {
  /** @deprecated use `Field190$inboundSchema` instead. */
  export const inboundSchema = Field190$inboundSchema;
  /** @deprecated use `Field190$outboundSchema` instead. */
  export const outboundSchema = Field190$outboundSchema;
}

/** @internal */
export const Field189$inboundSchema: z.ZodNativeEnum<typeof Field189> = z
  .nativeEnum(Field189);

/** @internal */
export const Field189$outboundSchema: z.ZodNativeEnum<typeof Field189> =
  Field189$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field189$ {
  /** @deprecated use `Field189$inboundSchema` instead. */
  export const inboundSchema = Field189$inboundSchema;
  /** @deprecated use `Field189$outboundSchema` instead. */
  export const outboundSchema = Field189$outboundSchema;
}

/** @internal */
export const Field188$inboundSchema: z.ZodNativeEnum<typeof Field188> = z
  .nativeEnum(Field188);

/** @internal */
export const Field188$outboundSchema: z.ZodNativeEnum<typeof Field188> =
  Field188$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field188$ {
  /** @deprecated use `Field188$inboundSchema` instead. */
  export const inboundSchema = Field188$inboundSchema;
  /** @deprecated use `Field188$outboundSchema` instead. */
  export const outboundSchema = Field188$outboundSchema;
}

/** @internal */
export const Field187$inboundSchema: z.ZodNativeEnum<typeof Field187> = z
  .nativeEnum(Field187);

/** @internal */
export const Field187$outboundSchema: z.ZodNativeEnum<typeof Field187> =
  Field187$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field187$ {
  /** @deprecated use `Field187$inboundSchema` instead. */
  export const inboundSchema = Field187$inboundSchema;
  /** @deprecated use `Field187$outboundSchema` instead. */
  export const outboundSchema = Field187$outboundSchema;
}

/** @internal */
export const Field186$inboundSchema: z.ZodNativeEnum<typeof Field186> = z
  .nativeEnum(Field186);

/** @internal */
export const Field186$outboundSchema: z.ZodNativeEnum<typeof Field186> =
  Field186$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field186$ {
  /** @deprecated use `Field186$inboundSchema` instead. */
  export const inboundSchema = Field186$inboundSchema;
  /** @deprecated use `Field186$outboundSchema` instead. */
  export const outboundSchema = Field186$outboundSchema;
}

/** @internal */
export const Field185$inboundSchema: z.ZodNativeEnum<typeof Field185> = z
  .nativeEnum(Field185);

/** @internal */
export const Field185$outboundSchema: z.ZodNativeEnum<typeof Field185> =
  Field185$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field185$ {
  /** @deprecated use `Field185$inboundSchema` instead. */
  export const inboundSchema = Field185$inboundSchema;
  /** @deprecated use `Field185$outboundSchema` instead. */
  export const outboundSchema = Field185$outboundSchema;
}

/** @internal */
export const Field184$inboundSchema: z.ZodNativeEnum<typeof Field184> = z
  .nativeEnum(Field184);

/** @internal */
export const Field184$outboundSchema: z.ZodNativeEnum<typeof Field184> =
  Field184$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field184$ {
  /** @deprecated use `Field184$inboundSchema` instead. */
  export const inboundSchema = Field184$inboundSchema;
  /** @deprecated use `Field184$outboundSchema` instead. */
  export const outboundSchema = Field184$outboundSchema;
}

/** @internal */
export const Field183$inboundSchema: z.ZodNativeEnum<typeof Field183> = z
  .nativeEnum(Field183);

/** @internal */
export const Field183$outboundSchema: z.ZodNativeEnum<typeof Field183> =
  Field183$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field183$ {
  /** @deprecated use `Field183$inboundSchema` instead. */
  export const inboundSchema = Field183$inboundSchema;
  /** @deprecated use `Field183$outboundSchema` instead. */
  export const outboundSchema = Field183$outboundSchema;
}

/** @internal */
export const Field182$inboundSchema: z.ZodNativeEnum<typeof Field182> = z
  .nativeEnum(Field182);

/** @internal */
export const Field182$outboundSchema: z.ZodNativeEnum<typeof Field182> =
  Field182$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field182$ {
  /** @deprecated use `Field182$inboundSchema` instead. */
  export const inboundSchema = Field182$inboundSchema;
  /** @deprecated use `Field182$outboundSchema` instead. */
  export const outboundSchema = Field182$outboundSchema;
}

/** @internal */
export const Field181$inboundSchema: z.ZodNativeEnum<typeof Field181> = z
  .nativeEnum(Field181);

/** @internal */
export const Field181$outboundSchema: z.ZodNativeEnum<typeof Field181> =
  Field181$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field181$ {
  /** @deprecated use `Field181$inboundSchema` instead. */
  export const inboundSchema = Field181$inboundSchema;
  /** @deprecated use `Field181$outboundSchema` instead. */
  export const outboundSchema = Field181$outboundSchema;
}

/** @internal */
export const Field180$inboundSchema: z.ZodNativeEnum<typeof Field180> = z
  .nativeEnum(Field180);

/** @internal */
export const Field180$outboundSchema: z.ZodNativeEnum<typeof Field180> =
  Field180$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field180$ {
  /** @deprecated use `Field180$inboundSchema` instead. */
  export const inboundSchema = Field180$inboundSchema;
  /** @deprecated use `Field180$outboundSchema` instead. */
  export const outboundSchema = Field180$outboundSchema;
}

/** @internal */
export const Field179$inboundSchema: z.ZodNativeEnum<typeof Field179> = z
  .nativeEnum(Field179);

/** @internal */
export const Field179$outboundSchema: z.ZodNativeEnum<typeof Field179> =
  Field179$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field179$ {
  /** @deprecated use `Field179$inboundSchema` instead. */
  export const inboundSchema = Field179$inboundSchema;
  /** @deprecated use `Field179$outboundSchema` instead. */
  export const outboundSchema = Field179$outboundSchema;
}

/** @internal */
export const Field178$inboundSchema: z.ZodNativeEnum<typeof Field178> = z
  .nativeEnum(Field178);

/** @internal */
export const Field178$outboundSchema: z.ZodNativeEnum<typeof Field178> =
  Field178$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field178$ {
  /** @deprecated use `Field178$inboundSchema` instead. */
  export const inboundSchema = Field178$inboundSchema;
  /** @deprecated use `Field178$outboundSchema` instead. */
  export const outboundSchema = Field178$outboundSchema;
}

/** @internal */
export const Field177$inboundSchema: z.ZodNativeEnum<typeof Field177> = z
  .nativeEnum(Field177);

/** @internal */
export const Field177$outboundSchema: z.ZodNativeEnum<typeof Field177> =
  Field177$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field177$ {
  /** @deprecated use `Field177$inboundSchema` instead. */
  export const inboundSchema = Field177$inboundSchema;
  /** @deprecated use `Field177$outboundSchema` instead. */
  export const outboundSchema = Field177$outboundSchema;
}

/** @internal */
export const Field176$inboundSchema: z.ZodNativeEnum<typeof Field176> = z
  .nativeEnum(Field176);

/** @internal */
export const Field176$outboundSchema: z.ZodNativeEnum<typeof Field176> =
  Field176$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field176$ {
  /** @deprecated use `Field176$inboundSchema` instead. */
  export const inboundSchema = Field176$inboundSchema;
  /** @deprecated use `Field176$outboundSchema` instead. */
  export const outboundSchema = Field176$outboundSchema;
}

/** @internal */
export const Field175$inboundSchema: z.ZodNativeEnum<typeof Field175> = z
  .nativeEnum(Field175);

/** @internal */
export const Field175$outboundSchema: z.ZodNativeEnum<typeof Field175> =
  Field175$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field175$ {
  /** @deprecated use `Field175$inboundSchema` instead. */
  export const inboundSchema = Field175$inboundSchema;
  /** @deprecated use `Field175$outboundSchema` instead. */
  export const outboundSchema = Field175$outboundSchema;
}

/** @internal */
export const Field174$inboundSchema: z.ZodNativeEnum<typeof Field174> = z
  .nativeEnum(Field174);

/** @internal */
export const Field174$outboundSchema: z.ZodNativeEnum<typeof Field174> =
  Field174$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field174$ {
  /** @deprecated use `Field174$inboundSchema` instead. */
  export const inboundSchema = Field174$inboundSchema;
  /** @deprecated use `Field174$outboundSchema` instead. */
  export const outboundSchema = Field174$outboundSchema;
}

/** @internal */
export const Field173$inboundSchema: z.ZodNativeEnum<typeof Field173> = z
  .nativeEnum(Field173);

/** @internal */
export const Field173$outboundSchema: z.ZodNativeEnum<typeof Field173> =
  Field173$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field173$ {
  /** @deprecated use `Field173$inboundSchema` instead. */
  export const inboundSchema = Field173$inboundSchema;
  /** @deprecated use `Field173$outboundSchema` instead. */
  export const outboundSchema = Field173$outboundSchema;
}

/** @internal */
export const Field172$inboundSchema: z.ZodNativeEnum<typeof Field172> = z
  .nativeEnum(Field172);

/** @internal */
export const Field172$outboundSchema: z.ZodNativeEnum<typeof Field172> =
  Field172$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field172$ {
  /** @deprecated use `Field172$inboundSchema` instead. */
  export const inboundSchema = Field172$inboundSchema;
  /** @deprecated use `Field172$outboundSchema` instead. */
  export const outboundSchema = Field172$outboundSchema;
}

/** @internal */
export const Field171$inboundSchema: z.ZodNativeEnum<typeof Field171> = z
  .nativeEnum(Field171);

/** @internal */
export const Field171$outboundSchema: z.ZodNativeEnum<typeof Field171> =
  Field171$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field171$ {
  /** @deprecated use `Field171$inboundSchema` instead. */
  export const inboundSchema = Field171$inboundSchema;
  /** @deprecated use `Field171$outboundSchema` instead. */
  export const outboundSchema = Field171$outboundSchema;
}

/** @internal */
export const Field170$inboundSchema: z.ZodNativeEnum<typeof Field170> = z
  .nativeEnum(Field170);

/** @internal */
export const Field170$outboundSchema: z.ZodNativeEnum<typeof Field170> =
  Field170$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field170$ {
  /** @deprecated use `Field170$inboundSchema` instead. */
  export const inboundSchema = Field170$inboundSchema;
  /** @deprecated use `Field170$outboundSchema` instead. */
  export const outboundSchema = Field170$outboundSchema;
}

/** @internal */
export const Field169$inboundSchema: z.ZodNativeEnum<typeof Field169> = z
  .nativeEnum(Field169);

/** @internal */
export const Field169$outboundSchema: z.ZodNativeEnum<typeof Field169> =
  Field169$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field169$ {
  /** @deprecated use `Field169$inboundSchema` instead. */
  export const inboundSchema = Field169$inboundSchema;
  /** @deprecated use `Field169$outboundSchema` instead. */
  export const outboundSchema = Field169$outboundSchema;
}

/** @internal */
export const Field168$inboundSchema: z.ZodNativeEnum<typeof Field168> = z
  .nativeEnum(Field168);

/** @internal */
export const Field168$outboundSchema: z.ZodNativeEnum<typeof Field168> =
  Field168$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field168$ {
  /** @deprecated use `Field168$inboundSchema` instead. */
  export const inboundSchema = Field168$inboundSchema;
  /** @deprecated use `Field168$outboundSchema` instead. */
  export const outboundSchema = Field168$outboundSchema;
}

/** @internal */
export const Field167$inboundSchema: z.ZodNativeEnum<typeof Field167> = z
  .nativeEnum(Field167);

/** @internal */
export const Field167$outboundSchema: z.ZodNativeEnum<typeof Field167> =
  Field167$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field167$ {
  /** @deprecated use `Field167$inboundSchema` instead. */
  export const inboundSchema = Field167$inboundSchema;
  /** @deprecated use `Field167$outboundSchema` instead. */
  export const outboundSchema = Field167$outboundSchema;
}

/** @internal */
export const Field166$inboundSchema: z.ZodNativeEnum<typeof Field166> = z
  .nativeEnum(Field166);

/** @internal */
export const Field166$outboundSchema: z.ZodNativeEnum<typeof Field166> =
  Field166$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field166$ {
  /** @deprecated use `Field166$inboundSchema` instead. */
  export const inboundSchema = Field166$inboundSchema;
  /** @deprecated use `Field166$outboundSchema` instead. */
  export const outboundSchema = Field166$outboundSchema;
}

/** @internal */
export const Field165$inboundSchema: z.ZodNativeEnum<typeof Field165> = z
  .nativeEnum(Field165);

/** @internal */
export const Field165$outboundSchema: z.ZodNativeEnum<typeof Field165> =
  Field165$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field165$ {
  /** @deprecated use `Field165$inboundSchema` instead. */
  export const inboundSchema = Field165$inboundSchema;
  /** @deprecated use `Field165$outboundSchema` instead. */
  export const outboundSchema = Field165$outboundSchema;
}

/** @internal */
export const Field164$inboundSchema: z.ZodNativeEnum<typeof Field164> = z
  .nativeEnum(Field164);

/** @internal */
export const Field164$outboundSchema: z.ZodNativeEnum<typeof Field164> =
  Field164$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field164$ {
  /** @deprecated use `Field164$inboundSchema` instead. */
  export const inboundSchema = Field164$inboundSchema;
  /** @deprecated use `Field164$outboundSchema` instead. */
  export const outboundSchema = Field164$outboundSchema;
}

/** @internal */
export const Field163$inboundSchema: z.ZodNativeEnum<typeof Field163> = z
  .nativeEnum(Field163);

/** @internal */
export const Field163$outboundSchema: z.ZodNativeEnum<typeof Field163> =
  Field163$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field163$ {
  /** @deprecated use `Field163$inboundSchema` instead. */
  export const inboundSchema = Field163$inboundSchema;
  /** @deprecated use `Field163$outboundSchema` instead. */
  export const outboundSchema = Field163$outboundSchema;
}

/** @internal */
export const Field162$inboundSchema: z.ZodNativeEnum<typeof Field162> = z
  .nativeEnum(Field162);

/** @internal */
export const Field162$outboundSchema: z.ZodNativeEnum<typeof Field162> =
  Field162$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field162$ {
  /** @deprecated use `Field162$inboundSchema` instead. */
  export const inboundSchema = Field162$inboundSchema;
  /** @deprecated use `Field162$outboundSchema` instead. */
  export const outboundSchema = Field162$outboundSchema;
}

/** @internal */
export const Field161$inboundSchema: z.ZodNativeEnum<typeof Field161> = z
  .nativeEnum(Field161);

/** @internal */
export const Field161$outboundSchema: z.ZodNativeEnum<typeof Field161> =
  Field161$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field161$ {
  /** @deprecated use `Field161$inboundSchema` instead. */
  export const inboundSchema = Field161$inboundSchema;
  /** @deprecated use `Field161$outboundSchema` instead. */
  export const outboundSchema = Field161$outboundSchema;
}

/** @internal */
export const Field160$inboundSchema: z.ZodNativeEnum<typeof Field160> = z
  .nativeEnum(Field160);

/** @internal */
export const Field160$outboundSchema: z.ZodNativeEnum<typeof Field160> =
  Field160$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field160$ {
  /** @deprecated use `Field160$inboundSchema` instead. */
  export const inboundSchema = Field160$inboundSchema;
  /** @deprecated use `Field160$outboundSchema` instead. */
  export const outboundSchema = Field160$outboundSchema;
}

/** @internal */
export const Field159$inboundSchema: z.ZodNativeEnum<typeof Field159> = z
  .nativeEnum(Field159);

/** @internal */
export const Field159$outboundSchema: z.ZodNativeEnum<typeof Field159> =
  Field159$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field159$ {
  /** @deprecated use `Field159$inboundSchema` instead. */
  export const inboundSchema = Field159$inboundSchema;
  /** @deprecated use `Field159$outboundSchema` instead. */
  export const outboundSchema = Field159$outboundSchema;
}

/** @internal */
export const Field158$inboundSchema: z.ZodNativeEnum<typeof Field158> = z
  .nativeEnum(Field158);

/** @internal */
export const Field158$outboundSchema: z.ZodNativeEnum<typeof Field158> =
  Field158$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field158$ {
  /** @deprecated use `Field158$inboundSchema` instead. */
  export const inboundSchema = Field158$inboundSchema;
  /** @deprecated use `Field158$outboundSchema` instead. */
  export const outboundSchema = Field158$outboundSchema;
}

/** @internal */
export const Field157$inboundSchema: z.ZodNativeEnum<typeof Field157> = z
  .nativeEnum(Field157);

/** @internal */
export const Field157$outboundSchema: z.ZodNativeEnum<typeof Field157> =
  Field157$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field157$ {
  /** @deprecated use `Field157$inboundSchema` instead. */
  export const inboundSchema = Field157$inboundSchema;
  /** @deprecated use `Field157$outboundSchema` instead. */
  export const outboundSchema = Field157$outboundSchema;
}

/** @internal */
export const Field156$inboundSchema: z.ZodNativeEnum<typeof Field156> = z
  .nativeEnum(Field156);

/** @internal */
export const Field156$outboundSchema: z.ZodNativeEnum<typeof Field156> =
  Field156$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field156$ {
  /** @deprecated use `Field156$inboundSchema` instead. */
  export const inboundSchema = Field156$inboundSchema;
  /** @deprecated use `Field156$outboundSchema` instead. */
  export const outboundSchema = Field156$outboundSchema;
}

/** @internal */
export const Field155$inboundSchema: z.ZodNativeEnum<typeof Field155> = z
  .nativeEnum(Field155);

/** @internal */
export const Field155$outboundSchema: z.ZodNativeEnum<typeof Field155> =
  Field155$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field155$ {
  /** @deprecated use `Field155$inboundSchema` instead. */
  export const inboundSchema = Field155$inboundSchema;
  /** @deprecated use `Field155$outboundSchema` instead. */
  export const outboundSchema = Field155$outboundSchema;
}

/** @internal */
export const Field154$inboundSchema: z.ZodNativeEnum<typeof Field154> = z
  .nativeEnum(Field154);

/** @internal */
export const Field154$outboundSchema: z.ZodNativeEnum<typeof Field154> =
  Field154$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field154$ {
  /** @deprecated use `Field154$inboundSchema` instead. */
  export const inboundSchema = Field154$inboundSchema;
  /** @deprecated use `Field154$outboundSchema` instead. */
  export const outboundSchema = Field154$outboundSchema;
}

/** @internal */
export const Field153$inboundSchema: z.ZodNativeEnum<typeof Field153> = z
  .nativeEnum(Field153);

/** @internal */
export const Field153$outboundSchema: z.ZodNativeEnum<typeof Field153> =
  Field153$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field153$ {
  /** @deprecated use `Field153$inboundSchema` instead. */
  export const inboundSchema = Field153$inboundSchema;
  /** @deprecated use `Field153$outboundSchema` instead. */
  export const outboundSchema = Field153$outboundSchema;
}

/** @internal */
export const Field152$inboundSchema: z.ZodNativeEnum<typeof Field152> = z
  .nativeEnum(Field152);

/** @internal */
export const Field152$outboundSchema: z.ZodNativeEnum<typeof Field152> =
  Field152$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field152$ {
  /** @deprecated use `Field152$inboundSchema` instead. */
  export const inboundSchema = Field152$inboundSchema;
  /** @deprecated use `Field152$outboundSchema` instead. */
  export const outboundSchema = Field152$outboundSchema;
}

/** @internal */
export const Field151$inboundSchema: z.ZodNativeEnum<typeof Field151> = z
  .nativeEnum(Field151);

/** @internal */
export const Field151$outboundSchema: z.ZodNativeEnum<typeof Field151> =
  Field151$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field151$ {
  /** @deprecated use `Field151$inboundSchema` instead. */
  export const inboundSchema = Field151$inboundSchema;
  /** @deprecated use `Field151$outboundSchema` instead. */
  export const outboundSchema = Field151$outboundSchema;
}

/** @internal */
export const Field150$inboundSchema: z.ZodNativeEnum<typeof Field150> = z
  .nativeEnum(Field150);

/** @internal */
export const Field150$outboundSchema: z.ZodNativeEnum<typeof Field150> =
  Field150$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field150$ {
  /** @deprecated use `Field150$inboundSchema` instead. */
  export const inboundSchema = Field150$inboundSchema;
  /** @deprecated use `Field150$outboundSchema` instead. */
  export const outboundSchema = Field150$outboundSchema;
}

/** @internal */
export const Field149$inboundSchema: z.ZodNativeEnum<typeof Field149> = z
  .nativeEnum(Field149);

/** @internal */
export const Field149$outboundSchema: z.ZodNativeEnum<typeof Field149> =
  Field149$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field149$ {
  /** @deprecated use `Field149$inboundSchema` instead. */
  export const inboundSchema = Field149$inboundSchema;
  /** @deprecated use `Field149$outboundSchema` instead. */
  export const outboundSchema = Field149$outboundSchema;
}

/** @internal */
export const Field148$inboundSchema: z.ZodNativeEnum<typeof Field148> = z
  .nativeEnum(Field148);

/** @internal */
export const Field148$outboundSchema: z.ZodNativeEnum<typeof Field148> =
  Field148$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field148$ {
  /** @deprecated use `Field148$inboundSchema` instead. */
  export const inboundSchema = Field148$inboundSchema;
  /** @deprecated use `Field148$outboundSchema` instead. */
  export const outboundSchema = Field148$outboundSchema;
}

/** @internal */
export const Field147$inboundSchema: z.ZodNativeEnum<typeof Field147> = z
  .nativeEnum(Field147);

/** @internal */
export const Field147$outboundSchema: z.ZodNativeEnum<typeof Field147> =
  Field147$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field147$ {
  /** @deprecated use `Field147$inboundSchema` instead. */
  export const inboundSchema = Field147$inboundSchema;
  /** @deprecated use `Field147$outboundSchema` instead. */
  export const outboundSchema = Field147$outboundSchema;
}

/** @internal */
export const Field146$inboundSchema: z.ZodNativeEnum<typeof Field146> = z
  .nativeEnum(Field146);

/** @internal */
export const Field146$outboundSchema: z.ZodNativeEnum<typeof Field146> =
  Field146$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field146$ {
  /** @deprecated use `Field146$inboundSchema` instead. */
  export const inboundSchema = Field146$inboundSchema;
  /** @deprecated use `Field146$outboundSchema` instead. */
  export const outboundSchema = Field146$outboundSchema;
}

/** @internal */
export const Field145$inboundSchema: z.ZodNativeEnum<typeof Field145> = z
  .nativeEnum(Field145);

/** @internal */
export const Field145$outboundSchema: z.ZodNativeEnum<typeof Field145> =
  Field145$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field145$ {
  /** @deprecated use `Field145$inboundSchema` instead. */
  export const inboundSchema = Field145$inboundSchema;
  /** @deprecated use `Field145$outboundSchema` instead. */
  export const outboundSchema = Field145$outboundSchema;
}

/** @internal */
export const Field144$inboundSchema: z.ZodNativeEnum<typeof Field144> = z
  .nativeEnum(Field144);

/** @internal */
export const Field144$outboundSchema: z.ZodNativeEnum<typeof Field144> =
  Field144$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field144$ {
  /** @deprecated use `Field144$inboundSchema` instead. */
  export const inboundSchema = Field144$inboundSchema;
  /** @deprecated use `Field144$outboundSchema` instead. */
  export const outboundSchema = Field144$outboundSchema;
}

/** @internal */
export const Field143$inboundSchema: z.ZodNativeEnum<typeof Field143> = z
  .nativeEnum(Field143);

/** @internal */
export const Field143$outboundSchema: z.ZodNativeEnum<typeof Field143> =
  Field143$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field143$ {
  /** @deprecated use `Field143$inboundSchema` instead. */
  export const inboundSchema = Field143$inboundSchema;
  /** @deprecated use `Field143$outboundSchema` instead. */
  export const outboundSchema = Field143$outboundSchema;
}

/** @internal */
export const Field142$inboundSchema: z.ZodNativeEnum<typeof Field142> = z
  .nativeEnum(Field142);

/** @internal */
export const Field142$outboundSchema: z.ZodNativeEnum<typeof Field142> =
  Field142$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field142$ {
  /** @deprecated use `Field142$inboundSchema` instead. */
  export const inboundSchema = Field142$inboundSchema;
  /** @deprecated use `Field142$outboundSchema` instead. */
  export const outboundSchema = Field142$outboundSchema;
}

/** @internal */
export const Field141$inboundSchema: z.ZodNativeEnum<typeof Field141> = z
  .nativeEnum(Field141);

/** @internal */
export const Field141$outboundSchema: z.ZodNativeEnum<typeof Field141> =
  Field141$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field141$ {
  /** @deprecated use `Field141$inboundSchema` instead. */
  export const inboundSchema = Field141$inboundSchema;
  /** @deprecated use `Field141$outboundSchema` instead. */
  export const outboundSchema = Field141$outboundSchema;
}

/** @internal */
export const Field140$inboundSchema: z.ZodNativeEnum<typeof Field140> = z
  .nativeEnum(Field140);

/** @internal */
export const Field140$outboundSchema: z.ZodNativeEnum<typeof Field140> =
  Field140$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field140$ {
  /** @deprecated use `Field140$inboundSchema` instead. */
  export const inboundSchema = Field140$inboundSchema;
  /** @deprecated use `Field140$outboundSchema` instead. */
  export const outboundSchema = Field140$outboundSchema;
}

/** @internal */
export const Field139$inboundSchema: z.ZodNativeEnum<typeof Field139> = z
  .nativeEnum(Field139);

/** @internal */
export const Field139$outboundSchema: z.ZodNativeEnum<typeof Field139> =
  Field139$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field139$ {
  /** @deprecated use `Field139$inboundSchema` instead. */
  export const inboundSchema = Field139$inboundSchema;
  /** @deprecated use `Field139$outboundSchema` instead. */
  export const outboundSchema = Field139$outboundSchema;
}

/** @internal */
export const Field138$inboundSchema: z.ZodNativeEnum<typeof Field138> = z
  .nativeEnum(Field138);

/** @internal */
export const Field138$outboundSchema: z.ZodNativeEnum<typeof Field138> =
  Field138$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field138$ {
  /** @deprecated use `Field138$inboundSchema` instead. */
  export const inboundSchema = Field138$inboundSchema;
  /** @deprecated use `Field138$outboundSchema` instead. */
  export const outboundSchema = Field138$outboundSchema;
}

/** @internal */
export const Field137$inboundSchema: z.ZodNativeEnum<typeof Field137> = z
  .nativeEnum(Field137);

/** @internal */
export const Field137$outboundSchema: z.ZodNativeEnum<typeof Field137> =
  Field137$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field137$ {
  /** @deprecated use `Field137$inboundSchema` instead. */
  export const inboundSchema = Field137$inboundSchema;
  /** @deprecated use `Field137$outboundSchema` instead. */
  export const outboundSchema = Field137$outboundSchema;
}

/** @internal */
export const Field136$inboundSchema: z.ZodNativeEnum<typeof Field136> = z
  .nativeEnum(Field136);

/** @internal */
export const Field136$outboundSchema: z.ZodNativeEnum<typeof Field136> =
  Field136$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field136$ {
  /** @deprecated use `Field136$inboundSchema` instead. */
  export const inboundSchema = Field136$inboundSchema;
  /** @deprecated use `Field136$outboundSchema` instead. */
  export const outboundSchema = Field136$outboundSchema;
}

/** @internal */
export const Field135$inboundSchema: z.ZodNativeEnum<typeof Field135> = z
  .nativeEnum(Field135);

/** @internal */
export const Field135$outboundSchema: z.ZodNativeEnum<typeof Field135> =
  Field135$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field135$ {
  /** @deprecated use `Field135$inboundSchema` instead. */
  export const inboundSchema = Field135$inboundSchema;
  /** @deprecated use `Field135$outboundSchema` instead. */
  export const outboundSchema = Field135$outboundSchema;
}

/** @internal */
export const Field134$inboundSchema: z.ZodNativeEnum<typeof Field134> = z
  .nativeEnum(Field134);

/** @internal */
export const Field134$outboundSchema: z.ZodNativeEnum<typeof Field134> =
  Field134$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field134$ {
  /** @deprecated use `Field134$inboundSchema` instead. */
  export const inboundSchema = Field134$inboundSchema;
  /** @deprecated use `Field134$outboundSchema` instead. */
  export const outboundSchema = Field134$outboundSchema;
}

/** @internal */
export const Field133$inboundSchema: z.ZodNativeEnum<typeof Field133> = z
  .nativeEnum(Field133);

/** @internal */
export const Field133$outboundSchema: z.ZodNativeEnum<typeof Field133> =
  Field133$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field133$ {
  /** @deprecated use `Field133$inboundSchema` instead. */
  export const inboundSchema = Field133$inboundSchema;
  /** @deprecated use `Field133$outboundSchema` instead. */
  export const outboundSchema = Field133$outboundSchema;
}

/** @internal */
export const Field132$inboundSchema: z.ZodNativeEnum<typeof Field132> = z
  .nativeEnum(Field132);

/** @internal */
export const Field132$outboundSchema: z.ZodNativeEnum<typeof Field132> =
  Field132$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field132$ {
  /** @deprecated use `Field132$inboundSchema` instead. */
  export const inboundSchema = Field132$inboundSchema;
  /** @deprecated use `Field132$outboundSchema` instead. */
  export const outboundSchema = Field132$outboundSchema;
}

/** @internal */
export const Field131$inboundSchema: z.ZodNativeEnum<typeof Field131> = z
  .nativeEnum(Field131);

/** @internal */
export const Field131$outboundSchema: z.ZodNativeEnum<typeof Field131> =
  Field131$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field131$ {
  /** @deprecated use `Field131$inboundSchema` instead. */
  export const inboundSchema = Field131$inboundSchema;
  /** @deprecated use `Field131$outboundSchema` instead. */
  export const outboundSchema = Field131$outboundSchema;
}

/** @internal */
export const Field130$inboundSchema: z.ZodNativeEnum<typeof Field130> = z
  .nativeEnum(Field130);

/** @internal */
export const Field130$outboundSchema: z.ZodNativeEnum<typeof Field130> =
  Field130$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field130$ {
  /** @deprecated use `Field130$inboundSchema` instead. */
  export const inboundSchema = Field130$inboundSchema;
  /** @deprecated use `Field130$outboundSchema` instead. */
  export const outboundSchema = Field130$outboundSchema;
}

/** @internal */
export const Field129$inboundSchema: z.ZodNativeEnum<typeof Field129> = z
  .nativeEnum(Field129);

/** @internal */
export const Field129$outboundSchema: z.ZodNativeEnum<typeof Field129> =
  Field129$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field129$ {
  /** @deprecated use `Field129$inboundSchema` instead. */
  export const inboundSchema = Field129$inboundSchema;
  /** @deprecated use `Field129$outboundSchema` instead. */
  export const outboundSchema = Field129$outboundSchema;
}

/** @internal */
export const Field128$inboundSchema: z.ZodNativeEnum<typeof Field128> = z
  .nativeEnum(Field128);

/** @internal */
export const Field128$outboundSchema: z.ZodNativeEnum<typeof Field128> =
  Field128$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field128$ {
  /** @deprecated use `Field128$inboundSchema` instead. */
  export const inboundSchema = Field128$inboundSchema;
  /** @deprecated use `Field128$outboundSchema` instead. */
  export const outboundSchema = Field128$outboundSchema;
}

/** @internal */
export const Field127$inboundSchema: z.ZodNativeEnum<typeof Field127> = z
  .nativeEnum(Field127);

/** @internal */
export const Field127$outboundSchema: z.ZodNativeEnum<typeof Field127> =
  Field127$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field127$ {
  /** @deprecated use `Field127$inboundSchema` instead. */
  export const inboundSchema = Field127$inboundSchema;
  /** @deprecated use `Field127$outboundSchema` instead. */
  export const outboundSchema = Field127$outboundSchema;
}

/** @internal */
export const Field126$inboundSchema: z.ZodNativeEnum<typeof Field126> = z
  .nativeEnum(Field126);

/** @internal */
export const Field126$outboundSchema: z.ZodNativeEnum<typeof Field126> =
  Field126$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field126$ {
  /** @deprecated use `Field126$inboundSchema` instead. */
  export const inboundSchema = Field126$inboundSchema;
  /** @deprecated use `Field126$outboundSchema` instead. */
  export const outboundSchema = Field126$outboundSchema;
}

/** @internal */
export const Field125$inboundSchema: z.ZodNativeEnum<typeof Field125> = z
  .nativeEnum(Field125);

/** @internal */
export const Field125$outboundSchema: z.ZodNativeEnum<typeof Field125> =
  Field125$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field125$ {
  /** @deprecated use `Field125$inboundSchema` instead. */
  export const inboundSchema = Field125$inboundSchema;
  /** @deprecated use `Field125$outboundSchema` instead. */
  export const outboundSchema = Field125$outboundSchema;
}

/** @internal */
export const Field124$inboundSchema: z.ZodNativeEnum<typeof Field124> = z
  .nativeEnum(Field124);

/** @internal */
export const Field124$outboundSchema: z.ZodNativeEnum<typeof Field124> =
  Field124$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field124$ {
  /** @deprecated use `Field124$inboundSchema` instead. */
  export const inboundSchema = Field124$inboundSchema;
  /** @deprecated use `Field124$outboundSchema` instead. */
  export const outboundSchema = Field124$outboundSchema;
}

/** @internal */
export const Field123$inboundSchema: z.ZodNativeEnum<typeof Field123> = z
  .nativeEnum(Field123);

/** @internal */
export const Field123$outboundSchema: z.ZodNativeEnum<typeof Field123> =
  Field123$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field123$ {
  /** @deprecated use `Field123$inboundSchema` instead. */
  export const inboundSchema = Field123$inboundSchema;
  /** @deprecated use `Field123$outboundSchema` instead. */
  export const outboundSchema = Field123$outboundSchema;
}

/** @internal */
export const Field122$inboundSchema: z.ZodNativeEnum<typeof Field122> = z
  .nativeEnum(Field122);

/** @internal */
export const Field122$outboundSchema: z.ZodNativeEnum<typeof Field122> =
  Field122$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field122$ {
  /** @deprecated use `Field122$inboundSchema` instead. */
  export const inboundSchema = Field122$inboundSchema;
  /** @deprecated use `Field122$outboundSchema` instead. */
  export const outboundSchema = Field122$outboundSchema;
}

/** @internal */
export const Field121$inboundSchema: z.ZodNativeEnum<typeof Field121> = z
  .nativeEnum(Field121);

/** @internal */
export const Field121$outboundSchema: z.ZodNativeEnum<typeof Field121> =
  Field121$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field121$ {
  /** @deprecated use `Field121$inboundSchema` instead. */
  export const inboundSchema = Field121$inboundSchema;
  /** @deprecated use `Field121$outboundSchema` instead. */
  export const outboundSchema = Field121$outboundSchema;
}

/** @internal */
export const Field120$inboundSchema: z.ZodNativeEnum<typeof Field120> = z
  .nativeEnum(Field120);

/** @internal */
export const Field120$outboundSchema: z.ZodNativeEnum<typeof Field120> =
  Field120$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field120$ {
  /** @deprecated use `Field120$inboundSchema` instead. */
  export const inboundSchema = Field120$inboundSchema;
  /** @deprecated use `Field120$outboundSchema` instead. */
  export const outboundSchema = Field120$outboundSchema;
}

/** @internal */
export const Field119$inboundSchema: z.ZodNativeEnum<typeof Field119> = z
  .nativeEnum(Field119);

/** @internal */
export const Field119$outboundSchema: z.ZodNativeEnum<typeof Field119> =
  Field119$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field119$ {
  /** @deprecated use `Field119$inboundSchema` instead. */
  export const inboundSchema = Field119$inboundSchema;
  /** @deprecated use `Field119$outboundSchema` instead. */
  export const outboundSchema = Field119$outboundSchema;
}

/** @internal */
export const Field118$inboundSchema: z.ZodNativeEnum<typeof Field118> = z
  .nativeEnum(Field118);

/** @internal */
export const Field118$outboundSchema: z.ZodNativeEnum<typeof Field118> =
  Field118$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field118$ {
  /** @deprecated use `Field118$inboundSchema` instead. */
  export const inboundSchema = Field118$inboundSchema;
  /** @deprecated use `Field118$outboundSchema` instead. */
  export const outboundSchema = Field118$outboundSchema;
}

/** @internal */
export const Field117$inboundSchema: z.ZodNativeEnum<typeof Field117> = z
  .nativeEnum(Field117);

/** @internal */
export const Field117$outboundSchema: z.ZodNativeEnum<typeof Field117> =
  Field117$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field117$ {
  /** @deprecated use `Field117$inboundSchema` instead. */
  export const inboundSchema = Field117$inboundSchema;
  /** @deprecated use `Field117$outboundSchema` instead. */
  export const outboundSchema = Field117$outboundSchema;
}

/** @internal */
export const Field116$inboundSchema: z.ZodNativeEnum<typeof Field116> = z
  .nativeEnum(Field116);

/** @internal */
export const Field116$outboundSchema: z.ZodNativeEnum<typeof Field116> =
  Field116$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field116$ {
  /** @deprecated use `Field116$inboundSchema` instead. */
  export const inboundSchema = Field116$inboundSchema;
  /** @deprecated use `Field116$outboundSchema` instead. */
  export const outboundSchema = Field116$outboundSchema;
}

/** @internal */
export const Field115$inboundSchema: z.ZodNativeEnum<typeof Field115> = z
  .nativeEnum(Field115);

/** @internal */
export const Field115$outboundSchema: z.ZodNativeEnum<typeof Field115> =
  Field115$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field115$ {
  /** @deprecated use `Field115$inboundSchema` instead. */
  export const inboundSchema = Field115$inboundSchema;
  /** @deprecated use `Field115$outboundSchema` instead. */
  export const outboundSchema = Field115$outboundSchema;
}

/** @internal */
export const Field114$inboundSchema: z.ZodNativeEnum<typeof Field114> = z
  .nativeEnum(Field114);

/** @internal */
export const Field114$outboundSchema: z.ZodNativeEnum<typeof Field114> =
  Field114$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field114$ {
  /** @deprecated use `Field114$inboundSchema` instead. */
  export const inboundSchema = Field114$inboundSchema;
  /** @deprecated use `Field114$outboundSchema` instead. */
  export const outboundSchema = Field114$outboundSchema;
}

/** @internal */
export const Field113$inboundSchema: z.ZodNativeEnum<typeof Field113> = z
  .nativeEnum(Field113);

/** @internal */
export const Field113$outboundSchema: z.ZodNativeEnum<typeof Field113> =
  Field113$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field113$ {
  /** @deprecated use `Field113$inboundSchema` instead. */
  export const inboundSchema = Field113$inboundSchema;
  /** @deprecated use `Field113$outboundSchema` instead. */
  export const outboundSchema = Field113$outboundSchema;
}

/** @internal */
export const Field112$inboundSchema: z.ZodNativeEnum<typeof Field112> = z
  .nativeEnum(Field112);

/** @internal */
export const Field112$outboundSchema: z.ZodNativeEnum<typeof Field112> =
  Field112$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field112$ {
  /** @deprecated use `Field112$inboundSchema` instead. */
  export const inboundSchema = Field112$inboundSchema;
  /** @deprecated use `Field112$outboundSchema` instead. */
  export const outboundSchema = Field112$outboundSchema;
}

/** @internal */
export const Field111$inboundSchema: z.ZodNativeEnum<typeof Field111> = z
  .nativeEnum(Field111);

/** @internal */
export const Field111$outboundSchema: z.ZodNativeEnum<typeof Field111> =
  Field111$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field111$ {
  /** @deprecated use `Field111$inboundSchema` instead. */
  export const inboundSchema = Field111$inboundSchema;
  /** @deprecated use `Field111$outboundSchema` instead. */
  export const outboundSchema = Field111$outboundSchema;
}

/** @internal */
export const Field110$inboundSchema: z.ZodNativeEnum<typeof Field110> = z
  .nativeEnum(Field110);

/** @internal */
export const Field110$outboundSchema: z.ZodNativeEnum<typeof Field110> =
  Field110$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field110$ {
  /** @deprecated use `Field110$inboundSchema` instead. */
  export const inboundSchema = Field110$inboundSchema;
  /** @deprecated use `Field110$outboundSchema` instead. */
  export const outboundSchema = Field110$outboundSchema;
}

/** @internal */
export const Field109$inboundSchema: z.ZodNativeEnum<typeof Field109> = z
  .nativeEnum(Field109);

/** @internal */
export const Field109$outboundSchema: z.ZodNativeEnum<typeof Field109> =
  Field109$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field109$ {
  /** @deprecated use `Field109$inboundSchema` instead. */
  export const inboundSchema = Field109$inboundSchema;
  /** @deprecated use `Field109$outboundSchema` instead. */
  export const outboundSchema = Field109$outboundSchema;
}

/** @internal */
export const Field108$inboundSchema: z.ZodNativeEnum<typeof Field108> = z
  .nativeEnum(Field108);

/** @internal */
export const Field108$outboundSchema: z.ZodNativeEnum<typeof Field108> =
  Field108$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field108$ {
  /** @deprecated use `Field108$inboundSchema` instead. */
  export const inboundSchema = Field108$inboundSchema;
  /** @deprecated use `Field108$outboundSchema` instead. */
  export const outboundSchema = Field108$outboundSchema;
}

/** @internal */
export const Field107$inboundSchema: z.ZodNativeEnum<typeof Field107> = z
  .nativeEnum(Field107);

/** @internal */
export const Field107$outboundSchema: z.ZodNativeEnum<typeof Field107> =
  Field107$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field107$ {
  /** @deprecated use `Field107$inboundSchema` instead. */
  export const inboundSchema = Field107$inboundSchema;
  /** @deprecated use `Field107$outboundSchema` instead. */
  export const outboundSchema = Field107$outboundSchema;
}

/** @internal */
export const Field106$inboundSchema: z.ZodNativeEnum<typeof Field106> = z
  .nativeEnum(Field106);

/** @internal */
export const Field106$outboundSchema: z.ZodNativeEnum<typeof Field106> =
  Field106$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field106$ {
  /** @deprecated use `Field106$inboundSchema` instead. */
  export const inboundSchema = Field106$inboundSchema;
  /** @deprecated use `Field106$outboundSchema` instead. */
  export const outboundSchema = Field106$outboundSchema;
}

/** @internal */
export const Field105$inboundSchema: z.ZodNativeEnum<typeof Field105> = z
  .nativeEnum(Field105);

/** @internal */
export const Field105$outboundSchema: z.ZodNativeEnum<typeof Field105> =
  Field105$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field105$ {
  /** @deprecated use `Field105$inboundSchema` instead. */
  export const inboundSchema = Field105$inboundSchema;
  /** @deprecated use `Field105$outboundSchema` instead. */
  export const outboundSchema = Field105$outboundSchema;
}

/** @internal */
export const Field104$inboundSchema: z.ZodNativeEnum<typeof Field104> = z
  .nativeEnum(Field104);

/** @internal */
export const Field104$outboundSchema: z.ZodNativeEnum<typeof Field104> =
  Field104$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field104$ {
  /** @deprecated use `Field104$inboundSchema` instead. */
  export const inboundSchema = Field104$inboundSchema;
  /** @deprecated use `Field104$outboundSchema` instead. */
  export const outboundSchema = Field104$outboundSchema;
}

/** @internal */
export const Field103$inboundSchema: z.ZodNativeEnum<typeof Field103> = z
  .nativeEnum(Field103);

/** @internal */
export const Field103$outboundSchema: z.ZodNativeEnum<typeof Field103> =
  Field103$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field103$ {
  /** @deprecated use `Field103$inboundSchema` instead. */
  export const inboundSchema = Field103$inboundSchema;
  /** @deprecated use `Field103$outboundSchema` instead. */
  export const outboundSchema = Field103$outboundSchema;
}

/** @internal */
export const Field102$inboundSchema: z.ZodNativeEnum<typeof Field102> = z
  .nativeEnum(Field102);

/** @internal */
export const Field102$outboundSchema: z.ZodNativeEnum<typeof Field102> =
  Field102$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field102$ {
  /** @deprecated use `Field102$inboundSchema` instead. */
  export const inboundSchema = Field102$inboundSchema;
  /** @deprecated use `Field102$outboundSchema` instead. */
  export const outboundSchema = Field102$outboundSchema;
}

/** @internal */
export const Field101$inboundSchema: z.ZodNativeEnum<typeof Field101> = z
  .nativeEnum(Field101);

/** @internal */
export const Field101$outboundSchema: z.ZodNativeEnum<typeof Field101> =
  Field101$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field101$ {
  /** @deprecated use `Field101$inboundSchema` instead. */
  export const inboundSchema = Field101$inboundSchema;
  /** @deprecated use `Field101$outboundSchema` instead. */
  export const outboundSchema = Field101$outboundSchema;
}

/** @internal */
export const Field100$inboundSchema: z.ZodNativeEnum<typeof Field100> = z
  .nativeEnum(Field100);

/** @internal */
export const Field100$outboundSchema: z.ZodNativeEnum<typeof Field100> =
  Field100$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field100$ {
  /** @deprecated use `Field100$inboundSchema` instead. */
  export const inboundSchema = Field100$inboundSchema;
  /** @deprecated use `Field100$outboundSchema` instead. */
  export const outboundSchema = Field100$outboundSchema;
}

/** @internal */
export const Field99$inboundSchema: z.ZodNativeEnum<typeof Field99> = z
  .nativeEnum(Field99);

/** @internal */
export const Field99$outboundSchema: z.ZodNativeEnum<typeof Field99> =
  Field99$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field99$ {
  /** @deprecated use `Field99$inboundSchema` instead. */
  export const inboundSchema = Field99$inboundSchema;
  /** @deprecated use `Field99$outboundSchema` instead. */
  export const outboundSchema = Field99$outboundSchema;
}

/** @internal */
export const Field98$inboundSchema: z.ZodNativeEnum<typeof Field98> = z
  .nativeEnum(Field98);

/** @internal */
export const Field98$outboundSchema: z.ZodNativeEnum<typeof Field98> =
  Field98$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field98$ {
  /** @deprecated use `Field98$inboundSchema` instead. */
  export const inboundSchema = Field98$inboundSchema;
  /** @deprecated use `Field98$outboundSchema` instead. */
  export const outboundSchema = Field98$outboundSchema;
}

/** @internal */
export const Field97$inboundSchema: z.ZodNativeEnum<typeof Field97> = z
  .nativeEnum(Field97);

/** @internal */
export const Field97$outboundSchema: z.ZodNativeEnum<typeof Field97> =
  Field97$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field97$ {
  /** @deprecated use `Field97$inboundSchema` instead. */
  export const inboundSchema = Field97$inboundSchema;
  /** @deprecated use `Field97$outboundSchema` instead. */
  export const outboundSchema = Field97$outboundSchema;
}

/** @internal */
export const Field96$inboundSchema: z.ZodNativeEnum<typeof Field96> = z
  .nativeEnum(Field96);

/** @internal */
export const Field96$outboundSchema: z.ZodNativeEnum<typeof Field96> =
  Field96$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field96$ {
  /** @deprecated use `Field96$inboundSchema` instead. */
  export const inboundSchema = Field96$inboundSchema;
  /** @deprecated use `Field96$outboundSchema` instead. */
  export const outboundSchema = Field96$outboundSchema;
}

/** @internal */
export const Field95$inboundSchema: z.ZodNativeEnum<typeof Field95> = z
  .nativeEnum(Field95);

/** @internal */
export const Field95$outboundSchema: z.ZodNativeEnum<typeof Field95> =
  Field95$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field95$ {
  /** @deprecated use `Field95$inboundSchema` instead. */
  export const inboundSchema = Field95$inboundSchema;
  /** @deprecated use `Field95$outboundSchema` instead. */
  export const outboundSchema = Field95$outboundSchema;
}

/** @internal */
export const Field94$inboundSchema: z.ZodNativeEnum<typeof Field94> = z
  .nativeEnum(Field94);

/** @internal */
export const Field94$outboundSchema: z.ZodNativeEnum<typeof Field94> =
  Field94$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field94$ {
  /** @deprecated use `Field94$inboundSchema` instead. */
  export const inboundSchema = Field94$inboundSchema;
  /** @deprecated use `Field94$outboundSchema` instead. */
  export const outboundSchema = Field94$outboundSchema;
}

/** @internal */
export const Field93$inboundSchema: z.ZodNativeEnum<typeof Field93> = z
  .nativeEnum(Field93);

/** @internal */
export const Field93$outboundSchema: z.ZodNativeEnum<typeof Field93> =
  Field93$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field93$ {
  /** @deprecated use `Field93$inboundSchema` instead. */
  export const inboundSchema = Field93$inboundSchema;
  /** @deprecated use `Field93$outboundSchema` instead. */
  export const outboundSchema = Field93$outboundSchema;
}

/** @internal */
export const Field92$inboundSchema: z.ZodNativeEnum<typeof Field92> = z
  .nativeEnum(Field92);

/** @internal */
export const Field92$outboundSchema: z.ZodNativeEnum<typeof Field92> =
  Field92$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field92$ {
  /** @deprecated use `Field92$inboundSchema` instead. */
  export const inboundSchema = Field92$inboundSchema;
  /** @deprecated use `Field92$outboundSchema` instead. */
  export const outboundSchema = Field92$outboundSchema;
}

/** @internal */
export const Field91$inboundSchema: z.ZodNativeEnum<typeof Field91> = z
  .nativeEnum(Field91);

/** @internal */
export const Field91$outboundSchema: z.ZodNativeEnum<typeof Field91> =
  Field91$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field91$ {
  /** @deprecated use `Field91$inboundSchema` instead. */
  export const inboundSchema = Field91$inboundSchema;
  /** @deprecated use `Field91$outboundSchema` instead. */
  export const outboundSchema = Field91$outboundSchema;
}

/** @internal */
export const Field90$inboundSchema: z.ZodNativeEnum<typeof Field90> = z
  .nativeEnum(Field90);

/** @internal */
export const Field90$outboundSchema: z.ZodNativeEnum<typeof Field90> =
  Field90$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field90$ {
  /** @deprecated use `Field90$inboundSchema` instead. */
  export const inboundSchema = Field90$inboundSchema;
  /** @deprecated use `Field90$outboundSchema` instead. */
  export const outboundSchema = Field90$outboundSchema;
}

/** @internal */
export const Field89$inboundSchema: z.ZodNativeEnum<typeof Field89> = z
  .nativeEnum(Field89);

/** @internal */
export const Field89$outboundSchema: z.ZodNativeEnum<typeof Field89> =
  Field89$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field89$ {
  /** @deprecated use `Field89$inboundSchema` instead. */
  export const inboundSchema = Field89$inboundSchema;
  /** @deprecated use `Field89$outboundSchema` instead. */
  export const outboundSchema = Field89$outboundSchema;
}

/** @internal */
export const Field88$inboundSchema: z.ZodNativeEnum<typeof Field88> = z
  .nativeEnum(Field88);

/** @internal */
export const Field88$outboundSchema: z.ZodNativeEnum<typeof Field88> =
  Field88$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field88$ {
  /** @deprecated use `Field88$inboundSchema` instead. */
  export const inboundSchema = Field88$inboundSchema;
  /** @deprecated use `Field88$outboundSchema` instead. */
  export const outboundSchema = Field88$outboundSchema;
}

/** @internal */
export const Field87$inboundSchema: z.ZodNativeEnum<typeof Field87> = z
  .nativeEnum(Field87);

/** @internal */
export const Field87$outboundSchema: z.ZodNativeEnum<typeof Field87> =
  Field87$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field87$ {
  /** @deprecated use `Field87$inboundSchema` instead. */
  export const inboundSchema = Field87$inboundSchema;
  /** @deprecated use `Field87$outboundSchema` instead. */
  export const outboundSchema = Field87$outboundSchema;
}

/** @internal */
export const Field86$inboundSchema: z.ZodNativeEnum<typeof Field86> = z
  .nativeEnum(Field86);

/** @internal */
export const Field86$outboundSchema: z.ZodNativeEnum<typeof Field86> =
  Field86$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field86$ {
  /** @deprecated use `Field86$inboundSchema` instead. */
  export const inboundSchema = Field86$inboundSchema;
  /** @deprecated use `Field86$outboundSchema` instead. */
  export const outboundSchema = Field86$outboundSchema;
}

/** @internal */
export const Field85$inboundSchema: z.ZodNativeEnum<typeof Field85> = z
  .nativeEnum(Field85);

/** @internal */
export const Field85$outboundSchema: z.ZodNativeEnum<typeof Field85> =
  Field85$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field85$ {
  /** @deprecated use `Field85$inboundSchema` instead. */
  export const inboundSchema = Field85$inboundSchema;
  /** @deprecated use `Field85$outboundSchema` instead. */
  export const outboundSchema = Field85$outboundSchema;
}

/** @internal */
export const Field84$inboundSchema: z.ZodNativeEnum<typeof Field84> = z
  .nativeEnum(Field84);

/** @internal */
export const Field84$outboundSchema: z.ZodNativeEnum<typeof Field84> =
  Field84$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field84$ {
  /** @deprecated use `Field84$inboundSchema` instead. */
  export const inboundSchema = Field84$inboundSchema;
  /** @deprecated use `Field84$outboundSchema` instead. */
  export const outboundSchema = Field84$outboundSchema;
}

/** @internal */
export const Field83$inboundSchema: z.ZodNativeEnum<typeof Field83> = z
  .nativeEnum(Field83);

/** @internal */
export const Field83$outboundSchema: z.ZodNativeEnum<typeof Field83> =
  Field83$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field83$ {
  /** @deprecated use `Field83$inboundSchema` instead. */
  export const inboundSchema = Field83$inboundSchema;
  /** @deprecated use `Field83$outboundSchema` instead. */
  export const outboundSchema = Field83$outboundSchema;
}

/** @internal */
export const Field82$inboundSchema: z.ZodNativeEnum<typeof Field82> = z
  .nativeEnum(Field82);

/** @internal */
export const Field82$outboundSchema: z.ZodNativeEnum<typeof Field82> =
  Field82$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field82$ {
  /** @deprecated use `Field82$inboundSchema` instead. */
  export const inboundSchema = Field82$inboundSchema;
  /** @deprecated use `Field82$outboundSchema` instead. */
  export const outboundSchema = Field82$outboundSchema;
}

/** @internal */
export const Field81$inboundSchema: z.ZodNativeEnum<typeof Field81> = z
  .nativeEnum(Field81);

/** @internal */
export const Field81$outboundSchema: z.ZodNativeEnum<typeof Field81> =
  Field81$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field81$ {
  /** @deprecated use `Field81$inboundSchema` instead. */
  export const inboundSchema = Field81$inboundSchema;
  /** @deprecated use `Field81$outboundSchema` instead. */
  export const outboundSchema = Field81$outboundSchema;
}

/** @internal */
export const Field80$inboundSchema: z.ZodNativeEnum<typeof Field80> = z
  .nativeEnum(Field80);

/** @internal */
export const Field80$outboundSchema: z.ZodNativeEnum<typeof Field80> =
  Field80$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field80$ {
  /** @deprecated use `Field80$inboundSchema` instead. */
  export const inboundSchema = Field80$inboundSchema;
  /** @deprecated use `Field80$outboundSchema` instead. */
  export const outboundSchema = Field80$outboundSchema;
}

/** @internal */
export const Field79$inboundSchema: z.ZodNativeEnum<typeof Field79> = z
  .nativeEnum(Field79);

/** @internal */
export const Field79$outboundSchema: z.ZodNativeEnum<typeof Field79> =
  Field79$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field79$ {
  /** @deprecated use `Field79$inboundSchema` instead. */
  export const inboundSchema = Field79$inboundSchema;
  /** @deprecated use `Field79$outboundSchema` instead. */
  export const outboundSchema = Field79$outboundSchema;
}

/** @internal */
export const Field78$inboundSchema: z.ZodNativeEnum<typeof Field78> = z
  .nativeEnum(Field78);

/** @internal */
export const Field78$outboundSchema: z.ZodNativeEnum<typeof Field78> =
  Field78$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field78$ {
  /** @deprecated use `Field78$inboundSchema` instead. */
  export const inboundSchema = Field78$inboundSchema;
  /** @deprecated use `Field78$outboundSchema` instead. */
  export const outboundSchema = Field78$outboundSchema;
}

/** @internal */
export const Field77$inboundSchema: z.ZodNativeEnum<typeof Field77> = z
  .nativeEnum(Field77);

/** @internal */
export const Field77$outboundSchema: z.ZodNativeEnum<typeof Field77> =
  Field77$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field77$ {
  /** @deprecated use `Field77$inboundSchema` instead. */
  export const inboundSchema = Field77$inboundSchema;
  /** @deprecated use `Field77$outboundSchema` instead. */
  export const outboundSchema = Field77$outboundSchema;
}

/** @internal */
export const Field76$inboundSchema: z.ZodNativeEnum<typeof Field76> = z
  .nativeEnum(Field76);

/** @internal */
export const Field76$outboundSchema: z.ZodNativeEnum<typeof Field76> =
  Field76$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field76$ {
  /** @deprecated use `Field76$inboundSchema` instead. */
  export const inboundSchema = Field76$inboundSchema;
  /** @deprecated use `Field76$outboundSchema` instead. */
  export const outboundSchema = Field76$outboundSchema;
}

/** @internal */
export const Field75$inboundSchema: z.ZodNativeEnum<typeof Field75> = z
  .nativeEnum(Field75);

/** @internal */
export const Field75$outboundSchema: z.ZodNativeEnum<typeof Field75> =
  Field75$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field75$ {
  /** @deprecated use `Field75$inboundSchema` instead. */
  export const inboundSchema = Field75$inboundSchema;
  /** @deprecated use `Field75$outboundSchema` instead. */
  export const outboundSchema = Field75$outboundSchema;
}

/** @internal */
export const Field74$inboundSchema: z.ZodNativeEnum<typeof Field74> = z
  .nativeEnum(Field74);

/** @internal */
export const Field74$outboundSchema: z.ZodNativeEnum<typeof Field74> =
  Field74$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field74$ {
  /** @deprecated use `Field74$inboundSchema` instead. */
  export const inboundSchema = Field74$inboundSchema;
  /** @deprecated use `Field74$outboundSchema` instead. */
  export const outboundSchema = Field74$outboundSchema;
}

/** @internal */
export const Field73$inboundSchema: z.ZodNativeEnum<typeof Field73> = z
  .nativeEnum(Field73);

/** @internal */
export const Field73$outboundSchema: z.ZodNativeEnum<typeof Field73> =
  Field73$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field73$ {
  /** @deprecated use `Field73$inboundSchema` instead. */
  export const inboundSchema = Field73$inboundSchema;
  /** @deprecated use `Field73$outboundSchema` instead. */
  export const outboundSchema = Field73$outboundSchema;
}

/** @internal */
export const Field72$inboundSchema: z.ZodNativeEnum<typeof Field72> = z
  .nativeEnum(Field72);

/** @internal */
export const Field72$outboundSchema: z.ZodNativeEnum<typeof Field72> =
  Field72$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field72$ {
  /** @deprecated use `Field72$inboundSchema` instead. */
  export const inboundSchema = Field72$inboundSchema;
  /** @deprecated use `Field72$outboundSchema` instead. */
  export const outboundSchema = Field72$outboundSchema;
}

/** @internal */
export const Field71$inboundSchema: z.ZodNativeEnum<typeof Field71> = z
  .nativeEnum(Field71);

/** @internal */
export const Field71$outboundSchema: z.ZodNativeEnum<typeof Field71> =
  Field71$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field71$ {
  /** @deprecated use `Field71$inboundSchema` instead. */
  export const inboundSchema = Field71$inboundSchema;
  /** @deprecated use `Field71$outboundSchema` instead. */
  export const outboundSchema = Field71$outboundSchema;
}

/** @internal */
export const ExportQueryField70$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField70
> = z.nativeEnum(ExportQueryField70);

/** @internal */
export const ExportQueryField70$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField70
> = ExportQueryField70$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField70$ {
  /** @deprecated use `ExportQueryField70$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField70$inboundSchema;
  /** @deprecated use `ExportQueryField70$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField70$outboundSchema;
}

/** @internal */
export const ExportQueryField69$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField69
> = z.nativeEnum(ExportQueryField69);

/** @internal */
export const ExportQueryField69$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField69
> = ExportQueryField69$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField69$ {
  /** @deprecated use `ExportQueryField69$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField69$inboundSchema;
  /** @deprecated use `ExportQueryField69$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField69$outboundSchema;
}

/** @internal */
export const ExportQueryField68$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField68
> = z.nativeEnum(ExportQueryField68);

/** @internal */
export const ExportQueryField68$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField68
> = ExportQueryField68$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField68$ {
  /** @deprecated use `ExportQueryField68$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField68$inboundSchema;
  /** @deprecated use `ExportQueryField68$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField68$outboundSchema;
}

/** @internal */
export const ExportQueryField67$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField67
> = z.nativeEnum(ExportQueryField67);

/** @internal */
export const ExportQueryField67$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField67
> = ExportQueryField67$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField67$ {
  /** @deprecated use `ExportQueryField67$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField67$inboundSchema;
  /** @deprecated use `ExportQueryField67$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField67$outboundSchema;
}

/** @internal */
export const ExportQueryField66$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField66
> = z.nativeEnum(ExportQueryField66);

/** @internal */
export const ExportQueryField66$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField66
> = ExportQueryField66$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField66$ {
  /** @deprecated use `ExportQueryField66$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField66$inboundSchema;
  /** @deprecated use `ExportQueryField66$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField66$outboundSchema;
}

/** @internal */
export const ExportQueryField65$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField65
> = z.nativeEnum(ExportQueryField65);

/** @internal */
export const ExportQueryField65$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField65
> = ExportQueryField65$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField65$ {
  /** @deprecated use `ExportQueryField65$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField65$inboundSchema;
  /** @deprecated use `ExportQueryField65$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField65$outboundSchema;
}

/** @internal */
export const ExportQueryField64$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField64
> = z.nativeEnum(ExportQueryField64);

/** @internal */
export const ExportQueryField64$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField64
> = ExportQueryField64$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField64$ {
  /** @deprecated use `ExportQueryField64$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField64$inboundSchema;
  /** @deprecated use `ExportQueryField64$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField64$outboundSchema;
}

/** @internal */
export const ExportQueryField63$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField63
> = z.nativeEnum(ExportQueryField63);

/** @internal */
export const ExportQueryField63$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField63
> = ExportQueryField63$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField63$ {
  /** @deprecated use `ExportQueryField63$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField63$inboundSchema;
  /** @deprecated use `ExportQueryField63$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField63$outboundSchema;
}

/** @internal */
export const ExportQueryField62$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField62
> = z.nativeEnum(ExportQueryField62);

/** @internal */
export const ExportQueryField62$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField62
> = ExportQueryField62$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField62$ {
  /** @deprecated use `ExportQueryField62$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField62$inboundSchema;
  /** @deprecated use `ExportQueryField62$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField62$outboundSchema;
}

/** @internal */
export const ExportQueryField61$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField61
> = z.nativeEnum(ExportQueryField61);

/** @internal */
export const ExportQueryField61$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField61
> = ExportQueryField61$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField61$ {
  /** @deprecated use `ExportQueryField61$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField61$inboundSchema;
  /** @deprecated use `ExportQueryField61$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField61$outboundSchema;
}

/** @internal */
export const ExportQueryField60$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField60
> = z.nativeEnum(ExportQueryField60);

/** @internal */
export const ExportQueryField60$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField60
> = ExportQueryField60$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField60$ {
  /** @deprecated use `ExportQueryField60$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField60$inboundSchema;
  /** @deprecated use `ExportQueryField60$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField60$outboundSchema;
}

/** @internal */
export const ExportQueryField59$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField59
> = z.nativeEnum(ExportQueryField59);

/** @internal */
export const ExportQueryField59$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField59
> = ExportQueryField59$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField59$ {
  /** @deprecated use `ExportQueryField59$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField59$inboundSchema;
  /** @deprecated use `ExportQueryField59$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField59$outboundSchema;
}

/** @internal */
export const ExportQueryField58$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField58
> = z.nativeEnum(ExportQueryField58);

/** @internal */
export const ExportQueryField58$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField58
> = ExportQueryField58$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField58$ {
  /** @deprecated use `ExportQueryField58$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField58$inboundSchema;
  /** @deprecated use `ExportQueryField58$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField58$outboundSchema;
}

/** @internal */
export const ExportQueryField57$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField57
> = z.nativeEnum(ExportQueryField57);

/** @internal */
export const ExportQueryField57$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField57
> = ExportQueryField57$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField57$ {
  /** @deprecated use `ExportQueryField57$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField57$inboundSchema;
  /** @deprecated use `ExportQueryField57$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField57$outboundSchema;
}

/** @internal */
export const ExportQueryField56$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField56
> = z.nativeEnum(ExportQueryField56);

/** @internal */
export const ExportQueryField56$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField56
> = ExportQueryField56$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField56$ {
  /** @deprecated use `ExportQueryField56$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField56$inboundSchema;
  /** @deprecated use `ExportQueryField56$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField56$outboundSchema;
}

/** @internal */
export const ExportQueryField55$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField55
> = z.nativeEnum(ExportQueryField55);

/** @internal */
export const ExportQueryField55$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField55
> = ExportQueryField55$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField55$ {
  /** @deprecated use `ExportQueryField55$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField55$inboundSchema;
  /** @deprecated use `ExportQueryField55$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField55$outboundSchema;
}

/** @internal */
export const ExportQueryField54$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField54
> = z.nativeEnum(ExportQueryField54);

/** @internal */
export const ExportQueryField54$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField54
> = ExportQueryField54$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField54$ {
  /** @deprecated use `ExportQueryField54$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField54$inboundSchema;
  /** @deprecated use `ExportQueryField54$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField54$outboundSchema;
}

/** @internal */
export const ExportQueryField53$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField53
> = z.nativeEnum(ExportQueryField53);

/** @internal */
export const ExportQueryField53$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField53
> = ExportQueryField53$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField53$ {
  /** @deprecated use `ExportQueryField53$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField53$inboundSchema;
  /** @deprecated use `ExportQueryField53$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField53$outboundSchema;
}

/** @internal */
export const ExportQueryField52$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField52
> = z.nativeEnum(ExportQueryField52);

/** @internal */
export const ExportQueryField52$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField52
> = ExportQueryField52$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField52$ {
  /** @deprecated use `ExportQueryField52$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField52$inboundSchema;
  /** @deprecated use `ExportQueryField52$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField52$outboundSchema;
}

/** @internal */
export const ExportQueryField51$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField51
> = z.nativeEnum(ExportQueryField51);

/** @internal */
export const ExportQueryField51$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField51
> = ExportQueryField51$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField51$ {
  /** @deprecated use `ExportQueryField51$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField51$inboundSchema;
  /** @deprecated use `ExportQueryField51$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField51$outboundSchema;
}

/** @internal */
export const ExportQueryField50$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField50
> = z.nativeEnum(ExportQueryField50);

/** @internal */
export const ExportQueryField50$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField50
> = ExportQueryField50$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField50$ {
  /** @deprecated use `ExportQueryField50$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField50$inboundSchema;
  /** @deprecated use `ExportQueryField50$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField50$outboundSchema;
}

/** @internal */
export const ExportQueryField49$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField49
> = z.nativeEnum(ExportQueryField49);

/** @internal */
export const ExportQueryField49$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField49
> = ExportQueryField49$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField49$ {
  /** @deprecated use `ExportQueryField49$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField49$inboundSchema;
  /** @deprecated use `ExportQueryField49$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField49$outboundSchema;
}

/** @internal */
export const ExportQueryField48$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField48
> = z.nativeEnum(ExportQueryField48);

/** @internal */
export const ExportQueryField48$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField48
> = ExportQueryField48$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField48$ {
  /** @deprecated use `ExportQueryField48$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField48$inboundSchema;
  /** @deprecated use `ExportQueryField48$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField48$outboundSchema;
}

/** @internal */
export const ExportQueryField47$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField47
> = z.nativeEnum(ExportQueryField47);

/** @internal */
export const ExportQueryField47$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField47
> = ExportQueryField47$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField47$ {
  /** @deprecated use `ExportQueryField47$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField47$inboundSchema;
  /** @deprecated use `ExportQueryField47$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField47$outboundSchema;
}

/** @internal */
export const ExportQueryField46$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField46
> = z.nativeEnum(ExportQueryField46);

/** @internal */
export const ExportQueryField46$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField46
> = ExportQueryField46$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField46$ {
  /** @deprecated use `ExportQueryField46$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField46$inboundSchema;
  /** @deprecated use `ExportQueryField46$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField46$outboundSchema;
}

/** @internal */
export const ExportQueryField45$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField45
> = z.nativeEnum(ExportQueryField45);

/** @internal */
export const ExportQueryField45$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField45
> = ExportQueryField45$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField45$ {
  /** @deprecated use `ExportQueryField45$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField45$inboundSchema;
  /** @deprecated use `ExportQueryField45$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField45$outboundSchema;
}

/** @internal */
export const ExportQueryField44$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField44
> = z.nativeEnum(ExportQueryField44);

/** @internal */
export const ExportQueryField44$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField44
> = ExportQueryField44$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField44$ {
  /** @deprecated use `ExportQueryField44$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField44$inboundSchema;
  /** @deprecated use `ExportQueryField44$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField44$outboundSchema;
}

/** @internal */
export const ExportQueryField43$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField43
> = z.nativeEnum(ExportQueryField43);

/** @internal */
export const ExportQueryField43$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField43
> = ExportQueryField43$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField43$ {
  /** @deprecated use `ExportQueryField43$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField43$inboundSchema;
  /** @deprecated use `ExportQueryField43$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField43$outboundSchema;
}

/** @internal */
export const ExportQueryField42$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField42
> = z.nativeEnum(ExportQueryField42);

/** @internal */
export const ExportQueryField42$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField42
> = ExportQueryField42$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField42$ {
  /** @deprecated use `ExportQueryField42$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField42$inboundSchema;
  /** @deprecated use `ExportQueryField42$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField42$outboundSchema;
}

/** @internal */
export const ExportQueryField41$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField41
> = z.nativeEnum(ExportQueryField41);

/** @internal */
export const ExportQueryField41$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField41
> = ExportQueryField41$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField41$ {
  /** @deprecated use `ExportQueryField41$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField41$inboundSchema;
  /** @deprecated use `ExportQueryField41$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField41$outboundSchema;
}

/** @internal */
export const ExportQueryField40$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField40
> = z.nativeEnum(ExportQueryField40);

/** @internal */
export const ExportQueryField40$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField40
> = ExportQueryField40$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField40$ {
  /** @deprecated use `ExportQueryField40$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField40$inboundSchema;
  /** @deprecated use `ExportQueryField40$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField40$outboundSchema;
}

/** @internal */
export const ExportQueryField39$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField39
> = z.nativeEnum(ExportQueryField39);

/** @internal */
export const ExportQueryField39$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField39
> = ExportQueryField39$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField39$ {
  /** @deprecated use `ExportQueryField39$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField39$inboundSchema;
  /** @deprecated use `ExportQueryField39$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField39$outboundSchema;
}

/** @internal */
export const ExportQueryField38$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField38
> = z.nativeEnum(ExportQueryField38);

/** @internal */
export const ExportQueryField38$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField38
> = ExportQueryField38$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField38$ {
  /** @deprecated use `ExportQueryField38$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField38$inboundSchema;
  /** @deprecated use `ExportQueryField38$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField38$outboundSchema;
}

/** @internal */
export const ExportQueryField37$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField37
> = z.nativeEnum(ExportQueryField37);

/** @internal */
export const ExportQueryField37$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField37
> = ExportQueryField37$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField37$ {
  /** @deprecated use `ExportQueryField37$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField37$inboundSchema;
  /** @deprecated use `ExportQueryField37$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField37$outboundSchema;
}

/** @internal */
export const ExportQueryField36$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField36
> = z.nativeEnum(ExportQueryField36);

/** @internal */
export const ExportQueryField36$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField36
> = ExportQueryField36$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField36$ {
  /** @deprecated use `ExportQueryField36$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField36$inboundSchema;
  /** @deprecated use `ExportQueryField36$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField36$outboundSchema;
}

/** @internal */
export const ExportQueryField35$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField35
> = z.nativeEnum(ExportQueryField35);

/** @internal */
export const ExportQueryField35$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField35
> = ExportQueryField35$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField35$ {
  /** @deprecated use `ExportQueryField35$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField35$inboundSchema;
  /** @deprecated use `ExportQueryField35$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField35$outboundSchema;
}

/** @internal */
export const ExportQueryField34$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField34
> = z.nativeEnum(ExportQueryField34);

/** @internal */
export const ExportQueryField34$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField34
> = ExportQueryField34$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField34$ {
  /** @deprecated use `ExportQueryField34$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField34$inboundSchema;
  /** @deprecated use `ExportQueryField34$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField34$outboundSchema;
}

/** @internal */
export const ExportQueryField33$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField33
> = z.nativeEnum(ExportQueryField33);

/** @internal */
export const ExportQueryField33$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField33
> = ExportQueryField33$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField33$ {
  /** @deprecated use `ExportQueryField33$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField33$inboundSchema;
  /** @deprecated use `ExportQueryField33$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField33$outboundSchema;
}

/** @internal */
export const ExportQueryField32$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField32
> = z.nativeEnum(ExportQueryField32);

/** @internal */
export const ExportQueryField32$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryField32
> = ExportQueryField32$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryField32$ {
  /** @deprecated use `ExportQueryField32$inboundSchema` instead. */
  export const inboundSchema = ExportQueryField32$inboundSchema;
  /** @deprecated use `ExportQueryField32$outboundSchema` instead. */
  export const outboundSchema = ExportQueryField32$outboundSchema;
}

/** @internal */
export const ExportQueryFieldQuery31$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery31
> = z.nativeEnum(ExportQueryFieldQuery31);

/** @internal */
export const ExportQueryFieldQuery31$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery31
> = ExportQueryFieldQuery31$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryFieldQuery31$ {
  /** @deprecated use `ExportQueryFieldQuery31$inboundSchema` instead. */
  export const inboundSchema = ExportQueryFieldQuery31$inboundSchema;
  /** @deprecated use `ExportQueryFieldQuery31$outboundSchema` instead. */
  export const outboundSchema = ExportQueryFieldQuery31$outboundSchema;
}

/** @internal */
export const ExportQueryFieldQuery30$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery30
> = z.nativeEnum(ExportQueryFieldQuery30);

/** @internal */
export const ExportQueryFieldQuery30$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery30
> = ExportQueryFieldQuery30$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryFieldQuery30$ {
  /** @deprecated use `ExportQueryFieldQuery30$inboundSchema` instead. */
  export const inboundSchema = ExportQueryFieldQuery30$inboundSchema;
  /** @deprecated use `ExportQueryFieldQuery30$outboundSchema` instead. */
  export const outboundSchema = ExportQueryFieldQuery30$outboundSchema;
}

/** @internal */
export const ExportQueryFieldQuery29$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery29
> = z.nativeEnum(ExportQueryFieldQuery29);

/** @internal */
export const ExportQueryFieldQuery29$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery29
> = ExportQueryFieldQuery29$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryFieldQuery29$ {
  /** @deprecated use `ExportQueryFieldQuery29$inboundSchema` instead. */
  export const inboundSchema = ExportQueryFieldQuery29$inboundSchema;
  /** @deprecated use `ExportQueryFieldQuery29$outboundSchema` instead. */
  export const outboundSchema = ExportQueryFieldQuery29$outboundSchema;
}

/** @internal */
export const ExportQueryFieldQuery28$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery28
> = z.nativeEnum(ExportQueryFieldQuery28);

/** @internal */
export const ExportQueryFieldQuery28$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery28
> = ExportQueryFieldQuery28$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryFieldQuery28$ {
  /** @deprecated use `ExportQueryFieldQuery28$inboundSchema` instead. */
  export const inboundSchema = ExportQueryFieldQuery28$inboundSchema;
  /** @deprecated use `ExportQueryFieldQuery28$outboundSchema` instead. */
  export const outboundSchema = ExportQueryFieldQuery28$outboundSchema;
}

/** @internal */
export const ExportQueryFieldQuery27$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery27
> = z.nativeEnum(ExportQueryFieldQuery27);

/** @internal */
export const ExportQueryFieldQuery27$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery27
> = ExportQueryFieldQuery27$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryFieldQuery27$ {
  /** @deprecated use `ExportQueryFieldQuery27$inboundSchema` instead. */
  export const inboundSchema = ExportQueryFieldQuery27$inboundSchema;
  /** @deprecated use `ExportQueryFieldQuery27$outboundSchema` instead. */
  export const outboundSchema = ExportQueryFieldQuery27$outboundSchema;
}

/** @internal */
export const ExportQueryFieldQuery26$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery26
> = z.nativeEnum(ExportQueryFieldQuery26);

/** @internal */
export const ExportQueryFieldQuery26$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery26
> = ExportQueryFieldQuery26$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryFieldQuery26$ {
  /** @deprecated use `ExportQueryFieldQuery26$inboundSchema` instead. */
  export const inboundSchema = ExportQueryFieldQuery26$inboundSchema;
  /** @deprecated use `ExportQueryFieldQuery26$outboundSchema` instead. */
  export const outboundSchema = ExportQueryFieldQuery26$outboundSchema;
}

/** @internal */
export const ExportQueryFieldQuery25$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery25
> = z.nativeEnum(ExportQueryFieldQuery25);

/** @internal */
export const ExportQueryFieldQuery25$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery25
> = ExportQueryFieldQuery25$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryFieldQuery25$ {
  /** @deprecated use `ExportQueryFieldQuery25$inboundSchema` instead. */
  export const inboundSchema = ExportQueryFieldQuery25$inboundSchema;
  /** @deprecated use `ExportQueryFieldQuery25$outboundSchema` instead. */
  export const outboundSchema = ExportQueryFieldQuery25$outboundSchema;
}

/** @internal */
export const ExportQueryFieldQuery24$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery24
> = z.nativeEnum(ExportQueryFieldQuery24);

/** @internal */
export const ExportQueryFieldQuery24$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery24
> = ExportQueryFieldQuery24$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryFieldQuery24$ {
  /** @deprecated use `ExportQueryFieldQuery24$inboundSchema` instead. */
  export const inboundSchema = ExportQueryFieldQuery24$inboundSchema;
  /** @deprecated use `ExportQueryFieldQuery24$outboundSchema` instead. */
  export const outboundSchema = ExportQueryFieldQuery24$outboundSchema;
}

/** @internal */
export const ExportQueryFieldQuery23$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery23
> = z.nativeEnum(ExportQueryFieldQuery23);

/** @internal */
export const ExportQueryFieldQuery23$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery23
> = ExportQueryFieldQuery23$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryFieldQuery23$ {
  /** @deprecated use `ExportQueryFieldQuery23$inboundSchema` instead. */
  export const inboundSchema = ExportQueryFieldQuery23$inboundSchema;
  /** @deprecated use `ExportQueryFieldQuery23$outboundSchema` instead. */
  export const outboundSchema = ExportQueryFieldQuery23$outboundSchema;
}

/** @internal */
export const ExportQueryFieldQuery22$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery22
> = z.nativeEnum(ExportQueryFieldQuery22);

/** @internal */
export const ExportQueryFieldQuery22$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery22
> = ExportQueryFieldQuery22$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryFieldQuery22$ {
  /** @deprecated use `ExportQueryFieldQuery22$inboundSchema` instead. */
  export const inboundSchema = ExportQueryFieldQuery22$inboundSchema;
  /** @deprecated use `ExportQueryFieldQuery22$outboundSchema` instead. */
  export const outboundSchema = ExportQueryFieldQuery22$outboundSchema;
}

/** @internal */
export const ExportQueryFieldQuery21$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery21
> = z.nativeEnum(ExportQueryFieldQuery21);

/** @internal */
export const ExportQueryFieldQuery21$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery21
> = ExportQueryFieldQuery21$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryFieldQuery21$ {
  /** @deprecated use `ExportQueryFieldQuery21$inboundSchema` instead. */
  export const inboundSchema = ExportQueryFieldQuery21$inboundSchema;
  /** @deprecated use `ExportQueryFieldQuery21$outboundSchema` instead. */
  export const outboundSchema = ExportQueryFieldQuery21$outboundSchema;
}

/** @internal */
export const ExportQueryFieldQuery20$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery20
> = z.nativeEnum(ExportQueryFieldQuery20);

/** @internal */
export const ExportQueryFieldQuery20$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery20
> = ExportQueryFieldQuery20$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryFieldQuery20$ {
  /** @deprecated use `ExportQueryFieldQuery20$inboundSchema` instead. */
  export const inboundSchema = ExportQueryFieldQuery20$inboundSchema;
  /** @deprecated use `ExportQueryFieldQuery20$outboundSchema` instead. */
  export const outboundSchema = ExportQueryFieldQuery20$outboundSchema;
}

/** @internal */
export const ExportQueryFieldQuery19$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery19
> = z.nativeEnum(ExportQueryFieldQuery19);

/** @internal */
export const ExportQueryFieldQuery19$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery19
> = ExportQueryFieldQuery19$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryFieldQuery19$ {
  /** @deprecated use `ExportQueryFieldQuery19$inboundSchema` instead. */
  export const inboundSchema = ExportQueryFieldQuery19$inboundSchema;
  /** @deprecated use `ExportQueryFieldQuery19$outboundSchema` instead. */
  export const outboundSchema = ExportQueryFieldQuery19$outboundSchema;
}

/** @internal */
export const ExportQueryFieldQuery18$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery18
> = z.nativeEnum(ExportQueryFieldQuery18);

/** @internal */
export const ExportQueryFieldQuery18$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery18
> = ExportQueryFieldQuery18$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryFieldQuery18$ {
  /** @deprecated use `ExportQueryFieldQuery18$inboundSchema` instead. */
  export const inboundSchema = ExportQueryFieldQuery18$inboundSchema;
  /** @deprecated use `ExportQueryFieldQuery18$outboundSchema` instead. */
  export const outboundSchema = ExportQueryFieldQuery18$outboundSchema;
}

/** @internal */
export const ExportQueryFieldQuery17$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery17
> = z.nativeEnum(ExportQueryFieldQuery17);

/** @internal */
export const ExportQueryFieldQuery17$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery17
> = ExportQueryFieldQuery17$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryFieldQuery17$ {
  /** @deprecated use `ExportQueryFieldQuery17$inboundSchema` instead. */
  export const inboundSchema = ExportQueryFieldQuery17$inboundSchema;
  /** @deprecated use `ExportQueryFieldQuery17$outboundSchema` instead. */
  export const outboundSchema = ExportQueryFieldQuery17$outboundSchema;
}

/** @internal */
export const ExportQueryFieldQuery16$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery16
> = z.nativeEnum(ExportQueryFieldQuery16);

/** @internal */
export const ExportQueryFieldQuery16$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery16
> = ExportQueryFieldQuery16$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryFieldQuery16$ {
  /** @deprecated use `ExportQueryFieldQuery16$inboundSchema` instead. */
  export const inboundSchema = ExportQueryFieldQuery16$inboundSchema;
  /** @deprecated use `ExportQueryFieldQuery16$outboundSchema` instead. */
  export const outboundSchema = ExportQueryFieldQuery16$outboundSchema;
}

/** @internal */
export const ExportQueryFieldQuery15$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery15
> = z.nativeEnum(ExportQueryFieldQuery15);

/** @internal */
export const ExportQueryFieldQuery15$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery15
> = ExportQueryFieldQuery15$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryFieldQuery15$ {
  /** @deprecated use `ExportQueryFieldQuery15$inboundSchema` instead. */
  export const inboundSchema = ExportQueryFieldQuery15$inboundSchema;
  /** @deprecated use `ExportQueryFieldQuery15$outboundSchema` instead. */
  export const outboundSchema = ExportQueryFieldQuery15$outboundSchema;
}

/** @internal */
export const ExportQueryFieldQuery14$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery14
> = z.nativeEnum(ExportQueryFieldQuery14);

/** @internal */
export const ExportQueryFieldQuery14$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery14
> = ExportQueryFieldQuery14$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryFieldQuery14$ {
  /** @deprecated use `ExportQueryFieldQuery14$inboundSchema` instead. */
  export const inboundSchema = ExportQueryFieldQuery14$inboundSchema;
  /** @deprecated use `ExportQueryFieldQuery14$outboundSchema` instead. */
  export const outboundSchema = ExportQueryFieldQuery14$outboundSchema;
}

/** @internal */
export const ExportQueryFieldQuery13$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery13
> = z.nativeEnum(ExportQueryFieldQuery13);

/** @internal */
export const ExportQueryFieldQuery13$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery13
> = ExportQueryFieldQuery13$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryFieldQuery13$ {
  /** @deprecated use `ExportQueryFieldQuery13$inboundSchema` instead. */
  export const inboundSchema = ExportQueryFieldQuery13$inboundSchema;
  /** @deprecated use `ExportQueryFieldQuery13$outboundSchema` instead. */
  export const outboundSchema = ExportQueryFieldQuery13$outboundSchema;
}

/** @internal */
export const ExportQueryFieldQuery12$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery12
> = z.nativeEnum(ExportQueryFieldQuery12);

/** @internal */
export const ExportQueryFieldQuery12$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery12
> = ExportQueryFieldQuery12$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryFieldQuery12$ {
  /** @deprecated use `ExportQueryFieldQuery12$inboundSchema` instead. */
  export const inboundSchema = ExportQueryFieldQuery12$inboundSchema;
  /** @deprecated use `ExportQueryFieldQuery12$outboundSchema` instead. */
  export const outboundSchema = ExportQueryFieldQuery12$outboundSchema;
}

/** @internal */
export const ExportQueryFieldQuery11$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery11
> = z.nativeEnum(ExportQueryFieldQuery11);

/** @internal */
export const ExportQueryFieldQuery11$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery11
> = ExportQueryFieldQuery11$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryFieldQuery11$ {
  /** @deprecated use `ExportQueryFieldQuery11$inboundSchema` instead. */
  export const inboundSchema = ExportQueryFieldQuery11$inboundSchema;
  /** @deprecated use `ExportQueryFieldQuery11$outboundSchema` instead. */
  export const outboundSchema = ExportQueryFieldQuery11$outboundSchema;
}

/** @internal */
export const ExportQueryFieldQuery10$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery10
> = z.nativeEnum(ExportQueryFieldQuery10);

/** @internal */
export const ExportQueryFieldQuery10$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery10
> = ExportQueryFieldQuery10$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryFieldQuery10$ {
  /** @deprecated use `ExportQueryFieldQuery10$inboundSchema` instead. */
  export const inboundSchema = ExportQueryFieldQuery10$inboundSchema;
  /** @deprecated use `ExportQueryFieldQuery10$outboundSchema` instead. */
  export const outboundSchema = ExportQueryFieldQuery10$outboundSchema;
}

/** @internal */
export const ExportQueryFieldQuery9$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery9
> = z.nativeEnum(ExportQueryFieldQuery9);

/** @internal */
export const ExportQueryFieldQuery9$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery9
> = ExportQueryFieldQuery9$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryFieldQuery9$ {
  /** @deprecated use `ExportQueryFieldQuery9$inboundSchema` instead. */
  export const inboundSchema = ExportQueryFieldQuery9$inboundSchema;
  /** @deprecated use `ExportQueryFieldQuery9$outboundSchema` instead. */
  export const outboundSchema = ExportQueryFieldQuery9$outboundSchema;
}

/** @internal */
export const ExportQueryFieldQuery8$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery8
> = z.nativeEnum(ExportQueryFieldQuery8);

/** @internal */
export const ExportQueryFieldQuery8$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery8
> = ExportQueryFieldQuery8$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryFieldQuery8$ {
  /** @deprecated use `ExportQueryFieldQuery8$inboundSchema` instead. */
  export const inboundSchema = ExportQueryFieldQuery8$inboundSchema;
  /** @deprecated use `ExportQueryFieldQuery8$outboundSchema` instead. */
  export const outboundSchema = ExportQueryFieldQuery8$outboundSchema;
}

/** @internal */
export const ExportQueryFieldQuery7$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery7
> = z.nativeEnum(ExportQueryFieldQuery7);

/** @internal */
export const ExportQueryFieldQuery7$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery7
> = ExportQueryFieldQuery7$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryFieldQuery7$ {
  /** @deprecated use `ExportQueryFieldQuery7$inboundSchema` instead. */
  export const inboundSchema = ExportQueryFieldQuery7$inboundSchema;
  /** @deprecated use `ExportQueryFieldQuery7$outboundSchema` instead. */
  export const outboundSchema = ExportQueryFieldQuery7$outboundSchema;
}

/** @internal */
export const ExportQueryFieldQuery6$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery6
> = z.nativeEnum(ExportQueryFieldQuery6);

/** @internal */
export const ExportQueryFieldQuery6$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery6
> = ExportQueryFieldQuery6$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryFieldQuery6$ {
  /** @deprecated use `ExportQueryFieldQuery6$inboundSchema` instead. */
  export const inboundSchema = ExportQueryFieldQuery6$inboundSchema;
  /** @deprecated use `ExportQueryFieldQuery6$outboundSchema` instead. */
  export const outboundSchema = ExportQueryFieldQuery6$outboundSchema;
}

/** @internal */
export const ExportQueryFieldQuery5$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery5
> = z.nativeEnum(ExportQueryFieldQuery5);

/** @internal */
export const ExportQueryFieldQuery5$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery5
> = ExportQueryFieldQuery5$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryFieldQuery5$ {
  /** @deprecated use `ExportQueryFieldQuery5$inboundSchema` instead. */
  export const inboundSchema = ExportQueryFieldQuery5$inboundSchema;
  /** @deprecated use `ExportQueryFieldQuery5$outboundSchema` instead. */
  export const outboundSchema = ExportQueryFieldQuery5$outboundSchema;
}

/** @internal */
export const ExportQueryFieldQuery4$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery4
> = z.nativeEnum(ExportQueryFieldQuery4);

/** @internal */
export const ExportQueryFieldQuery4$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery4
> = ExportQueryFieldQuery4$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryFieldQuery4$ {
  /** @deprecated use `ExportQueryFieldQuery4$inboundSchema` instead. */
  export const inboundSchema = ExportQueryFieldQuery4$inboundSchema;
  /** @deprecated use `ExportQueryFieldQuery4$outboundSchema` instead. */
  export const outboundSchema = ExportQueryFieldQuery4$outboundSchema;
}

/** @internal */
export const ExportQueryFieldQuery3$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery3
> = z.nativeEnum(ExportQueryFieldQuery3);

/** @internal */
export const ExportQueryFieldQuery3$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery3
> = ExportQueryFieldQuery3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryFieldQuery3$ {
  /** @deprecated use `ExportQueryFieldQuery3$inboundSchema` instead. */
  export const inboundSchema = ExportQueryFieldQuery3$inboundSchema;
  /** @deprecated use `ExportQueryFieldQuery3$outboundSchema` instead. */
  export const outboundSchema = ExportQueryFieldQuery3$outboundSchema;
}

/** @internal */
export const ExportQueryFieldQuery2$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery2
> = z.nativeEnum(ExportQueryFieldQuery2);

/** @internal */
export const ExportQueryFieldQuery2$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery2
> = ExportQueryFieldQuery2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryFieldQuery2$ {
  /** @deprecated use `ExportQueryFieldQuery2$inboundSchema` instead. */
  export const inboundSchema = ExportQueryFieldQuery2$inboundSchema;
  /** @deprecated use `ExportQueryFieldQuery2$outboundSchema` instead. */
  export const outboundSchema = ExportQueryFieldQuery2$outboundSchema;
}

/** @internal */
export const ExportQueryFieldQuery1$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery1
> = z.nativeEnum(ExportQueryFieldQuery1);

/** @internal */
export const ExportQueryFieldQuery1$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryFieldQuery1
> = ExportQueryFieldQuery1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryFieldQuery1$ {
  /** @deprecated use `ExportQueryFieldQuery1$inboundSchema` instead. */
  export const inboundSchema = ExportQueryFieldQuery1$inboundSchema;
  /** @deprecated use `ExportQueryFieldQuery1$outboundSchema` instead. */
  export const outboundSchema = ExportQueryFieldQuery1$outboundSchema;
}

/** @internal */
export const ExportQueryQueryField$inboundSchema: z.ZodType<
  ExportQueryQueryField,
  z.ZodTypeDef,
  unknown
> = z.union([
  ExportQueryFieldQuery1$inboundSchema,
  ExportQueryFieldQuery2$inboundSchema,
  ExportQueryFieldQuery3$inboundSchema,
  ExportQueryFieldQuery4$inboundSchema,
  ExportQueryFieldQuery5$inboundSchema,
  ExportQueryFieldQuery6$inboundSchema,
  ExportQueryFieldQuery7$inboundSchema,
  ExportQueryFieldQuery8$inboundSchema,
  ExportQueryFieldQuery9$inboundSchema,
  ExportQueryFieldQuery10$inboundSchema,
  ExportQueryFieldQuery11$inboundSchema,
  ExportQueryFieldQuery12$inboundSchema,
  ExportQueryFieldQuery13$inboundSchema,
  ExportQueryFieldQuery14$inboundSchema,
  ExportQueryFieldQuery15$inboundSchema,
  ExportQueryFieldQuery16$inboundSchema,
  ExportQueryFieldQuery17$inboundSchema,
  ExportQueryFieldQuery18$inboundSchema,
  ExportQueryFieldQuery19$inboundSchema,
  ExportQueryFieldQuery20$inboundSchema,
  ExportQueryFieldQuery21$inboundSchema,
  ExportQueryFieldQuery22$inboundSchema,
  ExportQueryFieldQuery23$inboundSchema,
  ExportQueryFieldQuery24$inboundSchema,
  ExportQueryFieldQuery25$inboundSchema,
  ExportQueryFieldQuery26$inboundSchema,
  ExportQueryFieldQuery27$inboundSchema,
  ExportQueryFieldQuery28$inboundSchema,
  ExportQueryFieldQuery29$inboundSchema,
  ExportQueryFieldQuery30$inboundSchema,
  ExportQueryFieldQuery31$inboundSchema,
  ExportQueryField32$inboundSchema,
  ExportQueryField33$inboundSchema,
  ExportQueryField34$inboundSchema,
  ExportQueryField35$inboundSchema,
  ExportQueryField36$inboundSchema,
  ExportQueryField37$inboundSchema,
  ExportQueryField38$inboundSchema,
  ExportQueryField39$inboundSchema,
  ExportQueryField40$inboundSchema,
  ExportQueryField41$inboundSchema,
  ExportQueryField42$inboundSchema,
  ExportQueryField43$inboundSchema,
  ExportQueryField44$inboundSchema,
  ExportQueryField45$inboundSchema,
  ExportQueryField46$inboundSchema,
  ExportQueryField47$inboundSchema,
  ExportQueryField48$inboundSchema,
  ExportQueryField49$inboundSchema,
  ExportQueryField50$inboundSchema,
  ExportQueryField51$inboundSchema,
  ExportQueryField52$inboundSchema,
  ExportQueryField53$inboundSchema,
  ExportQueryField54$inboundSchema,
  ExportQueryField55$inboundSchema,
  ExportQueryField56$inboundSchema,
  ExportQueryField57$inboundSchema,
  ExportQueryField58$inboundSchema,
  ExportQueryField59$inboundSchema,
  ExportQueryField60$inboundSchema,
  ExportQueryField61$inboundSchema,
  ExportQueryField62$inboundSchema,
  ExportQueryField63$inboundSchema,
  ExportQueryField64$inboundSchema,
  ExportQueryField65$inboundSchema,
  ExportQueryField66$inboundSchema,
  ExportQueryField67$inboundSchema,
  ExportQueryField68$inboundSchema,
  ExportQueryField69$inboundSchema,
  ExportQueryField70$inboundSchema,
  Field71$inboundSchema,
  Field72$inboundSchema,
  Field73$inboundSchema,
  Field74$inboundSchema,
  Field75$inboundSchema,
  Field76$inboundSchema,
  Field77$inboundSchema,
  Field78$inboundSchema,
  Field79$inboundSchema,
  Field80$inboundSchema,
  Field81$inboundSchema,
  Field82$inboundSchema,
  Field83$inboundSchema,
  Field84$inboundSchema,
  Field85$inboundSchema,
  Field86$inboundSchema,
  Field87$inboundSchema,
  Field88$inboundSchema,
  Field89$inboundSchema,
  Field90$inboundSchema,
  Field91$inboundSchema,
  Field92$inboundSchema,
  Field93$inboundSchema,
  Field94$inboundSchema,
  Field95$inboundSchema,
  Field96$inboundSchema,
  Field97$inboundSchema,
  Field98$inboundSchema,
  Field99$inboundSchema,
  Field100$inboundSchema,
  Field101$inboundSchema,
  Field102$inboundSchema,
  Field103$inboundSchema,
  Field104$inboundSchema,
  Field105$inboundSchema,
  Field106$inboundSchema,
  Field107$inboundSchema,
  Field108$inboundSchema,
  Field109$inboundSchema,
  Field110$inboundSchema,
  Field111$inboundSchema,
  Field112$inboundSchema,
  Field113$inboundSchema,
  Field114$inboundSchema,
  Field115$inboundSchema,
  Field116$inboundSchema,
  Field117$inboundSchema,
  Field118$inboundSchema,
  Field119$inboundSchema,
  Field120$inboundSchema,
  Field121$inboundSchema,
  Field122$inboundSchema,
  Field123$inboundSchema,
  Field124$inboundSchema,
  Field125$inboundSchema,
  Field126$inboundSchema,
  Field127$inboundSchema,
  Field128$inboundSchema,
  Field129$inboundSchema,
  Field130$inboundSchema,
  Field131$inboundSchema,
  Field132$inboundSchema,
  Field133$inboundSchema,
  Field134$inboundSchema,
  Field135$inboundSchema,
  Field136$inboundSchema,
  Field137$inboundSchema,
  Field138$inboundSchema,
  Field139$inboundSchema,
  Field140$inboundSchema,
  Field141$inboundSchema,
  Field142$inboundSchema,
  Field143$inboundSchema,
  Field144$inboundSchema,
  Field145$inboundSchema,
  Field146$inboundSchema,
  Field147$inboundSchema,
  Field148$inboundSchema,
  Field149$inboundSchema,
  Field150$inboundSchema,
  Field151$inboundSchema,
  Field152$inboundSchema,
  Field153$inboundSchema,
  Field154$inboundSchema,
  Field155$inboundSchema,
  Field156$inboundSchema,
  Field157$inboundSchema,
  Field158$inboundSchema,
  Field159$inboundSchema,
  Field160$inboundSchema,
  Field161$inboundSchema,
  Field162$inboundSchema,
  Field163$inboundSchema,
  Field164$inboundSchema,
  Field165$inboundSchema,
  Field166$inboundSchema,
  Field167$inboundSchema,
  Field168$inboundSchema,
  Field169$inboundSchema,
  Field170$inboundSchema,
  Field171$inboundSchema,
  Field172$inboundSchema,
  Field173$inboundSchema,
  Field174$inboundSchema,
  Field175$inboundSchema,
  Field176$inboundSchema,
  Field177$inboundSchema,
  Field178$inboundSchema,
  Field179$inboundSchema,
  Field180$inboundSchema,
  Field181$inboundSchema,
  Field182$inboundSchema,
  Field183$inboundSchema,
  Field184$inboundSchema,
  Field185$inboundSchema,
  Field186$inboundSchema,
  Field187$inboundSchema,
  Field188$inboundSchema,
  Field189$inboundSchema,
  Field190$inboundSchema,
  Field191$inboundSchema,
  Field192$inboundSchema,
  Field193$inboundSchema,
  Field194$inboundSchema,
  Field195$inboundSchema,
  Field196$inboundSchema,
  Field197$inboundSchema,
  Field198$inboundSchema,
  Field199$inboundSchema,
  Field200$inboundSchema,
  Field201$inboundSchema,
  Field202$inboundSchema,
  Field203$inboundSchema,
  Field204$inboundSchema,
  Field205$inboundSchema,
  Field206$inboundSchema,
  Field207$inboundSchema,
  Field208$inboundSchema,
  Field209$inboundSchema,
  Field210$inboundSchema,
  Field211$inboundSchema,
  Field212$inboundSchema,
  Field213$inboundSchema,
  Field214$inboundSchema,
  Field215$inboundSchema,
  Field216$inboundSchema,
  Field217$inboundSchema,
  Field218$inboundSchema,
  Field219$inboundSchema,
  Field220$inboundSchema,
  Field221$inboundSchema,
  Field222$inboundSchema,
  Field223$inboundSchema,
  Field224$inboundSchema,
  Field225$inboundSchema,
  Field226$inboundSchema,
  Field227$inboundSchema,
  Field228$inboundSchema,
  Field229$inboundSchema,
  Field230$inboundSchema,
  Field231$inboundSchema,
  Field232$inboundSchema,
  Field233$inboundSchema,
  Field234$inboundSchema,
  Field235$inboundSchema,
  Field236$inboundSchema,
  Field237$inboundSchema,
  Field238$inboundSchema,
  Field239$inboundSchema,
  Field240$inboundSchema,
  Field241$inboundSchema,
  Field242$inboundSchema,
  Field243$inboundSchema,
  Field244$inboundSchema,
  Field245$inboundSchema,
  Field246$inboundSchema,
  Field247$inboundSchema,
  Field248$inboundSchema,
  Field249$inboundSchema,
  Field250$inboundSchema,
  Field251$inboundSchema,
  Field252$inboundSchema,
  Field253$inboundSchema,
  Field254$inboundSchema,
  Field255$inboundSchema,
  Field256$inboundSchema,
  Field257$inboundSchema,
  Field258$inboundSchema,
  Field259$inboundSchema,
  Field260$inboundSchema,
  Field261$inboundSchema,
  Field262$inboundSchema,
  Field263$inboundSchema,
  Field264$inboundSchema,
  Field265$inboundSchema,
  Field266$inboundSchema,
  Field267$inboundSchema,
  Field268$inboundSchema,
  Field269$inboundSchema,
  Field270$inboundSchema,
  Field271$inboundSchema,
  Field272$inboundSchema,
  Field273$inboundSchema,
  Field274$inboundSchema,
  Field275$inboundSchema,
  Field276$inboundSchema,
  Field277$inboundSchema,
  Field278$inboundSchema,
  Field279$inboundSchema,
  Field280$inboundSchema,
  Field281$inboundSchema,
  Field282$inboundSchema,
  Field283$inboundSchema,
  Field284$inboundSchema,
  Field285$inboundSchema,
  Field286$inboundSchema,
  Field287$inboundSchema,
  Field288$inboundSchema,
  Field289$inboundSchema,
  Field290$inboundSchema,
  Field291$inboundSchema,
  Field292$inboundSchema,
  Field293$inboundSchema,
  Field294$inboundSchema,
  Field295$inboundSchema,
  Field296$inboundSchema,
  Field297$inboundSchema,
  Field298$inboundSchema,
  Field299$inboundSchema,
  Field300$inboundSchema,
  Field301$inboundSchema,
  Field302$inboundSchema,
  Field303$inboundSchema,
  Field304$inboundSchema,
  Field305$inboundSchema,
  Field306$inboundSchema,
  Field307$inboundSchema,
  Field308$inboundSchema,
  Field309$inboundSchema,
  Field310$inboundSchema,
]);

/** @internal */
export type ExportQueryQueryField$Outbound =
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string;

/** @internal */
export const ExportQueryQueryField$outboundSchema: z.ZodType<
  ExportQueryQueryField$Outbound,
  z.ZodTypeDef,
  ExportQueryQueryField
> = z.union([
  ExportQueryFieldQuery1$outboundSchema,
  ExportQueryFieldQuery2$outboundSchema,
  ExportQueryFieldQuery3$outboundSchema,
  ExportQueryFieldQuery4$outboundSchema,
  ExportQueryFieldQuery5$outboundSchema,
  ExportQueryFieldQuery6$outboundSchema,
  ExportQueryFieldQuery7$outboundSchema,
  ExportQueryFieldQuery8$outboundSchema,
  ExportQueryFieldQuery9$outboundSchema,
  ExportQueryFieldQuery10$outboundSchema,
  ExportQueryFieldQuery11$outboundSchema,
  ExportQueryFieldQuery12$outboundSchema,
  ExportQueryFieldQuery13$outboundSchema,
  ExportQueryFieldQuery14$outboundSchema,
  ExportQueryFieldQuery15$outboundSchema,
  ExportQueryFieldQuery16$outboundSchema,
  ExportQueryFieldQuery17$outboundSchema,
  ExportQueryFieldQuery18$outboundSchema,
  ExportQueryFieldQuery19$outboundSchema,
  ExportQueryFieldQuery20$outboundSchema,
  ExportQueryFieldQuery21$outboundSchema,
  ExportQueryFieldQuery22$outboundSchema,
  ExportQueryFieldQuery23$outboundSchema,
  ExportQueryFieldQuery24$outboundSchema,
  ExportQueryFieldQuery25$outboundSchema,
  ExportQueryFieldQuery26$outboundSchema,
  ExportQueryFieldQuery27$outboundSchema,
  ExportQueryFieldQuery28$outboundSchema,
  ExportQueryFieldQuery29$outboundSchema,
  ExportQueryFieldQuery30$outboundSchema,
  ExportQueryFieldQuery31$outboundSchema,
  ExportQueryField32$outboundSchema,
  ExportQueryField33$outboundSchema,
  ExportQueryField34$outboundSchema,
  ExportQueryField35$outboundSchema,
  ExportQueryField36$outboundSchema,
  ExportQueryField37$outboundSchema,
  ExportQueryField38$outboundSchema,
  ExportQueryField39$outboundSchema,
  ExportQueryField40$outboundSchema,
  ExportQueryField41$outboundSchema,
  ExportQueryField42$outboundSchema,
  ExportQueryField43$outboundSchema,
  ExportQueryField44$outboundSchema,
  ExportQueryField45$outboundSchema,
  ExportQueryField46$outboundSchema,
  ExportQueryField47$outboundSchema,
  ExportQueryField48$outboundSchema,
  ExportQueryField49$outboundSchema,
  ExportQueryField50$outboundSchema,
  ExportQueryField51$outboundSchema,
  ExportQueryField52$outboundSchema,
  ExportQueryField53$outboundSchema,
  ExportQueryField54$outboundSchema,
  ExportQueryField55$outboundSchema,
  ExportQueryField56$outboundSchema,
  ExportQueryField57$outboundSchema,
  ExportQueryField58$outboundSchema,
  ExportQueryField59$outboundSchema,
  ExportQueryField60$outboundSchema,
  ExportQueryField61$outboundSchema,
  ExportQueryField62$outboundSchema,
  ExportQueryField63$outboundSchema,
  ExportQueryField64$outboundSchema,
  ExportQueryField65$outboundSchema,
  ExportQueryField66$outboundSchema,
  ExportQueryField67$outboundSchema,
  ExportQueryField68$outboundSchema,
  ExportQueryField69$outboundSchema,
  ExportQueryField70$outboundSchema,
  Field71$outboundSchema,
  Field72$outboundSchema,
  Field73$outboundSchema,
  Field74$outboundSchema,
  Field75$outboundSchema,
  Field76$outboundSchema,
  Field77$outboundSchema,
  Field78$outboundSchema,
  Field79$outboundSchema,
  Field80$outboundSchema,
  Field81$outboundSchema,
  Field82$outboundSchema,
  Field83$outboundSchema,
  Field84$outboundSchema,
  Field85$outboundSchema,
  Field86$outboundSchema,
  Field87$outboundSchema,
  Field88$outboundSchema,
  Field89$outboundSchema,
  Field90$outboundSchema,
  Field91$outboundSchema,
  Field92$outboundSchema,
  Field93$outboundSchema,
  Field94$outboundSchema,
  Field95$outboundSchema,
  Field96$outboundSchema,
  Field97$outboundSchema,
  Field98$outboundSchema,
  Field99$outboundSchema,
  Field100$outboundSchema,
  Field101$outboundSchema,
  Field102$outboundSchema,
  Field103$outboundSchema,
  Field104$outboundSchema,
  Field105$outboundSchema,
  Field106$outboundSchema,
  Field107$outboundSchema,
  Field108$outboundSchema,
  Field109$outboundSchema,
  Field110$outboundSchema,
  Field111$outboundSchema,
  Field112$outboundSchema,
  Field113$outboundSchema,
  Field114$outboundSchema,
  Field115$outboundSchema,
  Field116$outboundSchema,
  Field117$outboundSchema,
  Field118$outboundSchema,
  Field119$outboundSchema,
  Field120$outboundSchema,
  Field121$outboundSchema,
  Field122$outboundSchema,
  Field123$outboundSchema,
  Field124$outboundSchema,
  Field125$outboundSchema,
  Field126$outboundSchema,
  Field127$outboundSchema,
  Field128$outboundSchema,
  Field129$outboundSchema,
  Field130$outboundSchema,
  Field131$outboundSchema,
  Field132$outboundSchema,
  Field133$outboundSchema,
  Field134$outboundSchema,
  Field135$outboundSchema,
  Field136$outboundSchema,
  Field137$outboundSchema,
  Field138$outboundSchema,
  Field139$outboundSchema,
  Field140$outboundSchema,
  Field141$outboundSchema,
  Field142$outboundSchema,
  Field143$outboundSchema,
  Field144$outboundSchema,
  Field145$outboundSchema,
  Field146$outboundSchema,
  Field147$outboundSchema,
  Field148$outboundSchema,
  Field149$outboundSchema,
  Field150$outboundSchema,
  Field151$outboundSchema,
  Field152$outboundSchema,
  Field153$outboundSchema,
  Field154$outboundSchema,
  Field155$outboundSchema,
  Field156$outboundSchema,
  Field157$outboundSchema,
  Field158$outboundSchema,
  Field159$outboundSchema,
  Field160$outboundSchema,
  Field161$outboundSchema,
  Field162$outboundSchema,
  Field163$outboundSchema,
  Field164$outboundSchema,
  Field165$outboundSchema,
  Field166$outboundSchema,
  Field167$outboundSchema,
  Field168$outboundSchema,
  Field169$outboundSchema,
  Field170$outboundSchema,
  Field171$outboundSchema,
  Field172$outboundSchema,
  Field173$outboundSchema,
  Field174$outboundSchema,
  Field175$outboundSchema,
  Field176$outboundSchema,
  Field177$outboundSchema,
  Field178$outboundSchema,
  Field179$outboundSchema,
  Field180$outboundSchema,
  Field181$outboundSchema,
  Field182$outboundSchema,
  Field183$outboundSchema,
  Field184$outboundSchema,
  Field185$outboundSchema,
  Field186$outboundSchema,
  Field187$outboundSchema,
  Field188$outboundSchema,
  Field189$outboundSchema,
  Field190$outboundSchema,
  Field191$outboundSchema,
  Field192$outboundSchema,
  Field193$outboundSchema,
  Field194$outboundSchema,
  Field195$outboundSchema,
  Field196$outboundSchema,
  Field197$outboundSchema,
  Field198$outboundSchema,
  Field199$outboundSchema,
  Field200$outboundSchema,
  Field201$outboundSchema,
  Field202$outboundSchema,
  Field203$outboundSchema,
  Field204$outboundSchema,
  Field205$outboundSchema,
  Field206$outboundSchema,
  Field207$outboundSchema,
  Field208$outboundSchema,
  Field209$outboundSchema,
  Field210$outboundSchema,
  Field211$outboundSchema,
  Field212$outboundSchema,
  Field213$outboundSchema,
  Field214$outboundSchema,
  Field215$outboundSchema,
  Field216$outboundSchema,
  Field217$outboundSchema,
  Field218$outboundSchema,
  Field219$outboundSchema,
  Field220$outboundSchema,
  Field221$outboundSchema,
  Field222$outboundSchema,
  Field223$outboundSchema,
  Field224$outboundSchema,
  Field225$outboundSchema,
  Field226$outboundSchema,
  Field227$outboundSchema,
  Field228$outboundSchema,
  Field229$outboundSchema,
  Field230$outboundSchema,
  Field231$outboundSchema,
  Field232$outboundSchema,
  Field233$outboundSchema,
  Field234$outboundSchema,
  Field235$outboundSchema,
  Field236$outboundSchema,
  Field237$outboundSchema,
  Field238$outboundSchema,
  Field239$outboundSchema,
  Field240$outboundSchema,
  Field241$outboundSchema,
  Field242$outboundSchema,
  Field243$outboundSchema,
  Field244$outboundSchema,
  Field245$outboundSchema,
  Field246$outboundSchema,
  Field247$outboundSchema,
  Field248$outboundSchema,
  Field249$outboundSchema,
  Field250$outboundSchema,
  Field251$outboundSchema,
  Field252$outboundSchema,
  Field253$outboundSchema,
  Field254$outboundSchema,
  Field255$outboundSchema,
  Field256$outboundSchema,
  Field257$outboundSchema,
  Field258$outboundSchema,
  Field259$outboundSchema,
  Field260$outboundSchema,
  Field261$outboundSchema,
  Field262$outboundSchema,
  Field263$outboundSchema,
  Field264$outboundSchema,
  Field265$outboundSchema,
  Field266$outboundSchema,
  Field267$outboundSchema,
  Field268$outboundSchema,
  Field269$outboundSchema,
  Field270$outboundSchema,
  Field271$outboundSchema,
  Field272$outboundSchema,
  Field273$outboundSchema,
  Field274$outboundSchema,
  Field275$outboundSchema,
  Field276$outboundSchema,
  Field277$outboundSchema,
  Field278$outboundSchema,
  Field279$outboundSchema,
  Field280$outboundSchema,
  Field281$outboundSchema,
  Field282$outboundSchema,
  Field283$outboundSchema,
  Field284$outboundSchema,
  Field285$outboundSchema,
  Field286$outboundSchema,
  Field287$outboundSchema,
  Field288$outboundSchema,
  Field289$outboundSchema,
  Field290$outboundSchema,
  Field291$outboundSchema,
  Field292$outboundSchema,
  Field293$outboundSchema,
  Field294$outboundSchema,
  Field295$outboundSchema,
  Field296$outboundSchema,
  Field297$outboundSchema,
  Field298$outboundSchema,
  Field299$outboundSchema,
  Field300$outboundSchema,
  Field301$outboundSchema,
  Field302$outboundSchema,
  Field303$outboundSchema,
  Field304$outboundSchema,
  Field305$outboundSchema,
  Field306$outboundSchema,
  Field307$outboundSchema,
  Field308$outboundSchema,
  Field309$outboundSchema,
  Field310$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryQueryField$ {
  /** @deprecated use `ExportQueryQueryField$inboundSchema` instead. */
  export const inboundSchema = ExportQueryQueryField$inboundSchema;
  /** @deprecated use `ExportQueryQueryField$outboundSchema` instead. */
  export const outboundSchema = ExportQueryQueryField$outboundSchema;
  /** @deprecated use `ExportQueryQueryField$Outbound` instead. */
  export type Outbound = ExportQueryQueryField$Outbound;
}

export function exportQueryQueryFieldToJSON(
  exportQueryQueryField: ExportQueryQueryField,
): string {
  return JSON.stringify(
    ExportQueryQueryField$outboundSchema.parse(exportQueryQueryField),
  );
}

export function exportQueryQueryFieldFromJSON(
  jsonString: string,
): SafeParseResult<ExportQueryQueryField, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ExportQueryQueryField$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ExportQueryQueryField' from JSON`,
  );
}

/** @internal */
export const ExportQueryDirection2$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryDirection2
> = z.nativeEnum(ExportQueryDirection2);

/** @internal */
export const ExportQueryDirection2$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryDirection2
> = ExportQueryDirection2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryDirection2$ {
  /** @deprecated use `ExportQueryDirection2$inboundSchema` instead. */
  export const inboundSchema = ExportQueryDirection2$inboundSchema;
  /** @deprecated use `ExportQueryDirection2$outboundSchema` instead. */
  export const outboundSchema = ExportQueryDirection2$outboundSchema;
}

/** @internal */
export const ExportQueryDirection1$inboundSchema: z.ZodNativeEnum<
  typeof ExportQueryDirection1
> = z.nativeEnum(ExportQueryDirection1);

/** @internal */
export const ExportQueryDirection1$outboundSchema: z.ZodNativeEnum<
  typeof ExportQueryDirection1
> = ExportQueryDirection1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryDirection1$ {
  /** @deprecated use `ExportQueryDirection1$inboundSchema` instead. */
  export const inboundSchema = ExportQueryDirection1$inboundSchema;
  /** @deprecated use `ExportQueryDirection1$outboundSchema` instead. */
  export const outboundSchema = ExportQueryDirection1$outboundSchema;
}

/** @internal */
export const ExportQueryDirection$inboundSchema: z.ZodType<
  ExportQueryDirection,
  z.ZodTypeDef,
  unknown
> = z.union([
  ExportQueryDirection1$inboundSchema,
  ExportQueryDirection2$inboundSchema,
]);

/** @internal */
export type ExportQueryDirection$Outbound = string | string;

/** @internal */
export const ExportQueryDirection$outboundSchema: z.ZodType<
  ExportQueryDirection$Outbound,
  z.ZodTypeDef,
  ExportQueryDirection
> = z.union([
  ExportQueryDirection1$outboundSchema,
  ExportQueryDirection2$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryDirection$ {
  /** @deprecated use `ExportQueryDirection$inboundSchema` instead. */
  export const inboundSchema = ExportQueryDirection$inboundSchema;
  /** @deprecated use `ExportQueryDirection$outboundSchema` instead. */
  export const outboundSchema = ExportQueryDirection$outboundSchema;
  /** @deprecated use `ExportQueryDirection$Outbound` instead. */
  export type Outbound = ExportQueryDirection$Outbound;
}

export function exportQueryDirectionToJSON(
  exportQueryDirection: ExportQueryDirection,
): string {
  return JSON.stringify(
    ExportQueryDirection$outboundSchema.parse(exportQueryDirection),
  );
}

export function exportQueryDirectionFromJSON(
  jsonString: string,
): SafeParseResult<ExportQueryDirection, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ExportQueryDirection$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ExportQueryDirection' from JSON`,
  );
}

/** @internal */
export const ExportQueryOrderBy$inboundSchema: z.ZodType<
  ExportQueryOrderBy,
  z.ZodTypeDef,
  unknown
> = z.object({
  field: z.union([
    ExportQueryFieldQuery1$inboundSchema,
    ExportQueryFieldQuery2$inboundSchema,
    ExportQueryFieldQuery3$inboundSchema,
    ExportQueryFieldQuery4$inboundSchema,
    ExportQueryFieldQuery5$inboundSchema,
    ExportQueryFieldQuery6$inboundSchema,
    ExportQueryFieldQuery7$inboundSchema,
    ExportQueryFieldQuery8$inboundSchema,
    ExportQueryFieldQuery9$inboundSchema,
    ExportQueryFieldQuery10$inboundSchema,
    ExportQueryFieldQuery11$inboundSchema,
    ExportQueryFieldQuery12$inboundSchema,
    ExportQueryFieldQuery13$inboundSchema,
    ExportQueryFieldQuery14$inboundSchema,
    ExportQueryFieldQuery15$inboundSchema,
    ExportQueryFieldQuery16$inboundSchema,
    ExportQueryFieldQuery17$inboundSchema,
    ExportQueryFieldQuery18$inboundSchema,
    ExportQueryFieldQuery19$inboundSchema,
    ExportQueryFieldQuery20$inboundSchema,
    ExportQueryFieldQuery21$inboundSchema,
    ExportQueryFieldQuery22$inboundSchema,
    ExportQueryFieldQuery23$inboundSchema,
    ExportQueryFieldQuery24$inboundSchema,
    ExportQueryFieldQuery25$inboundSchema,
    ExportQueryFieldQuery26$inboundSchema,
    ExportQueryFieldQuery27$inboundSchema,
    ExportQueryFieldQuery28$inboundSchema,
    ExportQueryFieldQuery29$inboundSchema,
    ExportQueryFieldQuery30$inboundSchema,
    ExportQueryFieldQuery31$inboundSchema,
    ExportQueryField32$inboundSchema,
    ExportQueryField33$inboundSchema,
    ExportQueryField34$inboundSchema,
    ExportQueryField35$inboundSchema,
    ExportQueryField36$inboundSchema,
    ExportQueryField37$inboundSchema,
    ExportQueryField38$inboundSchema,
    ExportQueryField39$inboundSchema,
    ExportQueryField40$inboundSchema,
    ExportQueryField41$inboundSchema,
    ExportQueryField42$inboundSchema,
    ExportQueryField43$inboundSchema,
    ExportQueryField44$inboundSchema,
    ExportQueryField45$inboundSchema,
    ExportQueryField46$inboundSchema,
    ExportQueryField47$inboundSchema,
    ExportQueryField48$inboundSchema,
    ExportQueryField49$inboundSchema,
    ExportQueryField50$inboundSchema,
    ExportQueryField51$inboundSchema,
    ExportQueryField52$inboundSchema,
    ExportQueryField53$inboundSchema,
    ExportQueryField54$inboundSchema,
    ExportQueryField55$inboundSchema,
    ExportQueryField56$inboundSchema,
    ExportQueryField57$inboundSchema,
    ExportQueryField58$inboundSchema,
    ExportQueryField59$inboundSchema,
    ExportQueryField60$inboundSchema,
    ExportQueryField61$inboundSchema,
    ExportQueryField62$inboundSchema,
    ExportQueryField63$inboundSchema,
    ExportQueryField64$inboundSchema,
    ExportQueryField65$inboundSchema,
    ExportQueryField66$inboundSchema,
    ExportQueryField67$inboundSchema,
    ExportQueryField68$inboundSchema,
    ExportQueryField69$inboundSchema,
    ExportQueryField70$inboundSchema,
    Field71$inboundSchema,
    Field72$inboundSchema,
    Field73$inboundSchema,
    Field74$inboundSchema,
    Field75$inboundSchema,
    Field76$inboundSchema,
    Field77$inboundSchema,
    Field78$inboundSchema,
    Field79$inboundSchema,
    Field80$inboundSchema,
    Field81$inboundSchema,
    Field82$inboundSchema,
    Field83$inboundSchema,
    Field84$inboundSchema,
    Field85$inboundSchema,
    Field86$inboundSchema,
    Field87$inboundSchema,
    Field88$inboundSchema,
    Field89$inboundSchema,
    Field90$inboundSchema,
    Field91$inboundSchema,
    Field92$inboundSchema,
    Field93$inboundSchema,
    Field94$inboundSchema,
    Field95$inboundSchema,
    Field96$inboundSchema,
    Field97$inboundSchema,
    Field98$inboundSchema,
    Field99$inboundSchema,
    Field100$inboundSchema,
    Field101$inboundSchema,
    Field102$inboundSchema,
    Field103$inboundSchema,
    Field104$inboundSchema,
    Field105$inboundSchema,
    Field106$inboundSchema,
    Field107$inboundSchema,
    Field108$inboundSchema,
    Field109$inboundSchema,
    Field110$inboundSchema,
    Field111$inboundSchema,
    Field112$inboundSchema,
    Field113$inboundSchema,
    Field114$inboundSchema,
    Field115$inboundSchema,
    Field116$inboundSchema,
    Field117$inboundSchema,
    Field118$inboundSchema,
    Field119$inboundSchema,
    Field120$inboundSchema,
    Field121$inboundSchema,
    Field122$inboundSchema,
    Field123$inboundSchema,
    Field124$inboundSchema,
    Field125$inboundSchema,
    Field126$inboundSchema,
    Field127$inboundSchema,
    Field128$inboundSchema,
    Field129$inboundSchema,
    Field130$inboundSchema,
    Field131$inboundSchema,
    Field132$inboundSchema,
    Field133$inboundSchema,
    Field134$inboundSchema,
    Field135$inboundSchema,
    Field136$inboundSchema,
    Field137$inboundSchema,
    Field138$inboundSchema,
    Field139$inboundSchema,
    Field140$inboundSchema,
    Field141$inboundSchema,
    Field142$inboundSchema,
    Field143$inboundSchema,
    Field144$inboundSchema,
    Field145$inboundSchema,
    Field146$inboundSchema,
    Field147$inboundSchema,
    Field148$inboundSchema,
    Field149$inboundSchema,
    Field150$inboundSchema,
    Field151$inboundSchema,
    Field152$inboundSchema,
    Field153$inboundSchema,
    Field154$inboundSchema,
    Field155$inboundSchema,
    Field156$inboundSchema,
    Field157$inboundSchema,
    Field158$inboundSchema,
    Field159$inboundSchema,
    Field160$inboundSchema,
    Field161$inboundSchema,
    Field162$inboundSchema,
    Field163$inboundSchema,
    Field164$inboundSchema,
    Field165$inboundSchema,
    Field166$inboundSchema,
    Field167$inboundSchema,
    Field168$inboundSchema,
    Field169$inboundSchema,
    Field170$inboundSchema,
    Field171$inboundSchema,
    Field172$inboundSchema,
    Field173$inboundSchema,
    Field174$inboundSchema,
    Field175$inboundSchema,
    Field176$inboundSchema,
    Field177$inboundSchema,
    Field178$inboundSchema,
    Field179$inboundSchema,
    Field180$inboundSchema,
    Field181$inboundSchema,
    Field182$inboundSchema,
    Field183$inboundSchema,
    Field184$inboundSchema,
    Field185$inboundSchema,
    Field186$inboundSchema,
    Field187$inboundSchema,
    Field188$inboundSchema,
    Field189$inboundSchema,
    Field190$inboundSchema,
    Field191$inboundSchema,
    Field192$inboundSchema,
    Field193$inboundSchema,
    Field194$inboundSchema,
    Field195$inboundSchema,
    Field196$inboundSchema,
    Field197$inboundSchema,
    Field198$inboundSchema,
    Field199$inboundSchema,
    Field200$inboundSchema,
    Field201$inboundSchema,
    Field202$inboundSchema,
    Field203$inboundSchema,
    Field204$inboundSchema,
    Field205$inboundSchema,
    Field206$inboundSchema,
    Field207$inboundSchema,
    Field208$inboundSchema,
    Field209$inboundSchema,
    Field210$inboundSchema,
    Field211$inboundSchema,
    Field212$inboundSchema,
    Field213$inboundSchema,
    Field214$inboundSchema,
    Field215$inboundSchema,
    Field216$inboundSchema,
    Field217$inboundSchema,
    Field218$inboundSchema,
    Field219$inboundSchema,
    Field220$inboundSchema,
    Field221$inboundSchema,
    Field222$inboundSchema,
    Field223$inboundSchema,
    Field224$inboundSchema,
    Field225$inboundSchema,
    Field226$inboundSchema,
    Field227$inboundSchema,
    Field228$inboundSchema,
    Field229$inboundSchema,
    Field230$inboundSchema,
    Field231$inboundSchema,
    Field232$inboundSchema,
    Field233$inboundSchema,
    Field234$inboundSchema,
    Field235$inboundSchema,
    Field236$inboundSchema,
    Field237$inboundSchema,
    Field238$inboundSchema,
    Field239$inboundSchema,
    Field240$inboundSchema,
    Field241$inboundSchema,
    Field242$inboundSchema,
    Field243$inboundSchema,
    Field244$inboundSchema,
    Field245$inboundSchema,
    Field246$inboundSchema,
    Field247$inboundSchema,
    Field248$inboundSchema,
    Field249$inboundSchema,
    Field250$inboundSchema,
    Field251$inboundSchema,
    Field252$inboundSchema,
    Field253$inboundSchema,
    Field254$inboundSchema,
    Field255$inboundSchema,
    Field256$inboundSchema,
    Field257$inboundSchema,
    Field258$inboundSchema,
    Field259$inboundSchema,
    Field260$inboundSchema,
    Field261$inboundSchema,
    Field262$inboundSchema,
    Field263$inboundSchema,
    Field264$inboundSchema,
    Field265$inboundSchema,
    Field266$inboundSchema,
    Field267$inboundSchema,
    Field268$inboundSchema,
    Field269$inboundSchema,
    Field270$inboundSchema,
    Field271$inboundSchema,
    Field272$inboundSchema,
    Field273$inboundSchema,
    Field274$inboundSchema,
    Field275$inboundSchema,
    Field276$inboundSchema,
    Field277$inboundSchema,
    Field278$inboundSchema,
    Field279$inboundSchema,
    Field280$inboundSchema,
    Field281$inboundSchema,
    Field282$inboundSchema,
    Field283$inboundSchema,
    Field284$inboundSchema,
    Field285$inboundSchema,
    Field286$inboundSchema,
    Field287$inboundSchema,
    Field288$inboundSchema,
    Field289$inboundSchema,
    Field290$inboundSchema,
    Field291$inboundSchema,
    Field292$inboundSchema,
    Field293$inboundSchema,
    Field294$inboundSchema,
    Field295$inboundSchema,
    Field296$inboundSchema,
    Field297$inboundSchema,
    Field298$inboundSchema,
    Field299$inboundSchema,
    Field300$inboundSchema,
    Field301$inboundSchema,
    Field302$inboundSchema,
    Field303$inboundSchema,
    Field304$inboundSchema,
    Field305$inboundSchema,
    Field306$inboundSchema,
    Field307$inboundSchema,
    Field308$inboundSchema,
    Field309$inboundSchema,
    Field310$inboundSchema,
  ]),
  direction: z.union([
    ExportQueryDirection1$inboundSchema,
    ExportQueryDirection2$inboundSchema,
  ]),
});

/** @internal */
export type ExportQueryOrderBy$Outbound = {
  field:
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string;
  direction: string | string;
};

/** @internal */
export const ExportQueryOrderBy$outboundSchema: z.ZodType<
  ExportQueryOrderBy$Outbound,
  z.ZodTypeDef,
  ExportQueryOrderBy
> = z.object({
  field: z.union([
    ExportQueryFieldQuery1$outboundSchema,
    ExportQueryFieldQuery2$outboundSchema,
    ExportQueryFieldQuery3$outboundSchema,
    ExportQueryFieldQuery4$outboundSchema,
    ExportQueryFieldQuery5$outboundSchema,
    ExportQueryFieldQuery6$outboundSchema,
    ExportQueryFieldQuery7$outboundSchema,
    ExportQueryFieldQuery8$outboundSchema,
    ExportQueryFieldQuery9$outboundSchema,
    ExportQueryFieldQuery10$outboundSchema,
    ExportQueryFieldQuery11$outboundSchema,
    ExportQueryFieldQuery12$outboundSchema,
    ExportQueryFieldQuery13$outboundSchema,
    ExportQueryFieldQuery14$outboundSchema,
    ExportQueryFieldQuery15$outboundSchema,
    ExportQueryFieldQuery16$outboundSchema,
    ExportQueryFieldQuery17$outboundSchema,
    ExportQueryFieldQuery18$outboundSchema,
    ExportQueryFieldQuery19$outboundSchema,
    ExportQueryFieldQuery20$outboundSchema,
    ExportQueryFieldQuery21$outboundSchema,
    ExportQueryFieldQuery22$outboundSchema,
    ExportQueryFieldQuery23$outboundSchema,
    ExportQueryFieldQuery24$outboundSchema,
    ExportQueryFieldQuery25$outboundSchema,
    ExportQueryFieldQuery26$outboundSchema,
    ExportQueryFieldQuery27$outboundSchema,
    ExportQueryFieldQuery28$outboundSchema,
    ExportQueryFieldQuery29$outboundSchema,
    ExportQueryFieldQuery30$outboundSchema,
    ExportQueryFieldQuery31$outboundSchema,
    ExportQueryField32$outboundSchema,
    ExportQueryField33$outboundSchema,
    ExportQueryField34$outboundSchema,
    ExportQueryField35$outboundSchema,
    ExportQueryField36$outboundSchema,
    ExportQueryField37$outboundSchema,
    ExportQueryField38$outboundSchema,
    ExportQueryField39$outboundSchema,
    ExportQueryField40$outboundSchema,
    ExportQueryField41$outboundSchema,
    ExportQueryField42$outboundSchema,
    ExportQueryField43$outboundSchema,
    ExportQueryField44$outboundSchema,
    ExportQueryField45$outboundSchema,
    ExportQueryField46$outboundSchema,
    ExportQueryField47$outboundSchema,
    ExportQueryField48$outboundSchema,
    ExportQueryField49$outboundSchema,
    ExportQueryField50$outboundSchema,
    ExportQueryField51$outboundSchema,
    ExportQueryField52$outboundSchema,
    ExportQueryField53$outboundSchema,
    ExportQueryField54$outboundSchema,
    ExportQueryField55$outboundSchema,
    ExportQueryField56$outboundSchema,
    ExportQueryField57$outboundSchema,
    ExportQueryField58$outboundSchema,
    ExportQueryField59$outboundSchema,
    ExportQueryField60$outboundSchema,
    ExportQueryField61$outboundSchema,
    ExportQueryField62$outboundSchema,
    ExportQueryField63$outboundSchema,
    ExportQueryField64$outboundSchema,
    ExportQueryField65$outboundSchema,
    ExportQueryField66$outboundSchema,
    ExportQueryField67$outboundSchema,
    ExportQueryField68$outboundSchema,
    ExportQueryField69$outboundSchema,
    ExportQueryField70$outboundSchema,
    Field71$outboundSchema,
    Field72$outboundSchema,
    Field73$outboundSchema,
    Field74$outboundSchema,
    Field75$outboundSchema,
    Field76$outboundSchema,
    Field77$outboundSchema,
    Field78$outboundSchema,
    Field79$outboundSchema,
    Field80$outboundSchema,
    Field81$outboundSchema,
    Field82$outboundSchema,
    Field83$outboundSchema,
    Field84$outboundSchema,
    Field85$outboundSchema,
    Field86$outboundSchema,
    Field87$outboundSchema,
    Field88$outboundSchema,
    Field89$outboundSchema,
    Field90$outboundSchema,
    Field91$outboundSchema,
    Field92$outboundSchema,
    Field93$outboundSchema,
    Field94$outboundSchema,
    Field95$outboundSchema,
    Field96$outboundSchema,
    Field97$outboundSchema,
    Field98$outboundSchema,
    Field99$outboundSchema,
    Field100$outboundSchema,
    Field101$outboundSchema,
    Field102$outboundSchema,
    Field103$outboundSchema,
    Field104$outboundSchema,
    Field105$outboundSchema,
    Field106$outboundSchema,
    Field107$outboundSchema,
    Field108$outboundSchema,
    Field109$outboundSchema,
    Field110$outboundSchema,
    Field111$outboundSchema,
    Field112$outboundSchema,
    Field113$outboundSchema,
    Field114$outboundSchema,
    Field115$outboundSchema,
    Field116$outboundSchema,
    Field117$outboundSchema,
    Field118$outboundSchema,
    Field119$outboundSchema,
    Field120$outboundSchema,
    Field121$outboundSchema,
    Field122$outboundSchema,
    Field123$outboundSchema,
    Field124$outboundSchema,
    Field125$outboundSchema,
    Field126$outboundSchema,
    Field127$outboundSchema,
    Field128$outboundSchema,
    Field129$outboundSchema,
    Field130$outboundSchema,
    Field131$outboundSchema,
    Field132$outboundSchema,
    Field133$outboundSchema,
    Field134$outboundSchema,
    Field135$outboundSchema,
    Field136$outboundSchema,
    Field137$outboundSchema,
    Field138$outboundSchema,
    Field139$outboundSchema,
    Field140$outboundSchema,
    Field141$outboundSchema,
    Field142$outboundSchema,
    Field143$outboundSchema,
    Field144$outboundSchema,
    Field145$outboundSchema,
    Field146$outboundSchema,
    Field147$outboundSchema,
    Field148$outboundSchema,
    Field149$outboundSchema,
    Field150$outboundSchema,
    Field151$outboundSchema,
    Field152$outboundSchema,
    Field153$outboundSchema,
    Field154$outboundSchema,
    Field155$outboundSchema,
    Field156$outboundSchema,
    Field157$outboundSchema,
    Field158$outboundSchema,
    Field159$outboundSchema,
    Field160$outboundSchema,
    Field161$outboundSchema,
    Field162$outboundSchema,
    Field163$outboundSchema,
    Field164$outboundSchema,
    Field165$outboundSchema,
    Field166$outboundSchema,
    Field167$outboundSchema,
    Field168$outboundSchema,
    Field169$outboundSchema,
    Field170$outboundSchema,
    Field171$outboundSchema,
    Field172$outboundSchema,
    Field173$outboundSchema,
    Field174$outboundSchema,
    Field175$outboundSchema,
    Field176$outboundSchema,
    Field177$outboundSchema,
    Field178$outboundSchema,
    Field179$outboundSchema,
    Field180$outboundSchema,
    Field181$outboundSchema,
    Field182$outboundSchema,
    Field183$outboundSchema,
    Field184$outboundSchema,
    Field185$outboundSchema,
    Field186$outboundSchema,
    Field187$outboundSchema,
    Field188$outboundSchema,
    Field189$outboundSchema,
    Field190$outboundSchema,
    Field191$outboundSchema,
    Field192$outboundSchema,
    Field193$outboundSchema,
    Field194$outboundSchema,
    Field195$outboundSchema,
    Field196$outboundSchema,
    Field197$outboundSchema,
    Field198$outboundSchema,
    Field199$outboundSchema,
    Field200$outboundSchema,
    Field201$outboundSchema,
    Field202$outboundSchema,
    Field203$outboundSchema,
    Field204$outboundSchema,
    Field205$outboundSchema,
    Field206$outboundSchema,
    Field207$outboundSchema,
    Field208$outboundSchema,
    Field209$outboundSchema,
    Field210$outboundSchema,
    Field211$outboundSchema,
    Field212$outboundSchema,
    Field213$outboundSchema,
    Field214$outboundSchema,
    Field215$outboundSchema,
    Field216$outboundSchema,
    Field217$outboundSchema,
    Field218$outboundSchema,
    Field219$outboundSchema,
    Field220$outboundSchema,
    Field221$outboundSchema,
    Field222$outboundSchema,
    Field223$outboundSchema,
    Field224$outboundSchema,
    Field225$outboundSchema,
    Field226$outboundSchema,
    Field227$outboundSchema,
    Field228$outboundSchema,
    Field229$outboundSchema,
    Field230$outboundSchema,
    Field231$outboundSchema,
    Field232$outboundSchema,
    Field233$outboundSchema,
    Field234$outboundSchema,
    Field235$outboundSchema,
    Field236$outboundSchema,
    Field237$outboundSchema,
    Field238$outboundSchema,
    Field239$outboundSchema,
    Field240$outboundSchema,
    Field241$outboundSchema,
    Field242$outboundSchema,
    Field243$outboundSchema,
    Field244$outboundSchema,
    Field245$outboundSchema,
    Field246$outboundSchema,
    Field247$outboundSchema,
    Field248$outboundSchema,
    Field249$outboundSchema,
    Field250$outboundSchema,
    Field251$outboundSchema,
    Field252$outboundSchema,
    Field253$outboundSchema,
    Field254$outboundSchema,
    Field255$outboundSchema,
    Field256$outboundSchema,
    Field257$outboundSchema,
    Field258$outboundSchema,
    Field259$outboundSchema,
    Field260$outboundSchema,
    Field261$outboundSchema,
    Field262$outboundSchema,
    Field263$outboundSchema,
    Field264$outboundSchema,
    Field265$outboundSchema,
    Field266$outboundSchema,
    Field267$outboundSchema,
    Field268$outboundSchema,
    Field269$outboundSchema,
    Field270$outboundSchema,
    Field271$outboundSchema,
    Field272$outboundSchema,
    Field273$outboundSchema,
    Field274$outboundSchema,
    Field275$outboundSchema,
    Field276$outboundSchema,
    Field277$outboundSchema,
    Field278$outboundSchema,
    Field279$outboundSchema,
    Field280$outboundSchema,
    Field281$outboundSchema,
    Field282$outboundSchema,
    Field283$outboundSchema,
    Field284$outboundSchema,
    Field285$outboundSchema,
    Field286$outboundSchema,
    Field287$outboundSchema,
    Field288$outboundSchema,
    Field289$outboundSchema,
    Field290$outboundSchema,
    Field291$outboundSchema,
    Field292$outboundSchema,
    Field293$outboundSchema,
    Field294$outboundSchema,
    Field295$outboundSchema,
    Field296$outboundSchema,
    Field297$outboundSchema,
    Field298$outboundSchema,
    Field299$outboundSchema,
    Field300$outboundSchema,
    Field301$outboundSchema,
    Field302$outboundSchema,
    Field303$outboundSchema,
    Field304$outboundSchema,
    Field305$outboundSchema,
    Field306$outboundSchema,
    Field307$outboundSchema,
    Field308$outboundSchema,
    Field309$outboundSchema,
    Field310$outboundSchema,
  ]),
  direction: z.union([
    ExportQueryDirection1$outboundSchema,
    ExportQueryDirection2$outboundSchema,
  ]),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryOrderBy$ {
  /** @deprecated use `ExportQueryOrderBy$inboundSchema` instead. */
  export const inboundSchema = ExportQueryOrderBy$inboundSchema;
  /** @deprecated use `ExportQueryOrderBy$outboundSchema` instead. */
  export const outboundSchema = ExportQueryOrderBy$outboundSchema;
  /** @deprecated use `ExportQueryOrderBy$Outbound` instead. */
  export type Outbound = ExportQueryOrderBy$Outbound;
}

export function exportQueryOrderByToJSON(
  exportQueryOrderBy: ExportQueryOrderBy,
): string {
  return JSON.stringify(
    ExportQueryOrderBy$outboundSchema.parse(exportQueryOrderBy),
  );
}

export function exportQueryOrderByFromJSON(
  jsonString: string,
): SafeParseResult<ExportQueryOrderBy, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ExportQueryOrderBy$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ExportQueryOrderBy' from JSON`,
  );
}

/** @internal */
export const ExportQueryRequestBody$inboundSchema: z.ZodType<
  ExportQueryRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  select: z.array(
    z.union([
      components.SimpleFieldSelection$inboundSchema.and(
        z.object({ type: z.literal("field") }).transform((v) => ({
          type: v.type,
        })),
      ),
      components.AggregationSelection$inboundSchema.and(
        z.object({ type: z.literal("aggregation") }).transform((v) => ({
          type: v.type,
        })),
      ),
      components.TimeBasedGroupBySelection$inboundSchema.and(
        z.object({ type: z.literal("time") }).transform((v) => ({
          type: v.type,
        })),
      ),
    ]),
  ).optional(),
  groupBy: z.array(z.lazy(() => ExportQueryGroupBy$inboundSchema)).optional(),
  where: components.SemanticThreadFilter$inboundSchema.optional(),
  orderBy: z.array(z.lazy(() => ExportQueryOrderBy$inboundSchema)).optional(),
});

/** @internal */
export type ExportQueryRequestBody$Outbound = {
  select?:
    | Array<
      | (components.SimpleFieldSelection$Outbound & { type: "field" })
      | (components.AggregationSelection$Outbound & { type: "aggregation" })
      | (components.TimeBasedGroupBySelection$Outbound & { type: "time" })
    >
    | undefined;
  groupBy?: Array<ExportQueryGroupBy$Outbound> | undefined;
  where?: components.SemanticThreadFilter$Outbound | undefined;
  orderBy?: Array<ExportQueryOrderBy$Outbound> | undefined;
};

/** @internal */
export const ExportQueryRequestBody$outboundSchema: z.ZodType<
  ExportQueryRequestBody$Outbound,
  z.ZodTypeDef,
  ExportQueryRequestBody
> = z.object({
  select: z.array(
    z.union([
      components.SimpleFieldSelection$outboundSchema.and(
        z.object({ type: z.literal("field") }).transform((v) => ({
          type: v.type,
        })),
      ),
      components.AggregationSelection$outboundSchema.and(
        z.object({ type: z.literal("aggregation") }).transform((v) => ({
          type: v.type,
        })),
      ),
      components.TimeBasedGroupBySelection$outboundSchema.and(
        z.object({ type: z.literal("time") }).transform((v) => ({
          type: v.type,
        })),
      ),
    ]),
  ).optional(),
  groupBy: z.array(z.lazy(() => ExportQueryGroupBy$outboundSchema)).optional(),
  where: components.SemanticThreadFilter$outboundSchema.optional(),
  orderBy: z.array(z.lazy(() => ExportQueryOrderBy$outboundSchema)).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryRequestBody$ {
  /** @deprecated use `ExportQueryRequestBody$inboundSchema` instead. */
  export const inboundSchema = ExportQueryRequestBody$inboundSchema;
  /** @deprecated use `ExportQueryRequestBody$outboundSchema` instead. */
  export const outboundSchema = ExportQueryRequestBody$outboundSchema;
  /** @deprecated use `ExportQueryRequestBody$Outbound` instead. */
  export type Outbound = ExportQueryRequestBody$Outbound;
}

export function exportQueryRequestBodyToJSON(
  exportQueryRequestBody: ExportQueryRequestBody,
): string {
  return JSON.stringify(
    ExportQueryRequestBody$outboundSchema.parse(exportQueryRequestBody),
  );
}

export function exportQueryRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<ExportQueryRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ExportQueryRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ExportQueryRequestBody' from JSON`,
  );
}

/** @internal */
export const ExportQueryRequest$inboundSchema: z.ZodType<
  ExportQueryRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  table: z.string(),
  RequestBody: z.lazy(() => ExportQueryRequestBody$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type ExportQueryRequest$Outbound = {
  table: string;
  RequestBody: ExportQueryRequestBody$Outbound;
};

/** @internal */
export const ExportQueryRequest$outboundSchema: z.ZodType<
  ExportQueryRequest$Outbound,
  z.ZodTypeDef,
  ExportQueryRequest
> = z.object({
  table: z.string(),
  requestBody: z.lazy(() => ExportQueryRequestBody$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExportQueryRequest$ {
  /** @deprecated use `ExportQueryRequest$inboundSchema` instead. */
  export const inboundSchema = ExportQueryRequest$inboundSchema;
  /** @deprecated use `ExportQueryRequest$outboundSchema` instead. */
  export const outboundSchema = ExportQueryRequest$outboundSchema;
  /** @deprecated use `ExportQueryRequest$Outbound` instead. */
  export type Outbound = ExportQueryRequest$Outbound;
}

export function exportQueryRequestToJSON(
  exportQueryRequest: ExportQueryRequest,
): string {
  return JSON.stringify(
    ExportQueryRequest$outboundSchema.parse(exportQueryRequest),
  );
}

export function exportQueryRequestFromJSON(
  jsonString: string,
): SafeParseResult<ExportQueryRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ExportQueryRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ExportQueryRequest' from JSON`,
  );
}
