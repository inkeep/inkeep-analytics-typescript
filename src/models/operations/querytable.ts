/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type QueryTableSecurity = {
  webIntegrationKey?: string | undefined;
  apiIntegrationKey?: string | undefined;
};

export type QueryTableSelect =
  | (components.SimpleFieldSelection & { type: "field" })
  | (components.AggregationSelection & { type: "aggregation" })
  | (components.TimeBasedGroupBySelection & { type: "time" });

export const Field31 = {
  IsInitialQuestionAnswer: "isInitialQuestionAnswer",
} as const;
export type Field31 = ClosedEnum<typeof Field31>;

export const Field30 = {
  AreAIAnnotationsVerified: "areAIAnnotationsVerified",
} as const;
export type Field30 = ClosedEnum<typeof Field30>;

export const Field29 = {
  ConversationIds: "conversationIds",
} as const;
export type Field29 = ClosedEnum<typeof Field29>;

export const Field28 = {
  HasNegativeFeedback: "hasNegativeFeedback",
} as const;
export type Field28 = ClosedEnum<typeof Field28>;

export const Field27 = {
  HasPositiveFeedback: "hasPositiveFeedback",
} as const;
export type Field27 = ClosedEnum<typeof Field27>;

export const Field26 = {
  LastUpdated: "lastUpdated",
} as const;
export type Field26 = ClosedEnum<typeof Field26>;

export const Field25 = {
  LastMessageTime: "lastMessageTime",
} as const;
export type Field25 = ClosedEnum<typeof Field25>;

export const Field24 = {
  FirstMessageTime: "firstMessageTime",
} as const;
export type Field24 = ClosedEnum<typeof Field24>;

export const Field23 = {
  IntegrationId: "integrationId",
} as const;
export type Field23 = ClosedEnum<typeof Field23>;

export const Field22 = {
  ProjectId: "projectId",
} as const;
export type Field22 = ClosedEnum<typeof Field22>;

export const Field21 = {
  QuestionType: "questionType",
} as const;
export type Field21 = ClosedEnum<typeof Field21>;

export const Field20 = {
  Sentiment: "sentiment",
} as const;
export type Field20 = ClosedEnum<typeof Field20>;

export const Field19 = {
  Emotion: "emotion",
} as const;
export type Field19 = ClosedEnum<typeof Field19>;

export const Field18 = {
  ThirdPartyEntities: "thirdPartyEntities",
} as const;
export type Field18 = ClosedEnum<typeof Field18>;

export const Field17 = {
  FirstPartyEntities: "firstPartyEntities",
} as const;
export type Field17 = ClosedEnum<typeof Field17>;

export const Field16 = {
  Languages: "languages",
} as const;
export type Field16 = ClosedEnum<typeof Field16>;

export const Field15 = {
  Category: "category",
} as const;
export type Field15 = ClosedEnum<typeof Field15>;

export const Field14 = {
  Subject: "subject",
} as const;
export type Field14 = ClosedEnum<typeof Field14>;

export const Field13 = {
  GapSummary: "gapSummary",
} as const;
export type Field13 = ClosedEnum<typeof Field13>;

export const Field12 = {
  IsAnswerConfident: "isAnswerConfident",
} as const;
export type Field12 = ClosedEnum<typeof Field12>;

export const Field11 = {
  IsFeatureSupported: "isFeatureSupported",
} as const;
export type Field11 = ClosedEnum<typeof Field11>;

export const Field10 = {
  IsDocumented: "isDocumented",
} as const;
export type Field10 = ClosedEnum<typeof Field10>;

export const Field9 = {
  IsClear: "isClear",
} as const;
export type Field9 = ClosedEnum<typeof Field9>;

export const Field8 = {
  IsOnTopic: "isOnTopic",
} as const;
export type Field8 = ClosedEnum<typeof Field8>;

export const QueryTableField7 = {
  Answer: "answer",
} as const;
export type QueryTableField7 = ClosedEnum<typeof QueryTableField7>;

export const QueryTableField6 = {
  QuestionLength: "questionLength",
} as const;
export type QueryTableField6 = ClosedEnum<typeof QueryTableField6>;

export const QueryTableField5 = {
  Question: "question",
} as const;
export type QueryTableField5 = ClosedEnum<typeof QueryTableField5>;

export const QueryTableField4 = {
  OrganizationId: "organizationId",
} as const;
export type QueryTableField4 = ClosedEnum<typeof QueryTableField4>;

export const QueryTableField3 = {
  MessagesCount: "messagesCount",
} as const;
export type QueryTableField3 = ClosedEnum<typeof QueryTableField3>;

export const QueryTableField2 = {
  MessageIds: "messageIds",
} as const;
export type QueryTableField2 = ClosedEnum<typeof QueryTableField2>;

export const QueryTableField1 = {
  Id: "id",
} as const;
export type QueryTableField1 = ClosedEnum<typeof QueryTableField1>;

export type QueryTableField =
  | QueryTableField1
  | QueryTableField2
  | QueryTableField3
  | QueryTableField4
  | QueryTableField5
  | QueryTableField6
  | QueryTableField7
  | Field8
  | Field9
  | Field10
  | Field11
  | Field12
  | Field13
  | Field14
  | Field15
  | Field16
  | Field17
  | Field18
  | Field19
  | Field20
  | Field21
  | Field22
  | Field23
  | Field24
  | Field25
  | Field26
  | Field27
  | Field28
  | Field29
  | Field30
  | Field31;

export type QueryTableGroupBy = {
  field:
    | QueryTableField1
    | QueryTableField2
    | QueryTableField3
    | QueryTableField4
    | QueryTableField5
    | QueryTableField6
    | QueryTableField7
    | Field8
    | Field9
    | Field10
    | Field11
    | Field12
    | Field13
    | Field14
    | Field15
    | Field16
    | Field17
    | Field18
    | Field19
    | Field20
    | Field21
    | Field22
    | Field23
    | Field24
    | Field25
    | Field26
    | Field27
    | Field28
    | Field29
    | Field30
    | Field31;
};

export const ThreeHundredAndTen = {
  MaxIsInitialQuestionAnswer: "max_isInitialQuestionAnswer",
} as const;
export type ThreeHundredAndTen = ClosedEnum<typeof ThreeHundredAndTen>;

export const ThreeHundredAndNine = {
  MinIsInitialQuestionAnswer: "min_isInitialQuestionAnswer",
} as const;
export type ThreeHundredAndNine = ClosedEnum<typeof ThreeHundredAndNine>;

export const ThreeHundredAndEight = {
  AvgIsInitialQuestionAnswer: "avg_isInitialQuestionAnswer",
} as const;
export type ThreeHundredAndEight = ClosedEnum<typeof ThreeHundredAndEight>;

export const ThreeHundredAndSeven = {
  CountIsInitialQuestionAnswer: "count_isInitialQuestionAnswer",
} as const;
export type ThreeHundredAndSeven = ClosedEnum<typeof ThreeHundredAndSeven>;

export const ThreeHundredAndSix = {
  SumIsInitialQuestionAnswer: "sum_isInitialQuestionAnswer",
} as const;
export type ThreeHundredAndSix = ClosedEnum<typeof ThreeHundredAndSix>;

export const ThreeHundredAndFive = {
  MaxAreAIAnnotationsVerified: "max_areAIAnnotationsVerified",
} as const;
export type ThreeHundredAndFive = ClosedEnum<typeof ThreeHundredAndFive>;

export const ThreeHundredAndFour = {
  MinAreAIAnnotationsVerified: "min_areAIAnnotationsVerified",
} as const;
export type ThreeHundredAndFour = ClosedEnum<typeof ThreeHundredAndFour>;

export const ThreeHundredAndThree = {
  AvgAreAIAnnotationsVerified: "avg_areAIAnnotationsVerified",
} as const;
export type ThreeHundredAndThree = ClosedEnum<typeof ThreeHundredAndThree>;

export const ThreeHundredAndTwo = {
  CountAreAIAnnotationsVerified: "count_areAIAnnotationsVerified",
} as const;
export type ThreeHundredAndTwo = ClosedEnum<typeof ThreeHundredAndTwo>;

export const ThreeHundredAndOne = {
  SumAreAIAnnotationsVerified: "sum_areAIAnnotationsVerified",
} as const;
export type ThreeHundredAndOne = ClosedEnum<typeof ThreeHundredAndOne>;

export const ThreeHundred = {
  MaxConversationIds: "max_conversationIds",
} as const;
export type ThreeHundred = ClosedEnum<typeof ThreeHundred>;

export const TwoHundredAndNinetyNine = {
  MinConversationIds: "min_conversationIds",
} as const;
export type TwoHundredAndNinetyNine = ClosedEnum<
  typeof TwoHundredAndNinetyNine
>;

export const TwoHundredAndNinetyEight = {
  AvgConversationIds: "avg_conversationIds",
} as const;
export type TwoHundredAndNinetyEight = ClosedEnum<
  typeof TwoHundredAndNinetyEight
>;

export const TwoHundredAndNinetySeven = {
  CountConversationIds: "count_conversationIds",
} as const;
export type TwoHundredAndNinetySeven = ClosedEnum<
  typeof TwoHundredAndNinetySeven
>;

export const TwoHundredAndNinetySix = {
  SumConversationIds: "sum_conversationIds",
} as const;
export type TwoHundredAndNinetySix = ClosedEnum<typeof TwoHundredAndNinetySix>;

export const TwoHundredAndNinetyFive = {
  MaxHasNegativeFeedback: "max_hasNegativeFeedback",
} as const;
export type TwoHundredAndNinetyFive = ClosedEnum<
  typeof TwoHundredAndNinetyFive
>;

export const TwoHundredAndNinetyFour = {
  MinHasNegativeFeedback: "min_hasNegativeFeedback",
} as const;
export type TwoHundredAndNinetyFour = ClosedEnum<
  typeof TwoHundredAndNinetyFour
>;

export const TwoHundredAndNinetyThree = {
  AvgHasNegativeFeedback: "avg_hasNegativeFeedback",
} as const;
export type TwoHundredAndNinetyThree = ClosedEnum<
  typeof TwoHundredAndNinetyThree
>;

export const TwoHundredAndNinetyTwo = {
  CountHasNegativeFeedback: "count_hasNegativeFeedback",
} as const;
export type TwoHundredAndNinetyTwo = ClosedEnum<typeof TwoHundredAndNinetyTwo>;

export const TwoHundredAndNinetyOne = {
  SumHasNegativeFeedback: "sum_hasNegativeFeedback",
} as const;
export type TwoHundredAndNinetyOne = ClosedEnum<typeof TwoHundredAndNinetyOne>;

export const TwoHundredAndNinety = {
  MaxHasPositiveFeedback: "max_hasPositiveFeedback",
} as const;
export type TwoHundredAndNinety = ClosedEnum<typeof TwoHundredAndNinety>;

export const TwoHundredAndEightyNine = {
  MinHasPositiveFeedback: "min_hasPositiveFeedback",
} as const;
export type TwoHundredAndEightyNine = ClosedEnum<
  typeof TwoHundredAndEightyNine
>;

export const TwoHundredAndEightyEight = {
  AvgHasPositiveFeedback: "avg_hasPositiveFeedback",
} as const;
export type TwoHundredAndEightyEight = ClosedEnum<
  typeof TwoHundredAndEightyEight
>;

export const TwoHundredAndEightySeven = {
  CountHasPositiveFeedback: "count_hasPositiveFeedback",
} as const;
export type TwoHundredAndEightySeven = ClosedEnum<
  typeof TwoHundredAndEightySeven
>;

export const TwoHundredAndEightySix = {
  SumHasPositiveFeedback: "sum_hasPositiveFeedback",
} as const;
export type TwoHundredAndEightySix = ClosedEnum<typeof TwoHundredAndEightySix>;

export const TwoHundredAndEightyFive = {
  MaxLastUpdated: "max_lastUpdated",
} as const;
export type TwoHundredAndEightyFive = ClosedEnum<
  typeof TwoHundredAndEightyFive
>;

export const TwoHundredAndEightyFour = {
  MinLastUpdated: "min_lastUpdated",
} as const;
export type TwoHundredAndEightyFour = ClosedEnum<
  typeof TwoHundredAndEightyFour
>;

export const TwoHundredAndEightyThree = {
  AvgLastUpdated: "avg_lastUpdated",
} as const;
export type TwoHundredAndEightyThree = ClosedEnum<
  typeof TwoHundredAndEightyThree
>;

export const TwoHundredAndEightyTwo = {
  CountLastUpdated: "count_lastUpdated",
} as const;
export type TwoHundredAndEightyTwo = ClosedEnum<typeof TwoHundredAndEightyTwo>;

export const TwoHundredAndEightyOne = {
  SumLastUpdated: "sum_lastUpdated",
} as const;
export type TwoHundredAndEightyOne = ClosedEnum<typeof TwoHundredAndEightyOne>;

export const TwoHundredAndEighty = {
  MaxLastMessageTime: "max_lastMessageTime",
} as const;
export type TwoHundredAndEighty = ClosedEnum<typeof TwoHundredAndEighty>;

export const TwoHundredAndSeventyNine = {
  MinLastMessageTime: "min_lastMessageTime",
} as const;
export type TwoHundredAndSeventyNine = ClosedEnum<
  typeof TwoHundredAndSeventyNine
>;

export const TwoHundredAndSeventyEight = {
  AvgLastMessageTime: "avg_lastMessageTime",
} as const;
export type TwoHundredAndSeventyEight = ClosedEnum<
  typeof TwoHundredAndSeventyEight
>;

export const TwoHundredAndSeventySeven = {
  CountLastMessageTime: "count_lastMessageTime",
} as const;
export type TwoHundredAndSeventySeven = ClosedEnum<
  typeof TwoHundredAndSeventySeven
>;

export const TwoHundredAndSeventySix = {
  SumLastMessageTime: "sum_lastMessageTime",
} as const;
export type TwoHundredAndSeventySix = ClosedEnum<
  typeof TwoHundredAndSeventySix
>;

export const TwoHundredAndSeventyFive = {
  MaxFirstMessageTime: "max_firstMessageTime",
} as const;
export type TwoHundredAndSeventyFive = ClosedEnum<
  typeof TwoHundredAndSeventyFive
>;

export const TwoHundredAndSeventyFour = {
  MinFirstMessageTime: "min_firstMessageTime",
} as const;
export type TwoHundredAndSeventyFour = ClosedEnum<
  typeof TwoHundredAndSeventyFour
>;

export const TwoHundredAndSeventyThree = {
  AvgFirstMessageTime: "avg_firstMessageTime",
} as const;
export type TwoHundredAndSeventyThree = ClosedEnum<
  typeof TwoHundredAndSeventyThree
>;

export const TwoHundredAndSeventyTwo = {
  CountFirstMessageTime: "count_firstMessageTime",
} as const;
export type TwoHundredAndSeventyTwo = ClosedEnum<
  typeof TwoHundredAndSeventyTwo
>;

export const TwoHundredAndSeventyOne = {
  SumFirstMessageTime: "sum_firstMessageTime",
} as const;
export type TwoHundredAndSeventyOne = ClosedEnum<
  typeof TwoHundredAndSeventyOne
>;

export const TwoHundredAndSeventy = {
  MaxIntegrationId: "max_integrationId",
} as const;
export type TwoHundredAndSeventy = ClosedEnum<typeof TwoHundredAndSeventy>;

export const TwoHundredAndSixtyNine = {
  MinIntegrationId: "min_integrationId",
} as const;
export type TwoHundredAndSixtyNine = ClosedEnum<typeof TwoHundredAndSixtyNine>;

export const TwoHundredAndSixtyEight = {
  AvgIntegrationId: "avg_integrationId",
} as const;
export type TwoHundredAndSixtyEight = ClosedEnum<
  typeof TwoHundredAndSixtyEight
>;

export const TwoHundredAndSixtySeven = {
  CountIntegrationId: "count_integrationId",
} as const;
export type TwoHundredAndSixtySeven = ClosedEnum<
  typeof TwoHundredAndSixtySeven
>;

export const TwoHundredAndSixtySix = {
  SumIntegrationId: "sum_integrationId",
} as const;
export type TwoHundredAndSixtySix = ClosedEnum<typeof TwoHundredAndSixtySix>;

export const TwoHundredAndSixtyFive = {
  MaxProjectId: "max_projectId",
} as const;
export type TwoHundredAndSixtyFive = ClosedEnum<typeof TwoHundredAndSixtyFive>;

export const TwoHundredAndSixtyFour = {
  MinProjectId: "min_projectId",
} as const;
export type TwoHundredAndSixtyFour = ClosedEnum<typeof TwoHundredAndSixtyFour>;

export const TwoHundredAndSixtyThree = {
  AvgProjectId: "avg_projectId",
} as const;
export type TwoHundredAndSixtyThree = ClosedEnum<
  typeof TwoHundredAndSixtyThree
>;

export const TwoHundredAndSixtyTwo = {
  CountProjectId: "count_projectId",
} as const;
export type TwoHundredAndSixtyTwo = ClosedEnum<typeof TwoHundredAndSixtyTwo>;

export const TwoHundredAndSixtyOne = {
  SumProjectId: "sum_projectId",
} as const;
export type TwoHundredAndSixtyOne = ClosedEnum<typeof TwoHundredAndSixtyOne>;

export const TwoHundredAndSixty = {
  MaxQuestionType: "max_questionType",
} as const;
export type TwoHundredAndSixty = ClosedEnum<typeof TwoHundredAndSixty>;

export const TwoHundredAndFiftyNine = {
  MinQuestionType: "min_questionType",
} as const;
export type TwoHundredAndFiftyNine = ClosedEnum<typeof TwoHundredAndFiftyNine>;

export const TwoHundredAndFiftyEight = {
  AvgQuestionType: "avg_questionType",
} as const;
export type TwoHundredAndFiftyEight = ClosedEnum<
  typeof TwoHundredAndFiftyEight
>;

export const TwoHundredAndFiftySeven = {
  CountQuestionType: "count_questionType",
} as const;
export type TwoHundredAndFiftySeven = ClosedEnum<
  typeof TwoHundredAndFiftySeven
>;

export const TwoHundredAndFiftySix = {
  SumQuestionType: "sum_questionType",
} as const;
export type TwoHundredAndFiftySix = ClosedEnum<typeof TwoHundredAndFiftySix>;

export const TwoHundredAndFiftyFive = {
  MaxSentiment: "max_sentiment",
} as const;
export type TwoHundredAndFiftyFive = ClosedEnum<typeof TwoHundredAndFiftyFive>;

export const TwoHundredAndFiftyFour = {
  MinSentiment: "min_sentiment",
} as const;
export type TwoHundredAndFiftyFour = ClosedEnum<typeof TwoHundredAndFiftyFour>;

export const TwoHundredAndFiftyThree = {
  AvgSentiment: "avg_sentiment",
} as const;
export type TwoHundredAndFiftyThree = ClosedEnum<
  typeof TwoHundredAndFiftyThree
>;

export const TwoHundredAndFiftyTwo = {
  CountSentiment: "count_sentiment",
} as const;
export type TwoHundredAndFiftyTwo = ClosedEnum<typeof TwoHundredAndFiftyTwo>;

export const TwoHundredAndFiftyOne = {
  SumSentiment: "sum_sentiment",
} as const;
export type TwoHundredAndFiftyOne = ClosedEnum<typeof TwoHundredAndFiftyOne>;

export const TwoHundredAndFifty = {
  MaxEmotion: "max_emotion",
} as const;
export type TwoHundredAndFifty = ClosedEnum<typeof TwoHundredAndFifty>;

export const TwoHundredAndFortyNine = {
  MinEmotion: "min_emotion",
} as const;
export type TwoHundredAndFortyNine = ClosedEnum<typeof TwoHundredAndFortyNine>;

export const TwoHundredAndFortyEight = {
  AvgEmotion: "avg_emotion",
} as const;
export type TwoHundredAndFortyEight = ClosedEnum<
  typeof TwoHundredAndFortyEight
>;

export const TwoHundredAndFortySeven = {
  CountEmotion: "count_emotion",
} as const;
export type TwoHundredAndFortySeven = ClosedEnum<
  typeof TwoHundredAndFortySeven
>;

export const TwoHundredAndFortySix = {
  SumEmotion: "sum_emotion",
} as const;
export type TwoHundredAndFortySix = ClosedEnum<typeof TwoHundredAndFortySix>;

export const TwoHundredAndFortyFive = {
  MaxThirdPartyEntities: "max_thirdPartyEntities",
} as const;
export type TwoHundredAndFortyFive = ClosedEnum<typeof TwoHundredAndFortyFive>;

export const TwoHundredAndFortyFour = {
  MinThirdPartyEntities: "min_thirdPartyEntities",
} as const;
export type TwoHundredAndFortyFour = ClosedEnum<typeof TwoHundredAndFortyFour>;

export const TwoHundredAndFortyThree = {
  AvgThirdPartyEntities: "avg_thirdPartyEntities",
} as const;
export type TwoHundredAndFortyThree = ClosedEnum<
  typeof TwoHundredAndFortyThree
>;

export const TwoHundredAndFortyTwo = {
  CountThirdPartyEntities: "count_thirdPartyEntities",
} as const;
export type TwoHundredAndFortyTwo = ClosedEnum<typeof TwoHundredAndFortyTwo>;

export const TwoHundredAndFortyOne = {
  SumThirdPartyEntities: "sum_thirdPartyEntities",
} as const;
export type TwoHundredAndFortyOne = ClosedEnum<typeof TwoHundredAndFortyOne>;

export const TwoHundredAndForty = {
  MaxFirstPartyEntities: "max_firstPartyEntities",
} as const;
export type TwoHundredAndForty = ClosedEnum<typeof TwoHundredAndForty>;

export const TwoHundredAndThirtyNine = {
  MinFirstPartyEntities: "min_firstPartyEntities",
} as const;
export type TwoHundredAndThirtyNine = ClosedEnum<
  typeof TwoHundredAndThirtyNine
>;

export const TwoHundredAndThirtyEight = {
  AvgFirstPartyEntities: "avg_firstPartyEntities",
} as const;
export type TwoHundredAndThirtyEight = ClosedEnum<
  typeof TwoHundredAndThirtyEight
>;

export const TwoHundredAndThirtySeven = {
  CountFirstPartyEntities: "count_firstPartyEntities",
} as const;
export type TwoHundredAndThirtySeven = ClosedEnum<
  typeof TwoHundredAndThirtySeven
>;

export const TwoHundredAndThirtySix = {
  SumFirstPartyEntities: "sum_firstPartyEntities",
} as const;
export type TwoHundredAndThirtySix = ClosedEnum<typeof TwoHundredAndThirtySix>;

export const TwoHundredAndThirtyFive = {
  MaxLanguages: "max_languages",
} as const;
export type TwoHundredAndThirtyFive = ClosedEnum<
  typeof TwoHundredAndThirtyFive
>;

export const TwoHundredAndThirtyFour = {
  MinLanguages: "min_languages",
} as const;
export type TwoHundredAndThirtyFour = ClosedEnum<
  typeof TwoHundredAndThirtyFour
>;

export const TwoHundredAndThirtyThree = {
  AvgLanguages: "avg_languages",
} as const;
export type TwoHundredAndThirtyThree = ClosedEnum<
  typeof TwoHundredAndThirtyThree
>;

export const TwoHundredAndThirtyTwo = {
  CountLanguages: "count_languages",
} as const;
export type TwoHundredAndThirtyTwo = ClosedEnum<typeof TwoHundredAndThirtyTwo>;

export const TwoHundredAndThirtyOne = {
  SumLanguages: "sum_languages",
} as const;
export type TwoHundredAndThirtyOne = ClosedEnum<typeof TwoHundredAndThirtyOne>;

export const TwoHundredAndThirty = {
  MaxCategory: "max_category",
} as const;
export type TwoHundredAndThirty = ClosedEnum<typeof TwoHundredAndThirty>;

export const TwoHundredAndTwentyNine = {
  MinCategory: "min_category",
} as const;
export type TwoHundredAndTwentyNine = ClosedEnum<
  typeof TwoHundredAndTwentyNine
>;

export const TwoHundredAndTwentyEight = {
  AvgCategory: "avg_category",
} as const;
export type TwoHundredAndTwentyEight = ClosedEnum<
  typeof TwoHundredAndTwentyEight
>;

export const TwoHundredAndTwentySeven = {
  CountCategory: "count_category",
} as const;
export type TwoHundredAndTwentySeven = ClosedEnum<
  typeof TwoHundredAndTwentySeven
>;

export const TwoHundredAndTwentySix = {
  SumCategory: "sum_category",
} as const;
export type TwoHundredAndTwentySix = ClosedEnum<typeof TwoHundredAndTwentySix>;

export const TwoHundredAndTwentyFive = {
  MaxSubject: "max_subject",
} as const;
export type TwoHundredAndTwentyFive = ClosedEnum<
  typeof TwoHundredAndTwentyFive
>;

export const TwoHundredAndTwentyFour = {
  MinSubject: "min_subject",
} as const;
export type TwoHundredAndTwentyFour = ClosedEnum<
  typeof TwoHundredAndTwentyFour
>;

export const TwoHundredAndTwentyThree = {
  AvgSubject: "avg_subject",
} as const;
export type TwoHundredAndTwentyThree = ClosedEnum<
  typeof TwoHundredAndTwentyThree
>;

export const TwoHundredAndTwentyTwo = {
  CountSubject: "count_subject",
} as const;
export type TwoHundredAndTwentyTwo = ClosedEnum<typeof TwoHundredAndTwentyTwo>;

export const TwoHundredAndTwentyOne = {
  SumSubject: "sum_subject",
} as const;
export type TwoHundredAndTwentyOne = ClosedEnum<typeof TwoHundredAndTwentyOne>;

export const TwoHundredAndTwenty = {
  MaxGapSummary: "max_gapSummary",
} as const;
export type TwoHundredAndTwenty = ClosedEnum<typeof TwoHundredAndTwenty>;

export const TwoHundredAndNineteen = {
  MinGapSummary: "min_gapSummary",
} as const;
export type TwoHundredAndNineteen = ClosedEnum<typeof TwoHundredAndNineteen>;

export const TwoHundredAndEighteen = {
  AvgGapSummary: "avg_gapSummary",
} as const;
export type TwoHundredAndEighteen = ClosedEnum<typeof TwoHundredAndEighteen>;

export const TwoHundredAndSeventeen = {
  CountGapSummary: "count_gapSummary",
} as const;
export type TwoHundredAndSeventeen = ClosedEnum<typeof TwoHundredAndSeventeen>;

export const TwoHundredAndSixteen = {
  SumGapSummary: "sum_gapSummary",
} as const;
export type TwoHundredAndSixteen = ClosedEnum<typeof TwoHundredAndSixteen>;

export const TwoHundredAndFifteen = {
  MaxIsAnswerConfident: "max_isAnswerConfident",
} as const;
export type TwoHundredAndFifteen = ClosedEnum<typeof TwoHundredAndFifteen>;

export const TwoHundredAndFourteen = {
  MinIsAnswerConfident: "min_isAnswerConfident",
} as const;
export type TwoHundredAndFourteen = ClosedEnum<typeof TwoHundredAndFourteen>;

export const TwoHundredAndThirteen = {
  AvgIsAnswerConfident: "avg_isAnswerConfident",
} as const;
export type TwoHundredAndThirteen = ClosedEnum<typeof TwoHundredAndThirteen>;

export const TwoHundredAndTwelve = {
  CountIsAnswerConfident: "count_isAnswerConfident",
} as const;
export type TwoHundredAndTwelve = ClosedEnum<typeof TwoHundredAndTwelve>;

export const TwoHundredAndEleven = {
  SumIsAnswerConfident: "sum_isAnswerConfident",
} as const;
export type TwoHundredAndEleven = ClosedEnum<typeof TwoHundredAndEleven>;

export const TwoHundredAndTen = {
  MaxIsFeatureSupported: "max_isFeatureSupported",
} as const;
export type TwoHundredAndTen = ClosedEnum<typeof TwoHundredAndTen>;

export const TwoHundredAndNine = {
  MinIsFeatureSupported: "min_isFeatureSupported",
} as const;
export type TwoHundredAndNine = ClosedEnum<typeof TwoHundredAndNine>;

export const TwoHundredAndEight = {
  AvgIsFeatureSupported: "avg_isFeatureSupported",
} as const;
export type TwoHundredAndEight = ClosedEnum<typeof TwoHundredAndEight>;

export const TwoHundredAndSeven = {
  CountIsFeatureSupported: "count_isFeatureSupported",
} as const;
export type TwoHundredAndSeven = ClosedEnum<typeof TwoHundredAndSeven>;

export const TwoHundredAndSix = {
  SumIsFeatureSupported: "sum_isFeatureSupported",
} as const;
export type TwoHundredAndSix = ClosedEnum<typeof TwoHundredAndSix>;

export const TwoHundredAndFive = {
  MaxIsDocumented: "max_isDocumented",
} as const;
export type TwoHundredAndFive = ClosedEnum<typeof TwoHundredAndFive>;

export const TwoHundredAndFour = {
  MinIsDocumented: "min_isDocumented",
} as const;
export type TwoHundredAndFour = ClosedEnum<typeof TwoHundredAndFour>;

export const TwoHundredAndThree = {
  AvgIsDocumented: "avg_isDocumented",
} as const;
export type TwoHundredAndThree = ClosedEnum<typeof TwoHundredAndThree>;

export const TwoHundredAndTwo = {
  CountIsDocumented: "count_isDocumented",
} as const;
export type TwoHundredAndTwo = ClosedEnum<typeof TwoHundredAndTwo>;

export const TwoHundredAndOne = {
  SumIsDocumented: "sum_isDocumented",
} as const;
export type TwoHundredAndOne = ClosedEnum<typeof TwoHundredAndOne>;

export const TwoHundred = {
  MaxIsClear: "max_isClear",
} as const;
export type TwoHundred = ClosedEnum<typeof TwoHundred>;

export const OneHundredAndNinetyNine = {
  MinIsClear: "min_isClear",
} as const;
export type OneHundredAndNinetyNine = ClosedEnum<
  typeof OneHundredAndNinetyNine
>;

export const OneHundredAndNinetyEight = {
  AvgIsClear: "avg_isClear",
} as const;
export type OneHundredAndNinetyEight = ClosedEnum<
  typeof OneHundredAndNinetyEight
>;

export const OneHundredAndNinetySeven = {
  CountIsClear: "count_isClear",
} as const;
export type OneHundredAndNinetySeven = ClosedEnum<
  typeof OneHundredAndNinetySeven
>;

export const OneHundredAndNinetySix = {
  SumIsClear: "sum_isClear",
} as const;
export type OneHundredAndNinetySix = ClosedEnum<typeof OneHundredAndNinetySix>;

export const OneHundredAndNinetyFive = {
  MaxIsOnTopic: "max_isOnTopic",
} as const;
export type OneHundredAndNinetyFive = ClosedEnum<
  typeof OneHundredAndNinetyFive
>;

export const OneHundredAndNinetyFour = {
  MinIsOnTopic: "min_isOnTopic",
} as const;
export type OneHundredAndNinetyFour = ClosedEnum<
  typeof OneHundredAndNinetyFour
>;

export const OneHundredAndNinetyThree = {
  AvgIsOnTopic: "avg_isOnTopic",
} as const;
export type OneHundredAndNinetyThree = ClosedEnum<
  typeof OneHundredAndNinetyThree
>;

export const OneHundredAndNinetyTwo = {
  CountIsOnTopic: "count_isOnTopic",
} as const;
export type OneHundredAndNinetyTwo = ClosedEnum<typeof OneHundredAndNinetyTwo>;

export const OneHundredAndNinetyOne = {
  SumIsOnTopic: "sum_isOnTopic",
} as const;
export type OneHundredAndNinetyOne = ClosedEnum<typeof OneHundredAndNinetyOne>;

export const OneHundredAndNinety = {
  MaxAnswer: "max_answer",
} as const;
export type OneHundredAndNinety = ClosedEnum<typeof OneHundredAndNinety>;

export const OneHundredAndEightyNine = {
  MinAnswer: "min_answer",
} as const;
export type OneHundredAndEightyNine = ClosedEnum<
  typeof OneHundredAndEightyNine
>;

export const OneHundredAndEightyEight = {
  AvgAnswer: "avg_answer",
} as const;
export type OneHundredAndEightyEight = ClosedEnum<
  typeof OneHundredAndEightyEight
>;

export const OneHundredAndEightySeven = {
  CountAnswer: "count_answer",
} as const;
export type OneHundredAndEightySeven = ClosedEnum<
  typeof OneHundredAndEightySeven
>;

export const OneHundredAndEightySix = {
  SumAnswer: "sum_answer",
} as const;
export type OneHundredAndEightySix = ClosedEnum<typeof OneHundredAndEightySix>;

export const OneHundredAndEightyFive = {
  MaxQuestionLength: "max_questionLength",
} as const;
export type OneHundredAndEightyFive = ClosedEnum<
  typeof OneHundredAndEightyFive
>;

export const OneHundredAndEightyFour = {
  MinQuestionLength: "min_questionLength",
} as const;
export type OneHundredAndEightyFour = ClosedEnum<
  typeof OneHundredAndEightyFour
>;

export const OneHundredAndEightyThree = {
  AvgQuestionLength: "avg_questionLength",
} as const;
export type OneHundredAndEightyThree = ClosedEnum<
  typeof OneHundredAndEightyThree
>;

export const OneHundredAndEightyTwo = {
  CountQuestionLength: "count_questionLength",
} as const;
export type OneHundredAndEightyTwo = ClosedEnum<typeof OneHundredAndEightyTwo>;

export const OneHundredAndEightyOne = {
  SumQuestionLength: "sum_questionLength",
} as const;
export type OneHundredAndEightyOne = ClosedEnum<typeof OneHundredAndEightyOne>;

export const OneHundredAndEighty = {
  MaxQuestion: "max_question",
} as const;
export type OneHundredAndEighty = ClosedEnum<typeof OneHundredAndEighty>;

export const OneHundredAndSeventyNine = {
  MinQuestion: "min_question",
} as const;
export type OneHundredAndSeventyNine = ClosedEnum<
  typeof OneHundredAndSeventyNine
>;

export const OneHundredAndSeventyEight = {
  AvgQuestion: "avg_question",
} as const;
export type OneHundredAndSeventyEight = ClosedEnum<
  typeof OneHundredAndSeventyEight
>;

export const OneHundredAndSeventySeven = {
  CountQuestion: "count_question",
} as const;
export type OneHundredAndSeventySeven = ClosedEnum<
  typeof OneHundredAndSeventySeven
>;

export const OneHundredAndSeventySix = {
  SumQuestion: "sum_question",
} as const;
export type OneHundredAndSeventySix = ClosedEnum<
  typeof OneHundredAndSeventySix
>;

export const OneHundredAndSeventyFive = {
  MaxOrganizationId: "max_organizationId",
} as const;
export type OneHundredAndSeventyFive = ClosedEnum<
  typeof OneHundredAndSeventyFive
>;

export const OneHundredAndSeventyFour = {
  MinOrganizationId: "min_organizationId",
} as const;
export type OneHundredAndSeventyFour = ClosedEnum<
  typeof OneHundredAndSeventyFour
>;

export const OneHundredAndSeventyThree = {
  AvgOrganizationId: "avg_organizationId",
} as const;
export type OneHundredAndSeventyThree = ClosedEnum<
  typeof OneHundredAndSeventyThree
>;

export const OneHundredAndSeventyTwo = {
  CountOrganizationId: "count_organizationId",
} as const;
export type OneHundredAndSeventyTwo = ClosedEnum<
  typeof OneHundredAndSeventyTwo
>;

export const OneHundredAndSeventyOne = {
  SumOrganizationId: "sum_organizationId",
} as const;
export type OneHundredAndSeventyOne = ClosedEnum<
  typeof OneHundredAndSeventyOne
>;

export const OneHundredAndSeventy = {
  MaxMessagesCount: "max_messagesCount",
} as const;
export type OneHundredAndSeventy = ClosedEnum<typeof OneHundredAndSeventy>;

export const OneHundredAndSixtyNine = {
  MinMessagesCount: "min_messagesCount",
} as const;
export type OneHundredAndSixtyNine = ClosedEnum<typeof OneHundredAndSixtyNine>;

export const OneHundredAndSixtyEight = {
  AvgMessagesCount: "avg_messagesCount",
} as const;
export type OneHundredAndSixtyEight = ClosedEnum<
  typeof OneHundredAndSixtyEight
>;

export const OneHundredAndSixtySeven = {
  CountMessagesCount: "count_messagesCount",
} as const;
export type OneHundredAndSixtySeven = ClosedEnum<
  typeof OneHundredAndSixtySeven
>;

export const OneHundredAndSixtySix = {
  SumMessagesCount: "sum_messagesCount",
} as const;
export type OneHundredAndSixtySix = ClosedEnum<typeof OneHundredAndSixtySix>;

export const OneHundredAndSixtyFive = {
  MaxMessageIds: "max_messageIds",
} as const;
export type OneHundredAndSixtyFive = ClosedEnum<typeof OneHundredAndSixtyFive>;

export const OneHundredAndSixtyFour = {
  MinMessageIds: "min_messageIds",
} as const;
export type OneHundredAndSixtyFour = ClosedEnum<typeof OneHundredAndSixtyFour>;

export const OneHundredAndSixtyThree = {
  AvgMessageIds: "avg_messageIds",
} as const;
export type OneHundredAndSixtyThree = ClosedEnum<
  typeof OneHundredAndSixtyThree
>;

export const OneHundredAndSixtyTwo = {
  CountMessageIds: "count_messageIds",
} as const;
export type OneHundredAndSixtyTwo = ClosedEnum<typeof OneHundredAndSixtyTwo>;

export const OneHundredAndSixtyOne = {
  SumMessageIds: "sum_messageIds",
} as const;
export type OneHundredAndSixtyOne = ClosedEnum<typeof OneHundredAndSixtyOne>;

export const OneHundredAndSixty = {
  MaxId: "max_id",
} as const;
export type OneHundredAndSixty = ClosedEnum<typeof OneHundredAndSixty>;

export const OneHundredAndFiftyNine = {
  MinId: "min_id",
} as const;
export type OneHundredAndFiftyNine = ClosedEnum<typeof OneHundredAndFiftyNine>;

export const OneHundredAndFiftyEight = {
  AvgId: "avg_id",
} as const;
export type OneHundredAndFiftyEight = ClosedEnum<
  typeof OneHundredAndFiftyEight
>;

export const OneHundredAndFiftySeven = {
  CountId: "count_id",
} as const;
export type OneHundredAndFiftySeven = ClosedEnum<
  typeof OneHundredAndFiftySeven
>;

export const OneHundredAndFiftySix = {
  SumId: "sum_id",
} as const;
export type OneHundredAndFiftySix = ClosedEnum<typeof OneHundredAndFiftySix>;

export const OneHundredAndFiftyFive = {
  IsInitialQuestionAnswerMonth: "isInitialQuestionAnswer_month",
} as const;
export type OneHundredAndFiftyFive = ClosedEnum<typeof OneHundredAndFiftyFive>;

export const OneHundredAndFiftyFour = {
  IsInitialQuestionAnswerWeek: "isInitialQuestionAnswer_week",
} as const;
export type OneHundredAndFiftyFour = ClosedEnum<typeof OneHundredAndFiftyFour>;

export const OneHundredAndFiftyThree = {
  IsInitialQuestionAnswerDay: "isInitialQuestionAnswer_day",
} as const;
export type OneHundredAndFiftyThree = ClosedEnum<
  typeof OneHundredAndFiftyThree
>;

export const OneHundredAndFiftyTwo = {
  IsInitialQuestionAnswerHour: "isInitialQuestionAnswer_hour",
} as const;
export type OneHundredAndFiftyTwo = ClosedEnum<typeof OneHundredAndFiftyTwo>;

export const OneHundredAndFiftyOne = {
  AreAIAnnotationsVerifiedMonth: "areAIAnnotationsVerified_month",
} as const;
export type OneHundredAndFiftyOne = ClosedEnum<typeof OneHundredAndFiftyOne>;

export const OneHundredAndFifty = {
  AreAIAnnotationsVerifiedWeek: "areAIAnnotationsVerified_week",
} as const;
export type OneHundredAndFifty = ClosedEnum<typeof OneHundredAndFifty>;

export const OneHundredAndFortyNine = {
  AreAIAnnotationsVerifiedDay: "areAIAnnotationsVerified_day",
} as const;
export type OneHundredAndFortyNine = ClosedEnum<typeof OneHundredAndFortyNine>;

export const OneHundredAndFortyEight = {
  AreAIAnnotationsVerifiedHour: "areAIAnnotationsVerified_hour",
} as const;
export type OneHundredAndFortyEight = ClosedEnum<
  typeof OneHundredAndFortyEight
>;

export const OneHundredAndFortySeven = {
  ConversationIdsMonth: "conversationIds_month",
} as const;
export type OneHundredAndFortySeven = ClosedEnum<
  typeof OneHundredAndFortySeven
>;

export const OneHundredAndFortySix = {
  ConversationIdsWeek: "conversationIds_week",
} as const;
export type OneHundredAndFortySix = ClosedEnum<typeof OneHundredAndFortySix>;

export const OneHundredAndFortyFive = {
  ConversationIdsDay: "conversationIds_day",
} as const;
export type OneHundredAndFortyFive = ClosedEnum<typeof OneHundredAndFortyFive>;

export const OneHundredAndFortyFour = {
  ConversationIdsHour: "conversationIds_hour",
} as const;
export type OneHundredAndFortyFour = ClosedEnum<typeof OneHundredAndFortyFour>;

export const OneHundredAndFortyThree = {
  HasNegativeFeedbackMonth: "hasNegativeFeedback_month",
} as const;
export type OneHundredAndFortyThree = ClosedEnum<
  typeof OneHundredAndFortyThree
>;

export const OneHundredAndFortyTwo = {
  HasNegativeFeedbackWeek: "hasNegativeFeedback_week",
} as const;
export type OneHundredAndFortyTwo = ClosedEnum<typeof OneHundredAndFortyTwo>;

export const OneHundredAndFortyOne = {
  HasNegativeFeedbackDay: "hasNegativeFeedback_day",
} as const;
export type OneHundredAndFortyOne = ClosedEnum<typeof OneHundredAndFortyOne>;

export const OneHundredAndForty = {
  HasNegativeFeedbackHour: "hasNegativeFeedback_hour",
} as const;
export type OneHundredAndForty = ClosedEnum<typeof OneHundredAndForty>;

export const OneHundredAndThirtyNine = {
  HasPositiveFeedbackMonth: "hasPositiveFeedback_month",
} as const;
export type OneHundredAndThirtyNine = ClosedEnum<
  typeof OneHundredAndThirtyNine
>;

export const OneHundredAndThirtyEight = {
  HasPositiveFeedbackWeek: "hasPositiveFeedback_week",
} as const;
export type OneHundredAndThirtyEight = ClosedEnum<
  typeof OneHundredAndThirtyEight
>;

export const OneHundredAndThirtySeven = {
  HasPositiveFeedbackDay: "hasPositiveFeedback_day",
} as const;
export type OneHundredAndThirtySeven = ClosedEnum<
  typeof OneHundredAndThirtySeven
>;

export const OneHundredAndThirtySix = {
  HasPositiveFeedbackHour: "hasPositiveFeedback_hour",
} as const;
export type OneHundredAndThirtySix = ClosedEnum<typeof OneHundredAndThirtySix>;

export const OneHundredAndThirtyFive = {
  LastUpdatedMonth: "lastUpdated_month",
} as const;
export type OneHundredAndThirtyFive = ClosedEnum<
  typeof OneHundredAndThirtyFive
>;

export const OneHundredAndThirtyFour = {
  LastUpdatedWeek: "lastUpdated_week",
} as const;
export type OneHundredAndThirtyFour = ClosedEnum<
  typeof OneHundredAndThirtyFour
>;

export const OneHundredAndThirtyThree = {
  LastUpdatedDay: "lastUpdated_day",
} as const;
export type OneHundredAndThirtyThree = ClosedEnum<
  typeof OneHundredAndThirtyThree
>;

export const OneHundredAndThirtyTwo = {
  LastUpdatedHour: "lastUpdated_hour",
} as const;
export type OneHundredAndThirtyTwo = ClosedEnum<typeof OneHundredAndThirtyTwo>;

export const OneHundredAndThirtyOne = {
  LastMessageTimeMonth: "lastMessageTime_month",
} as const;
export type OneHundredAndThirtyOne = ClosedEnum<typeof OneHundredAndThirtyOne>;

export const OneHundredAndThirty = {
  LastMessageTimeWeek: "lastMessageTime_week",
} as const;
export type OneHundredAndThirty = ClosedEnum<typeof OneHundredAndThirty>;

export const OneHundredAndTwentyNine = {
  LastMessageTimeDay: "lastMessageTime_day",
} as const;
export type OneHundredAndTwentyNine = ClosedEnum<
  typeof OneHundredAndTwentyNine
>;

export const OneHundredAndTwentyEight = {
  LastMessageTimeHour: "lastMessageTime_hour",
} as const;
export type OneHundredAndTwentyEight = ClosedEnum<
  typeof OneHundredAndTwentyEight
>;

export const OneHundredAndTwentySeven = {
  FirstMessageTimeMonth: "firstMessageTime_month",
} as const;
export type OneHundredAndTwentySeven = ClosedEnum<
  typeof OneHundredAndTwentySeven
>;

export const OneHundredAndTwentySix = {
  FirstMessageTimeWeek: "firstMessageTime_week",
} as const;
export type OneHundredAndTwentySix = ClosedEnum<typeof OneHundredAndTwentySix>;

export const OneHundredAndTwentyFive = {
  FirstMessageTimeDay: "firstMessageTime_day",
} as const;
export type OneHundredAndTwentyFive = ClosedEnum<
  typeof OneHundredAndTwentyFive
>;

export const OneHundredAndTwentyFour = {
  FirstMessageTimeHour: "firstMessageTime_hour",
} as const;
export type OneHundredAndTwentyFour = ClosedEnum<
  typeof OneHundredAndTwentyFour
>;

export const OneHundredAndTwentyThree = {
  IntegrationIdMonth: "integrationId_month",
} as const;
export type OneHundredAndTwentyThree = ClosedEnum<
  typeof OneHundredAndTwentyThree
>;

export const OneHundredAndTwentyTwo = {
  IntegrationIdWeek: "integrationId_week",
} as const;
export type OneHundredAndTwentyTwo = ClosedEnum<typeof OneHundredAndTwentyTwo>;

export const OneHundredAndTwentyOne = {
  IntegrationIdDay: "integrationId_day",
} as const;
export type OneHundredAndTwentyOne = ClosedEnum<typeof OneHundredAndTwentyOne>;

export const OneHundredAndTwenty = {
  IntegrationIdHour: "integrationId_hour",
} as const;
export type OneHundredAndTwenty = ClosedEnum<typeof OneHundredAndTwenty>;

export const OneHundredAndNineteen = {
  ProjectIdMonth: "projectId_month",
} as const;
export type OneHundredAndNineteen = ClosedEnum<typeof OneHundredAndNineteen>;

export const OneHundredAndEighteen = {
  ProjectIdWeek: "projectId_week",
} as const;
export type OneHundredAndEighteen = ClosedEnum<typeof OneHundredAndEighteen>;

export const OneHundredAndSeventeen = {
  ProjectIdDay: "projectId_day",
} as const;
export type OneHundredAndSeventeen = ClosedEnum<typeof OneHundredAndSeventeen>;

export const OneHundredAndSixteen = {
  ProjectIdHour: "projectId_hour",
} as const;
export type OneHundredAndSixteen = ClosedEnum<typeof OneHundredAndSixteen>;

export const OneHundredAndFifteen = {
  QuestionTypeMonth: "questionType_month",
} as const;
export type OneHundredAndFifteen = ClosedEnum<typeof OneHundredAndFifteen>;

export const OneHundredAndFourteen = {
  QuestionTypeWeek: "questionType_week",
} as const;
export type OneHundredAndFourteen = ClosedEnum<typeof OneHundredAndFourteen>;

export const OneHundredAndThirteen = {
  QuestionTypeDay: "questionType_day",
} as const;
export type OneHundredAndThirteen = ClosedEnum<typeof OneHundredAndThirteen>;

export const OneHundredAndTwelve = {
  QuestionTypeHour: "questionType_hour",
} as const;
export type OneHundredAndTwelve = ClosedEnum<typeof OneHundredAndTwelve>;

export const OneHundredAndEleven = {
  SentimentMonth: "sentiment_month",
} as const;
export type OneHundredAndEleven = ClosedEnum<typeof OneHundredAndEleven>;

export const OneHundredAndTen = {
  SentimentWeek: "sentiment_week",
} as const;
export type OneHundredAndTen = ClosedEnum<typeof OneHundredAndTen>;

export const OneHundredAndNine = {
  SentimentDay: "sentiment_day",
} as const;
export type OneHundredAndNine = ClosedEnum<typeof OneHundredAndNine>;

export const OneHundredAndEight = {
  SentimentHour: "sentiment_hour",
} as const;
export type OneHundredAndEight = ClosedEnum<typeof OneHundredAndEight>;

export const OneHundredAndSeven = {
  EmotionMonth: "emotion_month",
} as const;
export type OneHundredAndSeven = ClosedEnum<typeof OneHundredAndSeven>;

export const OneHundredAndSix = {
  EmotionWeek: "emotion_week",
} as const;
export type OneHundredAndSix = ClosedEnum<typeof OneHundredAndSix>;

export const OneHundredAndFive = {
  EmotionDay: "emotion_day",
} as const;
export type OneHundredAndFive = ClosedEnum<typeof OneHundredAndFive>;

export const OneHundredAndFour = {
  EmotionHour: "emotion_hour",
} as const;
export type OneHundredAndFour = ClosedEnum<typeof OneHundredAndFour>;

export const OneHundredAndThree = {
  ThirdPartyEntitiesMonth: "thirdPartyEntities_month",
} as const;
export type OneHundredAndThree = ClosedEnum<typeof OneHundredAndThree>;

export const OneHundredAndTwo = {
  ThirdPartyEntitiesWeek: "thirdPartyEntities_week",
} as const;
export type OneHundredAndTwo = ClosedEnum<typeof OneHundredAndTwo>;

export const OneHundredAndOne = {
  ThirdPartyEntitiesDay: "thirdPartyEntities_day",
} as const;
export type OneHundredAndOne = ClosedEnum<typeof OneHundredAndOne>;

export const OneHundred = {
  ThirdPartyEntitiesHour: "thirdPartyEntities_hour",
} as const;
export type OneHundred = ClosedEnum<typeof OneHundred>;

export const NinetyNine = {
  FirstPartyEntitiesMonth: "firstPartyEntities_month",
} as const;
export type NinetyNine = ClosedEnum<typeof NinetyNine>;

export const NinetyEight = {
  FirstPartyEntitiesWeek: "firstPartyEntities_week",
} as const;
export type NinetyEight = ClosedEnum<typeof NinetyEight>;

export const NinetySeven = {
  FirstPartyEntitiesDay: "firstPartyEntities_day",
} as const;
export type NinetySeven = ClosedEnum<typeof NinetySeven>;

export const NinetySix = {
  FirstPartyEntitiesHour: "firstPartyEntities_hour",
} as const;
export type NinetySix = ClosedEnum<typeof NinetySix>;

export const NinetyFive = {
  LanguagesMonth: "languages_month",
} as const;
export type NinetyFive = ClosedEnum<typeof NinetyFive>;

export const NinetyFour = {
  LanguagesWeek: "languages_week",
} as const;
export type NinetyFour = ClosedEnum<typeof NinetyFour>;

export const NinetyThree = {
  LanguagesDay: "languages_day",
} as const;
export type NinetyThree = ClosedEnum<typeof NinetyThree>;

export const NinetyTwo = {
  LanguagesHour: "languages_hour",
} as const;
export type NinetyTwo = ClosedEnum<typeof NinetyTwo>;

export const NinetyOne = {
  CategoryMonth: "category_month",
} as const;
export type NinetyOne = ClosedEnum<typeof NinetyOne>;

export const Ninety = {
  CategoryWeek: "category_week",
} as const;
export type Ninety = ClosedEnum<typeof Ninety>;

export const EightyNine = {
  CategoryDay: "category_day",
} as const;
export type EightyNine = ClosedEnum<typeof EightyNine>;

export const EightyEight = {
  CategoryHour: "category_hour",
} as const;
export type EightyEight = ClosedEnum<typeof EightyEight>;

export const EightySeven = {
  SubjectMonth: "subject_month",
} as const;
export type EightySeven = ClosedEnum<typeof EightySeven>;

export const EightySix = {
  SubjectWeek: "subject_week",
} as const;
export type EightySix = ClosedEnum<typeof EightySix>;

export const EightyFive = {
  SubjectDay: "subject_day",
} as const;
export type EightyFive = ClosedEnum<typeof EightyFive>;

export const EightyFour = {
  SubjectHour: "subject_hour",
} as const;
export type EightyFour = ClosedEnum<typeof EightyFour>;

export const EightyThree = {
  GapSummaryMonth: "gapSummary_month",
} as const;
export type EightyThree = ClosedEnum<typeof EightyThree>;

export const EightyTwo = {
  GapSummaryWeek: "gapSummary_week",
} as const;
export type EightyTwo = ClosedEnum<typeof EightyTwo>;

export const EightyOne = {
  GapSummaryDay: "gapSummary_day",
} as const;
export type EightyOne = ClosedEnum<typeof EightyOne>;

export const Eighty = {
  GapSummaryHour: "gapSummary_hour",
} as const;
export type Eighty = ClosedEnum<typeof Eighty>;

export const SeventyNine = {
  IsAnswerConfidentMonth: "isAnswerConfident_month",
} as const;
export type SeventyNine = ClosedEnum<typeof SeventyNine>;

export const SeventyEight = {
  IsAnswerConfidentWeek: "isAnswerConfident_week",
} as const;
export type SeventyEight = ClosedEnum<typeof SeventyEight>;

export const SeventySeven = {
  IsAnswerConfidentDay: "isAnswerConfident_day",
} as const;
export type SeventySeven = ClosedEnum<typeof SeventySeven>;

export const SeventySix = {
  IsAnswerConfidentHour: "isAnswerConfident_hour",
} as const;
export type SeventySix = ClosedEnum<typeof SeventySix>;

export const SeventyFive = {
  IsFeatureSupportedMonth: "isFeatureSupported_month",
} as const;
export type SeventyFive = ClosedEnum<typeof SeventyFive>;

export const SeventyFour = {
  IsFeatureSupportedWeek: "isFeatureSupported_week",
} as const;
export type SeventyFour = ClosedEnum<typeof SeventyFour>;

export const SeventyThree = {
  IsFeatureSupportedDay: "isFeatureSupported_day",
} as const;
export type SeventyThree = ClosedEnum<typeof SeventyThree>;

export const SeventyTwo = {
  IsFeatureSupportedHour: "isFeatureSupported_hour",
} as const;
export type SeventyTwo = ClosedEnum<typeof SeventyTwo>;

export const SeventyOne = {
  IsDocumentedMonth: "isDocumented_month",
} as const;
export type SeventyOne = ClosedEnum<typeof SeventyOne>;

export const Field70 = {
  IsDocumentedWeek: "isDocumented_week",
} as const;
export type Field70 = ClosedEnum<typeof Field70>;

export const Field69 = {
  IsDocumentedDay: "isDocumented_day",
} as const;
export type Field69 = ClosedEnum<typeof Field69>;

export const Field68 = {
  IsDocumentedHour: "isDocumented_hour",
} as const;
export type Field68 = ClosedEnum<typeof Field68>;

export const Field67 = {
  IsClearMonth: "isClear_month",
} as const;
export type Field67 = ClosedEnum<typeof Field67>;

export const Field66 = {
  IsClearWeek: "isClear_week",
} as const;
export type Field66 = ClosedEnum<typeof Field66>;

export const Field65 = {
  IsClearDay: "isClear_day",
} as const;
export type Field65 = ClosedEnum<typeof Field65>;

export const Field64 = {
  IsClearHour: "isClear_hour",
} as const;
export type Field64 = ClosedEnum<typeof Field64>;

export const Field63 = {
  IsOnTopicMonth: "isOnTopic_month",
} as const;
export type Field63 = ClosedEnum<typeof Field63>;

export const Field62 = {
  IsOnTopicWeek: "isOnTopic_week",
} as const;
export type Field62 = ClosedEnum<typeof Field62>;

export const Field61 = {
  IsOnTopicDay: "isOnTopic_day",
} as const;
export type Field61 = ClosedEnum<typeof Field61>;

export const Field60 = {
  IsOnTopicHour: "isOnTopic_hour",
} as const;
export type Field60 = ClosedEnum<typeof Field60>;

export const Field59 = {
  AnswerMonth: "answer_month",
} as const;
export type Field59 = ClosedEnum<typeof Field59>;

export const Field58 = {
  AnswerWeek: "answer_week",
} as const;
export type Field58 = ClosedEnum<typeof Field58>;

export const Field57 = {
  AnswerDay: "answer_day",
} as const;
export type Field57 = ClosedEnum<typeof Field57>;

export const Field56 = {
  AnswerHour: "answer_hour",
} as const;
export type Field56 = ClosedEnum<typeof Field56>;

export const Field55 = {
  QuestionLengthMonth: "questionLength_month",
} as const;
export type Field55 = ClosedEnum<typeof Field55>;

export const Field54 = {
  QuestionLengthWeek: "questionLength_week",
} as const;
export type Field54 = ClosedEnum<typeof Field54>;

export const Field53 = {
  QuestionLengthDay: "questionLength_day",
} as const;
export type Field53 = ClosedEnum<typeof Field53>;

export const Field52 = {
  QuestionLengthHour: "questionLength_hour",
} as const;
export type Field52 = ClosedEnum<typeof Field52>;

export const Field51 = {
  QuestionMonth: "question_month",
} as const;
export type Field51 = ClosedEnum<typeof Field51>;

export const Field50 = {
  QuestionWeek: "question_week",
} as const;
export type Field50 = ClosedEnum<typeof Field50>;

export const Field49 = {
  QuestionDay: "question_day",
} as const;
export type Field49 = ClosedEnum<typeof Field49>;

export const Field48 = {
  QuestionHour: "question_hour",
} as const;
export type Field48 = ClosedEnum<typeof Field48>;

export const Field47 = {
  OrganizationIdMonth: "organizationId_month",
} as const;
export type Field47 = ClosedEnum<typeof Field47>;

export const Field46 = {
  OrganizationIdWeek: "organizationId_week",
} as const;
export type Field46 = ClosedEnum<typeof Field46>;

export const Field45 = {
  OrganizationIdDay: "organizationId_day",
} as const;
export type Field45 = ClosedEnum<typeof Field45>;

export const Field44 = {
  OrganizationIdHour: "organizationId_hour",
} as const;
export type Field44 = ClosedEnum<typeof Field44>;

export const Field43 = {
  MessagesCountMonth: "messagesCount_month",
} as const;
export type Field43 = ClosedEnum<typeof Field43>;

export const Field42 = {
  MessagesCountWeek: "messagesCount_week",
} as const;
export type Field42 = ClosedEnum<typeof Field42>;

export const Field41 = {
  MessagesCountDay: "messagesCount_day",
} as const;
export type Field41 = ClosedEnum<typeof Field41>;

export const Field40 = {
  MessagesCountHour: "messagesCount_hour",
} as const;
export type Field40 = ClosedEnum<typeof Field40>;

export const Field39 = {
  MessageIdsMonth: "messageIds_month",
} as const;
export type Field39 = ClosedEnum<typeof Field39>;

export const Field38 = {
  MessageIdsWeek: "messageIds_week",
} as const;
export type Field38 = ClosedEnum<typeof Field38>;

export const Field37 = {
  MessageIdsDay: "messageIds_day",
} as const;
export type Field37 = ClosedEnum<typeof Field37>;

export const Field36 = {
  MessageIdsHour: "messageIds_hour",
} as const;
export type Field36 = ClosedEnum<typeof Field36>;

export const Field35 = {
  IdMonth: "id_month",
} as const;
export type Field35 = ClosedEnum<typeof Field35>;

export const Field34 = {
  IdWeek: "id_week",
} as const;
export type Field34 = ClosedEnum<typeof Field34>;

export const Field33 = {
  IdDay: "id_day",
} as const;
export type Field33 = ClosedEnum<typeof Field33>;

export const Field32 = {
  IdHour: "id_hour",
} as const;
export type Field32 = ClosedEnum<typeof Field32>;

export const QueryTableField31 = {
  IsInitialQuestionAnswer: "isInitialQuestionAnswer",
} as const;
export type QueryTableField31 = ClosedEnum<typeof QueryTableField31>;

export const QueryTableField30 = {
  AreAIAnnotationsVerified: "areAIAnnotationsVerified",
} as const;
export type QueryTableField30 = ClosedEnum<typeof QueryTableField30>;

export const QueryTableField29 = {
  ConversationIds: "conversationIds",
} as const;
export type QueryTableField29 = ClosedEnum<typeof QueryTableField29>;

export const QueryTableField28 = {
  HasNegativeFeedback: "hasNegativeFeedback",
} as const;
export type QueryTableField28 = ClosedEnum<typeof QueryTableField28>;

export const QueryTableField27 = {
  HasPositiveFeedback: "hasPositiveFeedback",
} as const;
export type QueryTableField27 = ClosedEnum<typeof QueryTableField27>;

export const QueryTableField26 = {
  LastUpdated: "lastUpdated",
} as const;
export type QueryTableField26 = ClosedEnum<typeof QueryTableField26>;

export const QueryTableField25 = {
  LastMessageTime: "lastMessageTime",
} as const;
export type QueryTableField25 = ClosedEnum<typeof QueryTableField25>;

export const QueryTableField24 = {
  FirstMessageTime: "firstMessageTime",
} as const;
export type QueryTableField24 = ClosedEnum<typeof QueryTableField24>;

export const QueryTableField23 = {
  IntegrationId: "integrationId",
} as const;
export type QueryTableField23 = ClosedEnum<typeof QueryTableField23>;

export const QueryTableField22 = {
  ProjectId: "projectId",
} as const;
export type QueryTableField22 = ClosedEnum<typeof QueryTableField22>;

export const QueryTableField21 = {
  QuestionType: "questionType",
} as const;
export type QueryTableField21 = ClosedEnum<typeof QueryTableField21>;

export const QueryTableField20 = {
  Sentiment: "sentiment",
} as const;
export type QueryTableField20 = ClosedEnum<typeof QueryTableField20>;

export const QueryTableField19 = {
  Emotion: "emotion",
} as const;
export type QueryTableField19 = ClosedEnum<typeof QueryTableField19>;

export const QueryTableField18 = {
  ThirdPartyEntities: "thirdPartyEntities",
} as const;
export type QueryTableField18 = ClosedEnum<typeof QueryTableField18>;

export const QueryTableField17 = {
  FirstPartyEntities: "firstPartyEntities",
} as const;
export type QueryTableField17 = ClosedEnum<typeof QueryTableField17>;

export const QueryTableField16 = {
  Languages: "languages",
} as const;
export type QueryTableField16 = ClosedEnum<typeof QueryTableField16>;

export const QueryTableField15 = {
  Category: "category",
} as const;
export type QueryTableField15 = ClosedEnum<typeof QueryTableField15>;

export const QueryTableField14 = {
  Subject: "subject",
} as const;
export type QueryTableField14 = ClosedEnum<typeof QueryTableField14>;

export const QueryTableField13 = {
  GapSummary: "gapSummary",
} as const;
export type QueryTableField13 = ClosedEnum<typeof QueryTableField13>;

export const QueryTableField12 = {
  IsAnswerConfident: "isAnswerConfident",
} as const;
export type QueryTableField12 = ClosedEnum<typeof QueryTableField12>;

export const QueryTableField11 = {
  IsFeatureSupported: "isFeatureSupported",
} as const;
export type QueryTableField11 = ClosedEnum<typeof QueryTableField11>;

export const QueryTableField10 = {
  IsDocumented: "isDocumented",
} as const;
export type QueryTableField10 = ClosedEnum<typeof QueryTableField10>;

export const QueryTableField9 = {
  IsClear: "isClear",
} as const;
export type QueryTableField9 = ClosedEnum<typeof QueryTableField9>;

export const QueryTableField8 = {
  IsOnTopic: "isOnTopic",
} as const;
export type QueryTableField8 = ClosedEnum<typeof QueryTableField8>;

export const QueryTableFieldQuery7 = {
  Answer: "answer",
} as const;
export type QueryTableFieldQuery7 = ClosedEnum<typeof QueryTableFieldQuery7>;

export const QueryTableFieldQuery6 = {
  QuestionLength: "questionLength",
} as const;
export type QueryTableFieldQuery6 = ClosedEnum<typeof QueryTableFieldQuery6>;

export const QueryTableFieldQuery5 = {
  Question: "question",
} as const;
export type QueryTableFieldQuery5 = ClosedEnum<typeof QueryTableFieldQuery5>;

export const QueryTableFieldQuery4 = {
  OrganizationId: "organizationId",
} as const;
export type QueryTableFieldQuery4 = ClosedEnum<typeof QueryTableFieldQuery4>;

export const QueryTableFieldQuery3 = {
  MessagesCount: "messagesCount",
} as const;
export type QueryTableFieldQuery3 = ClosedEnum<typeof QueryTableFieldQuery3>;

export const QueryTableFieldQuery2 = {
  MessageIds: "messageIds",
} as const;
export type QueryTableFieldQuery2 = ClosedEnum<typeof QueryTableFieldQuery2>;

export const QueryTableFieldQuery1 = {
  Id: "id",
} as const;
export type QueryTableFieldQuery1 = ClosedEnum<typeof QueryTableFieldQuery1>;

export type QueryTableQueryField =
  | QueryTableFieldQuery1
  | QueryTableFieldQuery2
  | QueryTableFieldQuery3
  | QueryTableFieldQuery4
  | QueryTableFieldQuery5
  | QueryTableFieldQuery6
  | QueryTableFieldQuery7
  | QueryTableField8
  | QueryTableField9
  | QueryTableField10
  | QueryTableField11
  | QueryTableField12
  | QueryTableField13
  | QueryTableField14
  | QueryTableField15
  | QueryTableField16
  | QueryTableField17
  | QueryTableField18
  | QueryTableField19
  | QueryTableField20
  | QueryTableField21
  | QueryTableField22
  | QueryTableField23
  | QueryTableField24
  | QueryTableField25
  | QueryTableField26
  | QueryTableField27
  | QueryTableField28
  | QueryTableField29
  | QueryTableField30
  | QueryTableField31
  | Field32
  | Field33
  | Field34
  | Field35
  | Field36
  | Field37
  | Field38
  | Field39
  | Field40
  | Field41
  | Field42
  | Field43
  | Field44
  | Field45
  | Field46
  | Field47
  | Field48
  | Field49
  | Field50
  | Field51
  | Field52
  | Field53
  | Field54
  | Field55
  | Field56
  | Field57
  | Field58
  | Field59
  | Field60
  | Field61
  | Field62
  | Field63
  | Field64
  | Field65
  | Field66
  | Field67
  | Field68
  | Field69
  | Field70
  | SeventyOne
  | SeventyTwo
  | SeventyThree
  | SeventyFour
  | SeventyFive
  | SeventySix
  | SeventySeven
  | SeventyEight
  | SeventyNine
  | Eighty
  | EightyOne
  | EightyTwo
  | EightyThree
  | EightyFour
  | EightyFive
  | EightySix
  | EightySeven
  | EightyEight
  | EightyNine
  | Ninety
  | NinetyOne
  | NinetyTwo
  | NinetyThree
  | NinetyFour
  | NinetyFive
  | NinetySix
  | NinetySeven
  | NinetyEight
  | NinetyNine
  | OneHundred
  | OneHundredAndOne
  | OneHundredAndTwo
  | OneHundredAndThree
  | OneHundredAndFour
  | OneHundredAndFive
  | OneHundredAndSix
  | OneHundredAndSeven
  | OneHundredAndEight
  | OneHundredAndNine
  | OneHundredAndTen
  | OneHundredAndEleven
  | OneHundredAndTwelve
  | OneHundredAndThirteen
  | OneHundredAndFourteen
  | OneHundredAndFifteen
  | OneHundredAndSixteen
  | OneHundredAndSeventeen
  | OneHundredAndEighteen
  | OneHundredAndNineteen
  | OneHundredAndTwenty
  | OneHundredAndTwentyOne
  | OneHundredAndTwentyTwo
  | OneHundredAndTwentyThree
  | OneHundredAndTwentyFour
  | OneHundredAndTwentyFive
  | OneHundredAndTwentySix
  | OneHundredAndTwentySeven
  | OneHundredAndTwentyEight
  | OneHundredAndTwentyNine
  | OneHundredAndThirty
  | OneHundredAndThirtyOne
  | OneHundredAndThirtyTwo
  | OneHundredAndThirtyThree
  | OneHundredAndThirtyFour
  | OneHundredAndThirtyFive
  | OneHundredAndThirtySix
  | OneHundredAndThirtySeven
  | OneHundredAndThirtyEight
  | OneHundredAndThirtyNine
  | OneHundredAndForty
  | OneHundredAndFortyOne
  | OneHundredAndFortyTwo
  | OneHundredAndFortyThree
  | OneHundredAndFortyFour
  | OneHundredAndFortyFive
  | OneHundredAndFortySix
  | OneHundredAndFortySeven
  | OneHundredAndFortyEight
  | OneHundredAndFortyNine
  | OneHundredAndFifty
  | OneHundredAndFiftyOne
  | OneHundredAndFiftyTwo
  | OneHundredAndFiftyThree
  | OneHundredAndFiftyFour
  | OneHundredAndFiftyFive
  | OneHundredAndFiftySix
  | OneHundredAndFiftySeven
  | OneHundredAndFiftyEight
  | OneHundredAndFiftyNine
  | OneHundredAndSixty
  | OneHundredAndSixtyOne
  | OneHundredAndSixtyTwo
  | OneHundredAndSixtyThree
  | OneHundredAndSixtyFour
  | OneHundredAndSixtyFive
  | OneHundredAndSixtySix
  | OneHundredAndSixtySeven
  | OneHundredAndSixtyEight
  | OneHundredAndSixtyNine
  | OneHundredAndSeventy
  | OneHundredAndSeventyOne
  | OneHundredAndSeventyTwo
  | OneHundredAndSeventyThree
  | OneHundredAndSeventyFour
  | OneHundredAndSeventyFive
  | OneHundredAndSeventySix
  | OneHundredAndSeventySeven
  | OneHundredAndSeventyEight
  | OneHundredAndSeventyNine
  | OneHundredAndEighty
  | OneHundredAndEightyOne
  | OneHundredAndEightyTwo
  | OneHundredAndEightyThree
  | OneHundredAndEightyFour
  | OneHundredAndEightyFive
  | OneHundredAndEightySix
  | OneHundredAndEightySeven
  | OneHundredAndEightyEight
  | OneHundredAndEightyNine
  | OneHundredAndNinety
  | OneHundredAndNinetyOne
  | OneHundredAndNinetyTwo
  | OneHundredAndNinetyThree
  | OneHundredAndNinetyFour
  | OneHundredAndNinetyFive
  | OneHundredAndNinetySix
  | OneHundredAndNinetySeven
  | OneHundredAndNinetyEight
  | OneHundredAndNinetyNine
  | TwoHundred
  | TwoHundredAndOne
  | TwoHundredAndTwo
  | TwoHundredAndThree
  | TwoHundredAndFour
  | TwoHundredAndFive
  | TwoHundredAndSix
  | TwoHundredAndSeven
  | TwoHundredAndEight
  | TwoHundredAndNine
  | TwoHundredAndTen
  | TwoHundredAndEleven
  | TwoHundredAndTwelve
  | TwoHundredAndThirteen
  | TwoHundredAndFourteen
  | TwoHundredAndFifteen
  | TwoHundredAndSixteen
  | TwoHundredAndSeventeen
  | TwoHundredAndEighteen
  | TwoHundredAndNineteen
  | TwoHundredAndTwenty
  | TwoHundredAndTwentyOne
  | TwoHundredAndTwentyTwo
  | TwoHundredAndTwentyThree
  | TwoHundredAndTwentyFour
  | TwoHundredAndTwentyFive
  | TwoHundredAndTwentySix
  | TwoHundredAndTwentySeven
  | TwoHundredAndTwentyEight
  | TwoHundredAndTwentyNine
  | TwoHundredAndThirty
  | TwoHundredAndThirtyOne
  | TwoHundredAndThirtyTwo
  | TwoHundredAndThirtyThree
  | TwoHundredAndThirtyFour
  | TwoHundredAndThirtyFive
  | TwoHundredAndThirtySix
  | TwoHundredAndThirtySeven
  | TwoHundredAndThirtyEight
  | TwoHundredAndThirtyNine
  | TwoHundredAndForty
  | TwoHundredAndFortyOne
  | TwoHundredAndFortyTwo
  | TwoHundredAndFortyThree
  | TwoHundredAndFortyFour
  | TwoHundredAndFortyFive
  | TwoHundredAndFortySix
  | TwoHundredAndFortySeven
  | TwoHundredAndFortyEight
  | TwoHundredAndFortyNine
  | TwoHundredAndFifty
  | TwoHundredAndFiftyOne
  | TwoHundredAndFiftyTwo
  | TwoHundredAndFiftyThree
  | TwoHundredAndFiftyFour
  | TwoHundredAndFiftyFive
  | TwoHundredAndFiftySix
  | TwoHundredAndFiftySeven
  | TwoHundredAndFiftyEight
  | TwoHundredAndFiftyNine
  | TwoHundredAndSixty
  | TwoHundredAndSixtyOne
  | TwoHundredAndSixtyTwo
  | TwoHundredAndSixtyThree
  | TwoHundredAndSixtyFour
  | TwoHundredAndSixtyFive
  | TwoHundredAndSixtySix
  | TwoHundredAndSixtySeven
  | TwoHundredAndSixtyEight
  | TwoHundredAndSixtyNine
  | TwoHundredAndSeventy
  | TwoHundredAndSeventyOne
  | TwoHundredAndSeventyTwo
  | TwoHundredAndSeventyThree
  | TwoHundredAndSeventyFour
  | TwoHundredAndSeventyFive
  | TwoHundredAndSeventySix
  | TwoHundredAndSeventySeven
  | TwoHundredAndSeventyEight
  | TwoHundredAndSeventyNine
  | TwoHundredAndEighty
  | TwoHundredAndEightyOne
  | TwoHundredAndEightyTwo
  | TwoHundredAndEightyThree
  | TwoHundredAndEightyFour
  | TwoHundredAndEightyFive
  | TwoHundredAndEightySix
  | TwoHundredAndEightySeven
  | TwoHundredAndEightyEight
  | TwoHundredAndEightyNine
  | TwoHundredAndNinety
  | TwoHundredAndNinetyOne
  | TwoHundredAndNinetyTwo
  | TwoHundredAndNinetyThree
  | TwoHundredAndNinetyFour
  | TwoHundredAndNinetyFive
  | TwoHundredAndNinetySix
  | TwoHundredAndNinetySeven
  | TwoHundredAndNinetyEight
  | TwoHundredAndNinetyNine
  | ThreeHundred
  | ThreeHundredAndOne
  | ThreeHundredAndTwo
  | ThreeHundredAndThree
  | ThreeHundredAndFour
  | ThreeHundredAndFive
  | ThreeHundredAndSix
  | ThreeHundredAndSeven
  | ThreeHundredAndEight
  | ThreeHundredAndNine
  | ThreeHundredAndTen;

export const QueryTableDirection2 = {
  Desc: "desc",
} as const;
export type QueryTableDirection2 = ClosedEnum<typeof QueryTableDirection2>;

export const QueryTableDirection1 = {
  Asc: "asc",
} as const;
export type QueryTableDirection1 = ClosedEnum<typeof QueryTableDirection1>;

export type QueryTableDirection = QueryTableDirection1 | QueryTableDirection2;

export type QueryTableOrderBy = {
  field:
    | QueryTableFieldQuery1
    | QueryTableFieldQuery2
    | QueryTableFieldQuery3
    | QueryTableFieldQuery4
    | QueryTableFieldQuery5
    | QueryTableFieldQuery6
    | QueryTableFieldQuery7
    | QueryTableField8
    | QueryTableField9
    | QueryTableField10
    | QueryTableField11
    | QueryTableField12
    | QueryTableField13
    | QueryTableField14
    | QueryTableField15
    | QueryTableField16
    | QueryTableField17
    | QueryTableField18
    | QueryTableField19
    | QueryTableField20
    | QueryTableField21
    | QueryTableField22
    | QueryTableField23
    | QueryTableField24
    | QueryTableField25
    | QueryTableField26
    | QueryTableField27
    | QueryTableField28
    | QueryTableField29
    | QueryTableField30
    | QueryTableField31
    | Field32
    | Field33
    | Field34
    | Field35
    | Field36
    | Field37
    | Field38
    | Field39
    | Field40
    | Field41
    | Field42
    | Field43
    | Field44
    | Field45
    | Field46
    | Field47
    | Field48
    | Field49
    | Field50
    | Field51
    | Field52
    | Field53
    | Field54
    | Field55
    | Field56
    | Field57
    | Field58
    | Field59
    | Field60
    | Field61
    | Field62
    | Field63
    | Field64
    | Field65
    | Field66
    | Field67
    | Field68
    | Field69
    | Field70
    | SeventyOne
    | SeventyTwo
    | SeventyThree
    | SeventyFour
    | SeventyFive
    | SeventySix
    | SeventySeven
    | SeventyEight
    | SeventyNine
    | Eighty
    | EightyOne
    | EightyTwo
    | EightyThree
    | EightyFour
    | EightyFive
    | EightySix
    | EightySeven
    | EightyEight
    | EightyNine
    | Ninety
    | NinetyOne
    | NinetyTwo
    | NinetyThree
    | NinetyFour
    | NinetyFive
    | NinetySix
    | NinetySeven
    | NinetyEight
    | NinetyNine
    | OneHundred
    | OneHundredAndOne
    | OneHundredAndTwo
    | OneHundredAndThree
    | OneHundredAndFour
    | OneHundredAndFive
    | OneHundredAndSix
    | OneHundredAndSeven
    | OneHundredAndEight
    | OneHundredAndNine
    | OneHundredAndTen
    | OneHundredAndEleven
    | OneHundredAndTwelve
    | OneHundredAndThirteen
    | OneHundredAndFourteen
    | OneHundredAndFifteen
    | OneHundredAndSixteen
    | OneHundredAndSeventeen
    | OneHundredAndEighteen
    | OneHundredAndNineteen
    | OneHundredAndTwenty
    | OneHundredAndTwentyOne
    | OneHundredAndTwentyTwo
    | OneHundredAndTwentyThree
    | OneHundredAndTwentyFour
    | OneHundredAndTwentyFive
    | OneHundredAndTwentySix
    | OneHundredAndTwentySeven
    | OneHundredAndTwentyEight
    | OneHundredAndTwentyNine
    | OneHundredAndThirty
    | OneHundredAndThirtyOne
    | OneHundredAndThirtyTwo
    | OneHundredAndThirtyThree
    | OneHundredAndThirtyFour
    | OneHundredAndThirtyFive
    | OneHundredAndThirtySix
    | OneHundredAndThirtySeven
    | OneHundredAndThirtyEight
    | OneHundredAndThirtyNine
    | OneHundredAndForty
    | OneHundredAndFortyOne
    | OneHundredAndFortyTwo
    | OneHundredAndFortyThree
    | OneHundredAndFortyFour
    | OneHundredAndFortyFive
    | OneHundredAndFortySix
    | OneHundredAndFortySeven
    | OneHundredAndFortyEight
    | OneHundredAndFortyNine
    | OneHundredAndFifty
    | OneHundredAndFiftyOne
    | OneHundredAndFiftyTwo
    | OneHundredAndFiftyThree
    | OneHundredAndFiftyFour
    | OneHundredAndFiftyFive
    | OneHundredAndFiftySix
    | OneHundredAndFiftySeven
    | OneHundredAndFiftyEight
    | OneHundredAndFiftyNine
    | OneHundredAndSixty
    | OneHundredAndSixtyOne
    | OneHundredAndSixtyTwo
    | OneHundredAndSixtyThree
    | OneHundredAndSixtyFour
    | OneHundredAndSixtyFive
    | OneHundredAndSixtySix
    | OneHundredAndSixtySeven
    | OneHundredAndSixtyEight
    | OneHundredAndSixtyNine
    | OneHundredAndSeventy
    | OneHundredAndSeventyOne
    | OneHundredAndSeventyTwo
    | OneHundredAndSeventyThree
    | OneHundredAndSeventyFour
    | OneHundredAndSeventyFive
    | OneHundredAndSeventySix
    | OneHundredAndSeventySeven
    | OneHundredAndSeventyEight
    | OneHundredAndSeventyNine
    | OneHundredAndEighty
    | OneHundredAndEightyOne
    | OneHundredAndEightyTwo
    | OneHundredAndEightyThree
    | OneHundredAndEightyFour
    | OneHundredAndEightyFive
    | OneHundredAndEightySix
    | OneHundredAndEightySeven
    | OneHundredAndEightyEight
    | OneHundredAndEightyNine
    | OneHundredAndNinety
    | OneHundredAndNinetyOne
    | OneHundredAndNinetyTwo
    | OneHundredAndNinetyThree
    | OneHundredAndNinetyFour
    | OneHundredAndNinetyFive
    | OneHundredAndNinetySix
    | OneHundredAndNinetySeven
    | OneHundredAndNinetyEight
    | OneHundredAndNinetyNine
    | TwoHundred
    | TwoHundredAndOne
    | TwoHundredAndTwo
    | TwoHundredAndThree
    | TwoHundredAndFour
    | TwoHundredAndFive
    | TwoHundredAndSix
    | TwoHundredAndSeven
    | TwoHundredAndEight
    | TwoHundredAndNine
    | TwoHundredAndTen
    | TwoHundredAndEleven
    | TwoHundredAndTwelve
    | TwoHundredAndThirteen
    | TwoHundredAndFourteen
    | TwoHundredAndFifteen
    | TwoHundredAndSixteen
    | TwoHundredAndSeventeen
    | TwoHundredAndEighteen
    | TwoHundredAndNineteen
    | TwoHundredAndTwenty
    | TwoHundredAndTwentyOne
    | TwoHundredAndTwentyTwo
    | TwoHundredAndTwentyThree
    | TwoHundredAndTwentyFour
    | TwoHundredAndTwentyFive
    | TwoHundredAndTwentySix
    | TwoHundredAndTwentySeven
    | TwoHundredAndTwentyEight
    | TwoHundredAndTwentyNine
    | TwoHundredAndThirty
    | TwoHundredAndThirtyOne
    | TwoHundredAndThirtyTwo
    | TwoHundredAndThirtyThree
    | TwoHundredAndThirtyFour
    | TwoHundredAndThirtyFive
    | TwoHundredAndThirtySix
    | TwoHundredAndThirtySeven
    | TwoHundredAndThirtyEight
    | TwoHundredAndThirtyNine
    | TwoHundredAndForty
    | TwoHundredAndFortyOne
    | TwoHundredAndFortyTwo
    | TwoHundredAndFortyThree
    | TwoHundredAndFortyFour
    | TwoHundredAndFortyFive
    | TwoHundredAndFortySix
    | TwoHundredAndFortySeven
    | TwoHundredAndFortyEight
    | TwoHundredAndFortyNine
    | TwoHundredAndFifty
    | TwoHundredAndFiftyOne
    | TwoHundredAndFiftyTwo
    | TwoHundredAndFiftyThree
    | TwoHundredAndFiftyFour
    | TwoHundredAndFiftyFive
    | TwoHundredAndFiftySix
    | TwoHundredAndFiftySeven
    | TwoHundredAndFiftyEight
    | TwoHundredAndFiftyNine
    | TwoHundredAndSixty
    | TwoHundredAndSixtyOne
    | TwoHundredAndSixtyTwo
    | TwoHundredAndSixtyThree
    | TwoHundredAndSixtyFour
    | TwoHundredAndSixtyFive
    | TwoHundredAndSixtySix
    | TwoHundredAndSixtySeven
    | TwoHundredAndSixtyEight
    | TwoHundredAndSixtyNine
    | TwoHundredAndSeventy
    | TwoHundredAndSeventyOne
    | TwoHundredAndSeventyTwo
    | TwoHundredAndSeventyThree
    | TwoHundredAndSeventyFour
    | TwoHundredAndSeventyFive
    | TwoHundredAndSeventySix
    | TwoHundredAndSeventySeven
    | TwoHundredAndSeventyEight
    | TwoHundredAndSeventyNine
    | TwoHundredAndEighty
    | TwoHundredAndEightyOne
    | TwoHundredAndEightyTwo
    | TwoHundredAndEightyThree
    | TwoHundredAndEightyFour
    | TwoHundredAndEightyFive
    | TwoHundredAndEightySix
    | TwoHundredAndEightySeven
    | TwoHundredAndEightyEight
    | TwoHundredAndEightyNine
    | TwoHundredAndNinety
    | TwoHundredAndNinetyOne
    | TwoHundredAndNinetyTwo
    | TwoHundredAndNinetyThree
    | TwoHundredAndNinetyFour
    | TwoHundredAndNinetyFive
    | TwoHundredAndNinetySix
    | TwoHundredAndNinetySeven
    | TwoHundredAndNinetyEight
    | TwoHundredAndNinetyNine
    | ThreeHundred
    | ThreeHundredAndOne
    | ThreeHundredAndTwo
    | ThreeHundredAndThree
    | ThreeHundredAndFour
    | ThreeHundredAndFive
    | ThreeHundredAndSix
    | ThreeHundredAndSeven
    | ThreeHundredAndEight
    | ThreeHundredAndNine
    | ThreeHundredAndTen;
  direction: QueryTableDirection1 | QueryTableDirection2;
};

/**
 * Note: The maximum size of the request body is 2 MB.
 */
export type QueryTableRequestBody = {
  select?:
    | Array<
      | (components.SimpleFieldSelection & { type: "field" })
      | (components.AggregationSelection & { type: "aggregation" })
      | (components.TimeBasedGroupBySelection & { type: "time" })
    >
    | undefined;
  groupBy?: Array<QueryTableGroupBy> | undefined;
  where?: components.SemanticThreadFilter | undefined;
  orderBy?: Array<QueryTableOrderBy> | undefined;
};

export type QueryTableRequest = {
  table: string;
  /**
   * Note: The maximum size of the request body is 2 MB.
   */
  requestBody: QueryTableRequestBody;
};

export const Status = {
  Ok: "ok",
} as const;
export type Status = ClosedEnum<typeof Status>;

export type Result = {
  id?: string | undefined;
  messageIds?: any | undefined;
  messagesCount?: any | undefined;
  organizationId?: string | undefined;
  question?: string | undefined;
  questionLength?: any | undefined;
  answer?: string | undefined;
  isOnTopic?: any | undefined;
  isClear?: any | undefined;
  isDocumented?: any | undefined;
  isFeatureSupported?: any | undefined;
  isAnswerConfident?: any | undefined;
  gapSummary?: any | undefined;
  subject?: any | undefined;
  category?: any | undefined;
  languages?: any | undefined;
  firstPartyEntities?: any | undefined;
  thirdPartyEntities?: any | undefined;
  emotion?: any | undefined;
  sentiment?: any | undefined;
  questionType?: any | undefined;
  projectId?: string | undefined;
  integrationId?: string | undefined;
  firstMessageTime?: Date | undefined;
  lastMessageTime?: Date | undefined;
  lastUpdated?: Date | undefined;
  hasPositiveFeedback?: boolean | undefined;
  hasNegativeFeedback?: boolean | undefined;
  conversationIds?: Array<string> | undefined;
  areAIAnnotationsVerified?: any | undefined;
  isInitialQuestionAnswer?: boolean | undefined;
  sum?: number | undefined;
  count?: number | undefined;
  avg?: number | undefined;
  min?: number | undefined;
  max?: number | undefined;
  idHour?: string | undefined;
  idDay?: string | undefined;
  idWeek?: string | undefined;
  idMonth?: string | undefined;
  messageIdsHour?: string | undefined;
  messageIdsDay?: string | undefined;
  messageIdsWeek?: string | undefined;
  messageIdsMonth?: string | undefined;
  messagesCountHour?: string | undefined;
  messagesCountDay?: string | undefined;
  messagesCountWeek?: string | undefined;
  messagesCountMonth?: string | undefined;
  organizationIdHour?: string | undefined;
  organizationIdDay?: string | undefined;
  organizationIdWeek?: string | undefined;
  organizationIdMonth?: string | undefined;
  questionHour?: string | undefined;
  questionDay?: string | undefined;
  questionWeek?: string | undefined;
  questionMonth?: string | undefined;
  questionLengthHour?: string | undefined;
  questionLengthDay?: string | undefined;
  questionLengthWeek?: string | undefined;
  questionLengthMonth?: string | undefined;
  answerHour?: string | undefined;
  answerDay?: string | undefined;
  answerWeek?: string | undefined;
  answerMonth?: string | undefined;
  isOnTopicHour?: string | undefined;
  isOnTopicDay?: string | undefined;
  isOnTopicWeek?: string | undefined;
  isOnTopicMonth?: string | undefined;
  isClearHour?: string | undefined;
  isClearDay?: string | undefined;
  isClearWeek?: string | undefined;
  isClearMonth?: string | undefined;
  isDocumentedHour?: string | undefined;
  isDocumentedDay?: string | undefined;
  isDocumentedWeek?: string | undefined;
  isDocumentedMonth?: string | undefined;
  isFeatureSupportedHour?: string | undefined;
  isFeatureSupportedDay?: string | undefined;
  isFeatureSupportedWeek?: string | undefined;
  isFeatureSupportedMonth?: string | undefined;
  isAnswerConfidentHour?: string | undefined;
  isAnswerConfidentDay?: string | undefined;
  isAnswerConfidentWeek?: string | undefined;
  isAnswerConfidentMonth?: string | undefined;
  gapSummaryHour?: string | undefined;
  gapSummaryDay?: string | undefined;
  gapSummaryWeek?: string | undefined;
  gapSummaryMonth?: string | undefined;
  subjectHour?: string | undefined;
  subjectDay?: string | undefined;
  subjectWeek?: string | undefined;
  subjectMonth?: string | undefined;
  categoryHour?: string | undefined;
  categoryDay?: string | undefined;
  categoryWeek?: string | undefined;
  categoryMonth?: string | undefined;
  languagesHour?: string | undefined;
  languagesDay?: string | undefined;
  languagesWeek?: string | undefined;
  languagesMonth?: string | undefined;
  firstPartyEntitiesHour?: string | undefined;
  firstPartyEntitiesDay?: string | undefined;
  firstPartyEntitiesWeek?: string | undefined;
  firstPartyEntitiesMonth?: string | undefined;
  thirdPartyEntitiesHour?: string | undefined;
  thirdPartyEntitiesDay?: string | undefined;
  thirdPartyEntitiesWeek?: string | undefined;
  thirdPartyEntitiesMonth?: string | undefined;
  emotionHour?: string | undefined;
  emotionDay?: string | undefined;
  emotionWeek?: string | undefined;
  emotionMonth?: string | undefined;
  sentimentHour?: string | undefined;
  sentimentDay?: string | undefined;
  sentimentWeek?: string | undefined;
  sentimentMonth?: string | undefined;
  questionTypeHour?: string | undefined;
  questionTypeDay?: string | undefined;
  questionTypeWeek?: string | undefined;
  questionTypeMonth?: string | undefined;
  projectIdHour?: string | undefined;
  projectIdDay?: string | undefined;
  projectIdWeek?: string | undefined;
  projectIdMonth?: string | undefined;
  integrationIdHour?: string | undefined;
  integrationIdDay?: string | undefined;
  integrationIdWeek?: string | undefined;
  integrationIdMonth?: string | undefined;
  firstMessageTimeHour?: string | undefined;
  firstMessageTimeDay?: string | undefined;
  firstMessageTimeWeek?: string | undefined;
  firstMessageTimeMonth?: string | undefined;
  lastMessageTimeHour?: string | undefined;
  lastMessageTimeDay?: string | undefined;
  lastMessageTimeWeek?: string | undefined;
  lastMessageTimeMonth?: string | undefined;
  lastUpdatedHour?: string | undefined;
  lastUpdatedDay?: string | undefined;
  lastUpdatedWeek?: string | undefined;
  lastUpdatedMonth?: string | undefined;
  hasPositiveFeedbackHour?: string | undefined;
  hasPositiveFeedbackDay?: string | undefined;
  hasPositiveFeedbackWeek?: string | undefined;
  hasPositiveFeedbackMonth?: string | undefined;
  hasNegativeFeedbackHour?: string | undefined;
  hasNegativeFeedbackDay?: string | undefined;
  hasNegativeFeedbackWeek?: string | undefined;
  hasNegativeFeedbackMonth?: string | undefined;
  conversationIdsHour?: string | undefined;
  conversationIdsDay?: string | undefined;
  conversationIdsWeek?: string | undefined;
  conversationIdsMonth?: string | undefined;
  areAIAnnotationsVerifiedHour?: string | undefined;
  areAIAnnotationsVerifiedDay?: string | undefined;
  areAIAnnotationsVerifiedWeek?: string | undefined;
  areAIAnnotationsVerifiedMonth?: string | undefined;
  isInitialQuestionAnswerHour?: string | undefined;
  isInitialQuestionAnswerDay?: string | undefined;
  isInitialQuestionAnswerWeek?: string | undefined;
  isInitialQuestionAnswerMonth?: string | undefined;
  sumId?: number | undefined;
  countId?: number | undefined;
  avgId?: number | undefined;
  minId?: number | undefined;
  maxId?: number | undefined;
  sumMessageIds?: number | undefined;
  countMessageIds?: number | undefined;
  avgMessageIds?: number | undefined;
  minMessageIds?: number | undefined;
  maxMessageIds?: number | undefined;
  sumMessagesCount?: number | undefined;
  countMessagesCount?: number | undefined;
  avgMessagesCount?: number | undefined;
  minMessagesCount?: number | undefined;
  maxMessagesCount?: number | undefined;
  sumOrganizationId?: number | undefined;
  countOrganizationId?: number | undefined;
  avgOrganizationId?: number | undefined;
  minOrganizationId?: number | undefined;
  maxOrganizationId?: number | undefined;
  sumQuestion?: number | undefined;
  countQuestion?: number | undefined;
  avgQuestion?: number | undefined;
  minQuestion?: number | undefined;
  maxQuestion?: number | undefined;
  sumQuestionLength?: number | undefined;
  countQuestionLength?: number | undefined;
  avgQuestionLength?: number | undefined;
  minQuestionLength?: number | undefined;
  maxQuestionLength?: number | undefined;
  sumAnswer?: number | undefined;
  countAnswer?: number | undefined;
  avgAnswer?: number | undefined;
  minAnswer?: number | undefined;
  maxAnswer?: number | undefined;
  sumIsOnTopic?: number | undefined;
  countIsOnTopic?: number | undefined;
  avgIsOnTopic?: number | undefined;
  minIsOnTopic?: number | undefined;
  maxIsOnTopic?: number | undefined;
  sumIsClear?: number | undefined;
  countIsClear?: number | undefined;
  avgIsClear?: number | undefined;
  minIsClear?: number | undefined;
  maxIsClear?: number | undefined;
  sumIsDocumented?: number | undefined;
  countIsDocumented?: number | undefined;
  avgIsDocumented?: number | undefined;
  minIsDocumented?: number | undefined;
  maxIsDocumented?: number | undefined;
  sumIsFeatureSupported?: number | undefined;
  countIsFeatureSupported?: number | undefined;
  avgIsFeatureSupported?: number | undefined;
  minIsFeatureSupported?: number | undefined;
  maxIsFeatureSupported?: number | undefined;
  sumIsAnswerConfident?: number | undefined;
  countIsAnswerConfident?: number | undefined;
  avgIsAnswerConfident?: number | undefined;
  minIsAnswerConfident?: number | undefined;
  maxIsAnswerConfident?: number | undefined;
  sumGapSummary?: number | undefined;
  countGapSummary?: number | undefined;
  avgGapSummary?: number | undefined;
  minGapSummary?: number | undefined;
  maxGapSummary?: number | undefined;
  sumSubject?: number | undefined;
  countSubject?: number | undefined;
  avgSubject?: number | undefined;
  minSubject?: number | undefined;
  maxSubject?: number | undefined;
  sumCategory?: number | undefined;
  countCategory?: number | undefined;
  avgCategory?: number | undefined;
  minCategory?: number | undefined;
  maxCategory?: number | undefined;
  sumLanguages?: number | undefined;
  countLanguages?: number | undefined;
  avgLanguages?: number | undefined;
  minLanguages?: number | undefined;
  maxLanguages?: number | undefined;
  sumFirstPartyEntities?: number | undefined;
  countFirstPartyEntities?: number | undefined;
  avgFirstPartyEntities?: number | undefined;
  minFirstPartyEntities?: number | undefined;
  maxFirstPartyEntities?: number | undefined;
  sumThirdPartyEntities?: number | undefined;
  countThirdPartyEntities?: number | undefined;
  avgThirdPartyEntities?: number | undefined;
  minThirdPartyEntities?: number | undefined;
  maxThirdPartyEntities?: number | undefined;
  sumEmotion?: number | undefined;
  countEmotion?: number | undefined;
  avgEmotion?: number | undefined;
  minEmotion?: number | undefined;
  maxEmotion?: number | undefined;
  sumSentiment?: number | undefined;
  countSentiment?: number | undefined;
  avgSentiment?: number | undefined;
  minSentiment?: number | undefined;
  maxSentiment?: number | undefined;
  sumQuestionType?: number | undefined;
  countQuestionType?: number | undefined;
  avgQuestionType?: number | undefined;
  minQuestionType?: number | undefined;
  maxQuestionType?: number | undefined;
  sumProjectId?: number | undefined;
  countProjectId?: number | undefined;
  avgProjectId?: number | undefined;
  minProjectId?: number | undefined;
  maxProjectId?: number | undefined;
  sumIntegrationId?: number | undefined;
  countIntegrationId?: number | undefined;
  avgIntegrationId?: number | undefined;
  minIntegrationId?: number | undefined;
  maxIntegrationId?: number | undefined;
  sumFirstMessageTime?: number | undefined;
  countFirstMessageTime?: number | undefined;
  avgFirstMessageTime?: number | undefined;
  minFirstMessageTime?: number | undefined;
  maxFirstMessageTime?: number | undefined;
  sumLastMessageTime?: number | undefined;
  countLastMessageTime?: number | undefined;
  avgLastMessageTime?: number | undefined;
  minLastMessageTime?: number | undefined;
  maxLastMessageTime?: number | undefined;
  sumLastUpdated?: number | undefined;
  countLastUpdated?: number | undefined;
  avgLastUpdated?: number | undefined;
  minLastUpdated?: number | undefined;
  maxLastUpdated?: number | undefined;
  sumHasPositiveFeedback?: number | undefined;
  countHasPositiveFeedback?: number | undefined;
  avgHasPositiveFeedback?: number | undefined;
  minHasPositiveFeedback?: number | undefined;
  maxHasPositiveFeedback?: number | undefined;
  sumHasNegativeFeedback?: number | undefined;
  countHasNegativeFeedback?: number | undefined;
  avgHasNegativeFeedback?: number | undefined;
  minHasNegativeFeedback?: number | undefined;
  maxHasNegativeFeedback?: number | undefined;
  sumConversationIds?: number | undefined;
  countConversationIds?: number | undefined;
  avgConversationIds?: number | undefined;
  minConversationIds?: number | undefined;
  maxConversationIds?: number | undefined;
  sumAreAIAnnotationsVerified?: number | undefined;
  countAreAIAnnotationsVerified?: number | undefined;
  avgAreAIAnnotationsVerified?: number | undefined;
  minAreAIAnnotationsVerified?: number | undefined;
  maxAreAIAnnotationsVerified?: number | undefined;
  sumIsInitialQuestionAnswer?: number | undefined;
  countIsInitialQuestionAnswer?: number | undefined;
  avgIsInitialQuestionAnswer?: number | undefined;
  minIsInitialQuestionAnswer?: number | undefined;
  maxIsInitialQuestionAnswer?: number | undefined;
};

export type Data = {
  result: Array<Result>;
  total: number;
  pageSize: number;
  count: number;
};

/**
 * Query results
 */
export type QueryTableResponseBody = {
  status: Status;
  data: Data;
};

/** @internal */
export const QueryTableSecurity$inboundSchema: z.ZodType<
  QueryTableSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  WebIntegrationKey: z.string().optional(),
  ApiIntegrationKey: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "WebIntegrationKey": "webIntegrationKey",
    "ApiIntegrationKey": "apiIntegrationKey",
  });
});

/** @internal */
export type QueryTableSecurity$Outbound = {
  WebIntegrationKey?: string | undefined;
  ApiIntegrationKey?: string | undefined;
};

/** @internal */
export const QueryTableSecurity$outboundSchema: z.ZodType<
  QueryTableSecurity$Outbound,
  z.ZodTypeDef,
  QueryTableSecurity
> = z.object({
  webIntegrationKey: z.string().optional(),
  apiIntegrationKey: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    webIntegrationKey: "WebIntegrationKey",
    apiIntegrationKey: "ApiIntegrationKey",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableSecurity$ {
  /** @deprecated use `QueryTableSecurity$inboundSchema` instead. */
  export const inboundSchema = QueryTableSecurity$inboundSchema;
  /** @deprecated use `QueryTableSecurity$outboundSchema` instead. */
  export const outboundSchema = QueryTableSecurity$outboundSchema;
  /** @deprecated use `QueryTableSecurity$Outbound` instead. */
  export type Outbound = QueryTableSecurity$Outbound;
}

export function queryTableSecurityToJSON(
  queryTableSecurity: QueryTableSecurity,
): string {
  return JSON.stringify(
    QueryTableSecurity$outboundSchema.parse(queryTableSecurity),
  );
}

export function queryTableSecurityFromJSON(
  jsonString: string,
): SafeParseResult<QueryTableSecurity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => QueryTableSecurity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'QueryTableSecurity' from JSON`,
  );
}

/** @internal */
export const QueryTableSelect$inboundSchema: z.ZodType<
  QueryTableSelect,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.SimpleFieldSelection$inboundSchema.and(
    z.object({ type: z.literal("field") }).transform((v) => ({ type: v.type })),
  ),
  components.AggregationSelection$inboundSchema.and(
    z.object({ type: z.literal("aggregation") }).transform((v) => ({
      type: v.type,
    })),
  ),
  components.TimeBasedGroupBySelection$inboundSchema.and(
    z.object({ type: z.literal("time") }).transform((v) => ({ type: v.type })),
  ),
]);

/** @internal */
export type QueryTableSelect$Outbound =
  | (components.SimpleFieldSelection$Outbound & { type: "field" })
  | (components.AggregationSelection$Outbound & { type: "aggregation" })
  | (components.TimeBasedGroupBySelection$Outbound & { type: "time" });

/** @internal */
export const QueryTableSelect$outboundSchema: z.ZodType<
  QueryTableSelect$Outbound,
  z.ZodTypeDef,
  QueryTableSelect
> = z.union([
  components.SimpleFieldSelection$outboundSchema.and(
    z.object({ type: z.literal("field") }).transform((v) => ({ type: v.type })),
  ),
  components.AggregationSelection$outboundSchema.and(
    z.object({ type: z.literal("aggregation") }).transform((v) => ({
      type: v.type,
    })),
  ),
  components.TimeBasedGroupBySelection$outboundSchema.and(
    z.object({ type: z.literal("time") }).transform((v) => ({ type: v.type })),
  ),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableSelect$ {
  /** @deprecated use `QueryTableSelect$inboundSchema` instead. */
  export const inboundSchema = QueryTableSelect$inboundSchema;
  /** @deprecated use `QueryTableSelect$outboundSchema` instead. */
  export const outboundSchema = QueryTableSelect$outboundSchema;
  /** @deprecated use `QueryTableSelect$Outbound` instead. */
  export type Outbound = QueryTableSelect$Outbound;
}

export function queryTableSelectToJSON(
  queryTableSelect: QueryTableSelect,
): string {
  return JSON.stringify(
    QueryTableSelect$outboundSchema.parse(queryTableSelect),
  );
}

export function queryTableSelectFromJSON(
  jsonString: string,
): SafeParseResult<QueryTableSelect, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => QueryTableSelect$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'QueryTableSelect' from JSON`,
  );
}

/** @internal */
export const Field31$inboundSchema: z.ZodNativeEnum<typeof Field31> = z
  .nativeEnum(Field31);

/** @internal */
export const Field31$outboundSchema: z.ZodNativeEnum<typeof Field31> =
  Field31$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field31$ {
  /** @deprecated use `Field31$inboundSchema` instead. */
  export const inboundSchema = Field31$inboundSchema;
  /** @deprecated use `Field31$outboundSchema` instead. */
  export const outboundSchema = Field31$outboundSchema;
}

/** @internal */
export const Field30$inboundSchema: z.ZodNativeEnum<typeof Field30> = z
  .nativeEnum(Field30);

/** @internal */
export const Field30$outboundSchema: z.ZodNativeEnum<typeof Field30> =
  Field30$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field30$ {
  /** @deprecated use `Field30$inboundSchema` instead. */
  export const inboundSchema = Field30$inboundSchema;
  /** @deprecated use `Field30$outboundSchema` instead. */
  export const outboundSchema = Field30$outboundSchema;
}

/** @internal */
export const Field29$inboundSchema: z.ZodNativeEnum<typeof Field29> = z
  .nativeEnum(Field29);

/** @internal */
export const Field29$outboundSchema: z.ZodNativeEnum<typeof Field29> =
  Field29$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field29$ {
  /** @deprecated use `Field29$inboundSchema` instead. */
  export const inboundSchema = Field29$inboundSchema;
  /** @deprecated use `Field29$outboundSchema` instead. */
  export const outboundSchema = Field29$outboundSchema;
}

/** @internal */
export const Field28$inboundSchema: z.ZodNativeEnum<typeof Field28> = z
  .nativeEnum(Field28);

/** @internal */
export const Field28$outboundSchema: z.ZodNativeEnum<typeof Field28> =
  Field28$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field28$ {
  /** @deprecated use `Field28$inboundSchema` instead. */
  export const inboundSchema = Field28$inboundSchema;
  /** @deprecated use `Field28$outboundSchema` instead. */
  export const outboundSchema = Field28$outboundSchema;
}

/** @internal */
export const Field27$inboundSchema: z.ZodNativeEnum<typeof Field27> = z
  .nativeEnum(Field27);

/** @internal */
export const Field27$outboundSchema: z.ZodNativeEnum<typeof Field27> =
  Field27$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field27$ {
  /** @deprecated use `Field27$inboundSchema` instead. */
  export const inboundSchema = Field27$inboundSchema;
  /** @deprecated use `Field27$outboundSchema` instead. */
  export const outboundSchema = Field27$outboundSchema;
}

/** @internal */
export const Field26$inboundSchema: z.ZodNativeEnum<typeof Field26> = z
  .nativeEnum(Field26);

/** @internal */
export const Field26$outboundSchema: z.ZodNativeEnum<typeof Field26> =
  Field26$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field26$ {
  /** @deprecated use `Field26$inboundSchema` instead. */
  export const inboundSchema = Field26$inboundSchema;
  /** @deprecated use `Field26$outboundSchema` instead. */
  export const outboundSchema = Field26$outboundSchema;
}

/** @internal */
export const Field25$inboundSchema: z.ZodNativeEnum<typeof Field25> = z
  .nativeEnum(Field25);

/** @internal */
export const Field25$outboundSchema: z.ZodNativeEnum<typeof Field25> =
  Field25$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field25$ {
  /** @deprecated use `Field25$inboundSchema` instead. */
  export const inboundSchema = Field25$inboundSchema;
  /** @deprecated use `Field25$outboundSchema` instead. */
  export const outboundSchema = Field25$outboundSchema;
}

/** @internal */
export const Field24$inboundSchema: z.ZodNativeEnum<typeof Field24> = z
  .nativeEnum(Field24);

/** @internal */
export const Field24$outboundSchema: z.ZodNativeEnum<typeof Field24> =
  Field24$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field24$ {
  /** @deprecated use `Field24$inboundSchema` instead. */
  export const inboundSchema = Field24$inboundSchema;
  /** @deprecated use `Field24$outboundSchema` instead. */
  export const outboundSchema = Field24$outboundSchema;
}

/** @internal */
export const Field23$inboundSchema: z.ZodNativeEnum<typeof Field23> = z
  .nativeEnum(Field23);

/** @internal */
export const Field23$outboundSchema: z.ZodNativeEnum<typeof Field23> =
  Field23$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field23$ {
  /** @deprecated use `Field23$inboundSchema` instead. */
  export const inboundSchema = Field23$inboundSchema;
  /** @deprecated use `Field23$outboundSchema` instead. */
  export const outboundSchema = Field23$outboundSchema;
}

/** @internal */
export const Field22$inboundSchema: z.ZodNativeEnum<typeof Field22> = z
  .nativeEnum(Field22);

/** @internal */
export const Field22$outboundSchema: z.ZodNativeEnum<typeof Field22> =
  Field22$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field22$ {
  /** @deprecated use `Field22$inboundSchema` instead. */
  export const inboundSchema = Field22$inboundSchema;
  /** @deprecated use `Field22$outboundSchema` instead. */
  export const outboundSchema = Field22$outboundSchema;
}

/** @internal */
export const Field21$inboundSchema: z.ZodNativeEnum<typeof Field21> = z
  .nativeEnum(Field21);

/** @internal */
export const Field21$outboundSchema: z.ZodNativeEnum<typeof Field21> =
  Field21$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field21$ {
  /** @deprecated use `Field21$inboundSchema` instead. */
  export const inboundSchema = Field21$inboundSchema;
  /** @deprecated use `Field21$outboundSchema` instead. */
  export const outboundSchema = Field21$outboundSchema;
}

/** @internal */
export const Field20$inboundSchema: z.ZodNativeEnum<typeof Field20> = z
  .nativeEnum(Field20);

/** @internal */
export const Field20$outboundSchema: z.ZodNativeEnum<typeof Field20> =
  Field20$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field20$ {
  /** @deprecated use `Field20$inboundSchema` instead. */
  export const inboundSchema = Field20$inboundSchema;
  /** @deprecated use `Field20$outboundSchema` instead. */
  export const outboundSchema = Field20$outboundSchema;
}

/** @internal */
export const Field19$inboundSchema: z.ZodNativeEnum<typeof Field19> = z
  .nativeEnum(Field19);

/** @internal */
export const Field19$outboundSchema: z.ZodNativeEnum<typeof Field19> =
  Field19$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field19$ {
  /** @deprecated use `Field19$inboundSchema` instead. */
  export const inboundSchema = Field19$inboundSchema;
  /** @deprecated use `Field19$outboundSchema` instead. */
  export const outboundSchema = Field19$outboundSchema;
}

/** @internal */
export const Field18$inboundSchema: z.ZodNativeEnum<typeof Field18> = z
  .nativeEnum(Field18);

/** @internal */
export const Field18$outboundSchema: z.ZodNativeEnum<typeof Field18> =
  Field18$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field18$ {
  /** @deprecated use `Field18$inboundSchema` instead. */
  export const inboundSchema = Field18$inboundSchema;
  /** @deprecated use `Field18$outboundSchema` instead. */
  export const outboundSchema = Field18$outboundSchema;
}

/** @internal */
export const Field17$inboundSchema: z.ZodNativeEnum<typeof Field17> = z
  .nativeEnum(Field17);

/** @internal */
export const Field17$outboundSchema: z.ZodNativeEnum<typeof Field17> =
  Field17$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field17$ {
  /** @deprecated use `Field17$inboundSchema` instead. */
  export const inboundSchema = Field17$inboundSchema;
  /** @deprecated use `Field17$outboundSchema` instead. */
  export const outboundSchema = Field17$outboundSchema;
}

/** @internal */
export const Field16$inboundSchema: z.ZodNativeEnum<typeof Field16> = z
  .nativeEnum(Field16);

/** @internal */
export const Field16$outboundSchema: z.ZodNativeEnum<typeof Field16> =
  Field16$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field16$ {
  /** @deprecated use `Field16$inboundSchema` instead. */
  export const inboundSchema = Field16$inboundSchema;
  /** @deprecated use `Field16$outboundSchema` instead. */
  export const outboundSchema = Field16$outboundSchema;
}

/** @internal */
export const Field15$inboundSchema: z.ZodNativeEnum<typeof Field15> = z
  .nativeEnum(Field15);

/** @internal */
export const Field15$outboundSchema: z.ZodNativeEnum<typeof Field15> =
  Field15$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field15$ {
  /** @deprecated use `Field15$inboundSchema` instead. */
  export const inboundSchema = Field15$inboundSchema;
  /** @deprecated use `Field15$outboundSchema` instead. */
  export const outboundSchema = Field15$outboundSchema;
}

/** @internal */
export const Field14$inboundSchema: z.ZodNativeEnum<typeof Field14> = z
  .nativeEnum(Field14);

/** @internal */
export const Field14$outboundSchema: z.ZodNativeEnum<typeof Field14> =
  Field14$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field14$ {
  /** @deprecated use `Field14$inboundSchema` instead. */
  export const inboundSchema = Field14$inboundSchema;
  /** @deprecated use `Field14$outboundSchema` instead. */
  export const outboundSchema = Field14$outboundSchema;
}

/** @internal */
export const Field13$inboundSchema: z.ZodNativeEnum<typeof Field13> = z
  .nativeEnum(Field13);

/** @internal */
export const Field13$outboundSchema: z.ZodNativeEnum<typeof Field13> =
  Field13$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field13$ {
  /** @deprecated use `Field13$inboundSchema` instead. */
  export const inboundSchema = Field13$inboundSchema;
  /** @deprecated use `Field13$outboundSchema` instead. */
  export const outboundSchema = Field13$outboundSchema;
}

/** @internal */
export const Field12$inboundSchema: z.ZodNativeEnum<typeof Field12> = z
  .nativeEnum(Field12);

/** @internal */
export const Field12$outboundSchema: z.ZodNativeEnum<typeof Field12> =
  Field12$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field12$ {
  /** @deprecated use `Field12$inboundSchema` instead. */
  export const inboundSchema = Field12$inboundSchema;
  /** @deprecated use `Field12$outboundSchema` instead. */
  export const outboundSchema = Field12$outboundSchema;
}

/** @internal */
export const Field11$inboundSchema: z.ZodNativeEnum<typeof Field11> = z
  .nativeEnum(Field11);

/** @internal */
export const Field11$outboundSchema: z.ZodNativeEnum<typeof Field11> =
  Field11$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field11$ {
  /** @deprecated use `Field11$inboundSchema` instead. */
  export const inboundSchema = Field11$inboundSchema;
  /** @deprecated use `Field11$outboundSchema` instead. */
  export const outboundSchema = Field11$outboundSchema;
}

/** @internal */
export const Field10$inboundSchema: z.ZodNativeEnum<typeof Field10> = z
  .nativeEnum(Field10);

/** @internal */
export const Field10$outboundSchema: z.ZodNativeEnum<typeof Field10> =
  Field10$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field10$ {
  /** @deprecated use `Field10$inboundSchema` instead. */
  export const inboundSchema = Field10$inboundSchema;
  /** @deprecated use `Field10$outboundSchema` instead. */
  export const outboundSchema = Field10$outboundSchema;
}

/** @internal */
export const Field9$inboundSchema: z.ZodNativeEnum<typeof Field9> = z
  .nativeEnum(Field9);

/** @internal */
export const Field9$outboundSchema: z.ZodNativeEnum<typeof Field9> =
  Field9$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field9$ {
  /** @deprecated use `Field9$inboundSchema` instead. */
  export const inboundSchema = Field9$inboundSchema;
  /** @deprecated use `Field9$outboundSchema` instead. */
  export const outboundSchema = Field9$outboundSchema;
}

/** @internal */
export const Field8$inboundSchema: z.ZodNativeEnum<typeof Field8> = z
  .nativeEnum(Field8);

/** @internal */
export const Field8$outboundSchema: z.ZodNativeEnum<typeof Field8> =
  Field8$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field8$ {
  /** @deprecated use `Field8$inboundSchema` instead. */
  export const inboundSchema = Field8$inboundSchema;
  /** @deprecated use `Field8$outboundSchema` instead. */
  export const outboundSchema = Field8$outboundSchema;
}

/** @internal */
export const QueryTableField7$inboundSchema: z.ZodNativeEnum<
  typeof QueryTableField7
> = z.nativeEnum(QueryTableField7);

/** @internal */
export const QueryTableField7$outboundSchema: z.ZodNativeEnum<
  typeof QueryTableField7
> = QueryTableField7$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableField7$ {
  /** @deprecated use `QueryTableField7$inboundSchema` instead. */
  export const inboundSchema = QueryTableField7$inboundSchema;
  /** @deprecated use `QueryTableField7$outboundSchema` instead. */
  export const outboundSchema = QueryTableField7$outboundSchema;
}

/** @internal */
export const QueryTableField6$inboundSchema: z.ZodNativeEnum<
  typeof QueryTableField6
> = z.nativeEnum(QueryTableField6);

/** @internal */
export const QueryTableField6$outboundSchema: z.ZodNativeEnum<
  typeof QueryTableField6
> = QueryTableField6$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableField6$ {
  /** @deprecated use `QueryTableField6$inboundSchema` instead. */
  export const inboundSchema = QueryTableField6$inboundSchema;
  /** @deprecated use `QueryTableField6$outboundSchema` instead. */
  export const outboundSchema = QueryTableField6$outboundSchema;
}

/** @internal */
export const QueryTableField5$inboundSchema: z.ZodNativeEnum<
  typeof QueryTableField5
> = z.nativeEnum(QueryTableField5);

/** @internal */
export const QueryTableField5$outboundSchema: z.ZodNativeEnum<
  typeof QueryTableField5
> = QueryTableField5$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableField5$ {
  /** @deprecated use `QueryTableField5$inboundSchema` instead. */
  export const inboundSchema = QueryTableField5$inboundSchema;
  /** @deprecated use `QueryTableField5$outboundSchema` instead. */
  export const outboundSchema = QueryTableField5$outboundSchema;
}

/** @internal */
export const QueryTableField4$inboundSchema: z.ZodNativeEnum<
  typeof QueryTableField4
> = z.nativeEnum(QueryTableField4);

/** @internal */
export const QueryTableField4$outboundSchema: z.ZodNativeEnum<
  typeof QueryTableField4
> = QueryTableField4$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableField4$ {
  /** @deprecated use `QueryTableField4$inboundSchema` instead. */
  export const inboundSchema = QueryTableField4$inboundSchema;
  /** @deprecated use `QueryTableField4$outboundSchema` instead. */
  export const outboundSchema = QueryTableField4$outboundSchema;
}

/** @internal */
export const QueryTableField3$inboundSchema: z.ZodNativeEnum<
  typeof QueryTableField3
> = z.nativeEnum(QueryTableField3);

/** @internal */
export const QueryTableField3$outboundSchema: z.ZodNativeEnum<
  typeof QueryTableField3
> = QueryTableField3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableField3$ {
  /** @deprecated use `QueryTableField3$inboundSchema` instead. */
  export const inboundSchema = QueryTableField3$inboundSchema;
  /** @deprecated use `QueryTableField3$outboundSchema` instead. */
  export const outboundSchema = QueryTableField3$outboundSchema;
}

/** @internal */
export const QueryTableField2$inboundSchema: z.ZodNativeEnum<
  typeof QueryTableField2
> = z.nativeEnum(QueryTableField2);

/** @internal */
export const QueryTableField2$outboundSchema: z.ZodNativeEnum<
  typeof QueryTableField2
> = QueryTableField2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableField2$ {
  /** @deprecated use `QueryTableField2$inboundSchema` instead. */
  export const inboundSchema = QueryTableField2$inboundSchema;
  /** @deprecated use `QueryTableField2$outboundSchema` instead. */
  export const outboundSchema = QueryTableField2$outboundSchema;
}

/** @internal */
export const QueryTableField1$inboundSchema: z.ZodNativeEnum<
  typeof QueryTableField1
> = z.nativeEnum(QueryTableField1);

/** @internal */
export const QueryTableField1$outboundSchema: z.ZodNativeEnum<
  typeof QueryTableField1
> = QueryTableField1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableField1$ {
  /** @deprecated use `QueryTableField1$inboundSchema` instead. */
  export const inboundSchema = QueryTableField1$inboundSchema;
  /** @deprecated use `QueryTableField1$outboundSchema` instead. */
  export const outboundSchema = QueryTableField1$outboundSchema;
}

/** @internal */
export const QueryTableField$inboundSchema: z.ZodType<
  QueryTableField,
  z.ZodTypeDef,
  unknown
> = z.union([
  QueryTableField1$inboundSchema,
  QueryTableField2$inboundSchema,
  QueryTableField3$inboundSchema,
  QueryTableField4$inboundSchema,
  QueryTableField5$inboundSchema,
  QueryTableField6$inboundSchema,
  QueryTableField7$inboundSchema,
  Field8$inboundSchema,
  Field9$inboundSchema,
  Field10$inboundSchema,
  Field11$inboundSchema,
  Field12$inboundSchema,
  Field13$inboundSchema,
  Field14$inboundSchema,
  Field15$inboundSchema,
  Field16$inboundSchema,
  Field17$inboundSchema,
  Field18$inboundSchema,
  Field19$inboundSchema,
  Field20$inboundSchema,
  Field21$inboundSchema,
  Field22$inboundSchema,
  Field23$inboundSchema,
  Field24$inboundSchema,
  Field25$inboundSchema,
  Field26$inboundSchema,
  Field27$inboundSchema,
  Field28$inboundSchema,
  Field29$inboundSchema,
  Field30$inboundSchema,
  Field31$inboundSchema,
]);

/** @internal */
export type QueryTableField$Outbound =
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string;

/** @internal */
export const QueryTableField$outboundSchema: z.ZodType<
  QueryTableField$Outbound,
  z.ZodTypeDef,
  QueryTableField
> = z.union([
  QueryTableField1$outboundSchema,
  QueryTableField2$outboundSchema,
  QueryTableField3$outboundSchema,
  QueryTableField4$outboundSchema,
  QueryTableField5$outboundSchema,
  QueryTableField6$outboundSchema,
  QueryTableField7$outboundSchema,
  Field8$outboundSchema,
  Field9$outboundSchema,
  Field10$outboundSchema,
  Field11$outboundSchema,
  Field12$outboundSchema,
  Field13$outboundSchema,
  Field14$outboundSchema,
  Field15$outboundSchema,
  Field16$outboundSchema,
  Field17$outboundSchema,
  Field18$outboundSchema,
  Field19$outboundSchema,
  Field20$outboundSchema,
  Field21$outboundSchema,
  Field22$outboundSchema,
  Field23$outboundSchema,
  Field24$outboundSchema,
  Field25$outboundSchema,
  Field26$outboundSchema,
  Field27$outboundSchema,
  Field28$outboundSchema,
  Field29$outboundSchema,
  Field30$outboundSchema,
  Field31$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableField$ {
  /** @deprecated use `QueryTableField$inboundSchema` instead. */
  export const inboundSchema = QueryTableField$inboundSchema;
  /** @deprecated use `QueryTableField$outboundSchema` instead. */
  export const outboundSchema = QueryTableField$outboundSchema;
  /** @deprecated use `QueryTableField$Outbound` instead. */
  export type Outbound = QueryTableField$Outbound;
}

export function queryTableFieldToJSON(
  queryTableField: QueryTableField,
): string {
  return JSON.stringify(QueryTableField$outboundSchema.parse(queryTableField));
}

export function queryTableFieldFromJSON(
  jsonString: string,
): SafeParseResult<QueryTableField, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => QueryTableField$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'QueryTableField' from JSON`,
  );
}

/** @internal */
export const QueryTableGroupBy$inboundSchema: z.ZodType<
  QueryTableGroupBy,
  z.ZodTypeDef,
  unknown
> = z.object({
  field: z.union([
    QueryTableField1$inboundSchema,
    QueryTableField2$inboundSchema,
    QueryTableField3$inboundSchema,
    QueryTableField4$inboundSchema,
    QueryTableField5$inboundSchema,
    QueryTableField6$inboundSchema,
    QueryTableField7$inboundSchema,
    Field8$inboundSchema,
    Field9$inboundSchema,
    Field10$inboundSchema,
    Field11$inboundSchema,
    Field12$inboundSchema,
    Field13$inboundSchema,
    Field14$inboundSchema,
    Field15$inboundSchema,
    Field16$inboundSchema,
    Field17$inboundSchema,
    Field18$inboundSchema,
    Field19$inboundSchema,
    Field20$inboundSchema,
    Field21$inboundSchema,
    Field22$inboundSchema,
    Field23$inboundSchema,
    Field24$inboundSchema,
    Field25$inboundSchema,
    Field26$inboundSchema,
    Field27$inboundSchema,
    Field28$inboundSchema,
    Field29$inboundSchema,
    Field30$inboundSchema,
    Field31$inboundSchema,
  ]),
});

/** @internal */
export type QueryTableGroupBy$Outbound = {
  field:
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string;
};

/** @internal */
export const QueryTableGroupBy$outboundSchema: z.ZodType<
  QueryTableGroupBy$Outbound,
  z.ZodTypeDef,
  QueryTableGroupBy
> = z.object({
  field: z.union([
    QueryTableField1$outboundSchema,
    QueryTableField2$outboundSchema,
    QueryTableField3$outboundSchema,
    QueryTableField4$outboundSchema,
    QueryTableField5$outboundSchema,
    QueryTableField6$outboundSchema,
    QueryTableField7$outboundSchema,
    Field8$outboundSchema,
    Field9$outboundSchema,
    Field10$outboundSchema,
    Field11$outboundSchema,
    Field12$outboundSchema,
    Field13$outboundSchema,
    Field14$outboundSchema,
    Field15$outboundSchema,
    Field16$outboundSchema,
    Field17$outboundSchema,
    Field18$outboundSchema,
    Field19$outboundSchema,
    Field20$outboundSchema,
    Field21$outboundSchema,
    Field22$outboundSchema,
    Field23$outboundSchema,
    Field24$outboundSchema,
    Field25$outboundSchema,
    Field26$outboundSchema,
    Field27$outboundSchema,
    Field28$outboundSchema,
    Field29$outboundSchema,
    Field30$outboundSchema,
    Field31$outboundSchema,
  ]),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableGroupBy$ {
  /** @deprecated use `QueryTableGroupBy$inboundSchema` instead. */
  export const inboundSchema = QueryTableGroupBy$inboundSchema;
  /** @deprecated use `QueryTableGroupBy$outboundSchema` instead. */
  export const outboundSchema = QueryTableGroupBy$outboundSchema;
  /** @deprecated use `QueryTableGroupBy$Outbound` instead. */
  export type Outbound = QueryTableGroupBy$Outbound;
}

export function queryTableGroupByToJSON(
  queryTableGroupBy: QueryTableGroupBy,
): string {
  return JSON.stringify(
    QueryTableGroupBy$outboundSchema.parse(queryTableGroupBy),
  );
}

export function queryTableGroupByFromJSON(
  jsonString: string,
): SafeParseResult<QueryTableGroupBy, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => QueryTableGroupBy$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'QueryTableGroupBy' from JSON`,
  );
}

/** @internal */
export const ThreeHundredAndTen$inboundSchema: z.ZodNativeEnum<
  typeof ThreeHundredAndTen
> = z.nativeEnum(ThreeHundredAndTen);

/** @internal */
export const ThreeHundredAndTen$outboundSchema: z.ZodNativeEnum<
  typeof ThreeHundredAndTen
> = ThreeHundredAndTen$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ThreeHundredAndTen$ {
  /** @deprecated use `ThreeHundredAndTen$inboundSchema` instead. */
  export const inboundSchema = ThreeHundredAndTen$inboundSchema;
  /** @deprecated use `ThreeHundredAndTen$outboundSchema` instead. */
  export const outboundSchema = ThreeHundredAndTen$outboundSchema;
}

/** @internal */
export const ThreeHundredAndNine$inboundSchema: z.ZodNativeEnum<
  typeof ThreeHundredAndNine
> = z.nativeEnum(ThreeHundredAndNine);

/** @internal */
export const ThreeHundredAndNine$outboundSchema: z.ZodNativeEnum<
  typeof ThreeHundredAndNine
> = ThreeHundredAndNine$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ThreeHundredAndNine$ {
  /** @deprecated use `ThreeHundredAndNine$inboundSchema` instead. */
  export const inboundSchema = ThreeHundredAndNine$inboundSchema;
  /** @deprecated use `ThreeHundredAndNine$outboundSchema` instead. */
  export const outboundSchema = ThreeHundredAndNine$outboundSchema;
}

/** @internal */
export const ThreeHundredAndEight$inboundSchema: z.ZodNativeEnum<
  typeof ThreeHundredAndEight
> = z.nativeEnum(ThreeHundredAndEight);

/** @internal */
export const ThreeHundredAndEight$outboundSchema: z.ZodNativeEnum<
  typeof ThreeHundredAndEight
> = ThreeHundredAndEight$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ThreeHundredAndEight$ {
  /** @deprecated use `ThreeHundredAndEight$inboundSchema` instead. */
  export const inboundSchema = ThreeHundredAndEight$inboundSchema;
  /** @deprecated use `ThreeHundredAndEight$outboundSchema` instead. */
  export const outboundSchema = ThreeHundredAndEight$outboundSchema;
}

/** @internal */
export const ThreeHundredAndSeven$inboundSchema: z.ZodNativeEnum<
  typeof ThreeHundredAndSeven
> = z.nativeEnum(ThreeHundredAndSeven);

/** @internal */
export const ThreeHundredAndSeven$outboundSchema: z.ZodNativeEnum<
  typeof ThreeHundredAndSeven
> = ThreeHundredAndSeven$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ThreeHundredAndSeven$ {
  /** @deprecated use `ThreeHundredAndSeven$inboundSchema` instead. */
  export const inboundSchema = ThreeHundredAndSeven$inboundSchema;
  /** @deprecated use `ThreeHundredAndSeven$outboundSchema` instead. */
  export const outboundSchema = ThreeHundredAndSeven$outboundSchema;
}

/** @internal */
export const ThreeHundredAndSix$inboundSchema: z.ZodNativeEnum<
  typeof ThreeHundredAndSix
> = z.nativeEnum(ThreeHundredAndSix);

/** @internal */
export const ThreeHundredAndSix$outboundSchema: z.ZodNativeEnum<
  typeof ThreeHundredAndSix
> = ThreeHundredAndSix$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ThreeHundredAndSix$ {
  /** @deprecated use `ThreeHundredAndSix$inboundSchema` instead. */
  export const inboundSchema = ThreeHundredAndSix$inboundSchema;
  /** @deprecated use `ThreeHundredAndSix$outboundSchema` instead. */
  export const outboundSchema = ThreeHundredAndSix$outboundSchema;
}

/** @internal */
export const ThreeHundredAndFive$inboundSchema: z.ZodNativeEnum<
  typeof ThreeHundredAndFive
> = z.nativeEnum(ThreeHundredAndFive);

/** @internal */
export const ThreeHundredAndFive$outboundSchema: z.ZodNativeEnum<
  typeof ThreeHundredAndFive
> = ThreeHundredAndFive$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ThreeHundredAndFive$ {
  /** @deprecated use `ThreeHundredAndFive$inboundSchema` instead. */
  export const inboundSchema = ThreeHundredAndFive$inboundSchema;
  /** @deprecated use `ThreeHundredAndFive$outboundSchema` instead. */
  export const outboundSchema = ThreeHundredAndFive$outboundSchema;
}

/** @internal */
export const ThreeHundredAndFour$inboundSchema: z.ZodNativeEnum<
  typeof ThreeHundredAndFour
> = z.nativeEnum(ThreeHundredAndFour);

/** @internal */
export const ThreeHundredAndFour$outboundSchema: z.ZodNativeEnum<
  typeof ThreeHundredAndFour
> = ThreeHundredAndFour$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ThreeHundredAndFour$ {
  /** @deprecated use `ThreeHundredAndFour$inboundSchema` instead. */
  export const inboundSchema = ThreeHundredAndFour$inboundSchema;
  /** @deprecated use `ThreeHundredAndFour$outboundSchema` instead. */
  export const outboundSchema = ThreeHundredAndFour$outboundSchema;
}

/** @internal */
export const ThreeHundredAndThree$inboundSchema: z.ZodNativeEnum<
  typeof ThreeHundredAndThree
> = z.nativeEnum(ThreeHundredAndThree);

/** @internal */
export const ThreeHundredAndThree$outboundSchema: z.ZodNativeEnum<
  typeof ThreeHundredAndThree
> = ThreeHundredAndThree$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ThreeHundredAndThree$ {
  /** @deprecated use `ThreeHundredAndThree$inboundSchema` instead. */
  export const inboundSchema = ThreeHundredAndThree$inboundSchema;
  /** @deprecated use `ThreeHundredAndThree$outboundSchema` instead. */
  export const outboundSchema = ThreeHundredAndThree$outboundSchema;
}

/** @internal */
export const ThreeHundredAndTwo$inboundSchema: z.ZodNativeEnum<
  typeof ThreeHundredAndTwo
> = z.nativeEnum(ThreeHundredAndTwo);

/** @internal */
export const ThreeHundredAndTwo$outboundSchema: z.ZodNativeEnum<
  typeof ThreeHundredAndTwo
> = ThreeHundredAndTwo$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ThreeHundredAndTwo$ {
  /** @deprecated use `ThreeHundredAndTwo$inboundSchema` instead. */
  export const inboundSchema = ThreeHundredAndTwo$inboundSchema;
  /** @deprecated use `ThreeHundredAndTwo$outboundSchema` instead. */
  export const outboundSchema = ThreeHundredAndTwo$outboundSchema;
}

/** @internal */
export const ThreeHundredAndOne$inboundSchema: z.ZodNativeEnum<
  typeof ThreeHundredAndOne
> = z.nativeEnum(ThreeHundredAndOne);

/** @internal */
export const ThreeHundredAndOne$outboundSchema: z.ZodNativeEnum<
  typeof ThreeHundredAndOne
> = ThreeHundredAndOne$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ThreeHundredAndOne$ {
  /** @deprecated use `ThreeHundredAndOne$inboundSchema` instead. */
  export const inboundSchema = ThreeHundredAndOne$inboundSchema;
  /** @deprecated use `ThreeHundredAndOne$outboundSchema` instead. */
  export const outboundSchema = ThreeHundredAndOne$outboundSchema;
}

/** @internal */
export const ThreeHundred$inboundSchema: z.ZodNativeEnum<typeof ThreeHundred> =
  z.nativeEnum(ThreeHundred);

/** @internal */
export const ThreeHundred$outboundSchema: z.ZodNativeEnum<typeof ThreeHundred> =
  ThreeHundred$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ThreeHundred$ {
  /** @deprecated use `ThreeHundred$inboundSchema` instead. */
  export const inboundSchema = ThreeHundred$inboundSchema;
  /** @deprecated use `ThreeHundred$outboundSchema` instead. */
  export const outboundSchema = ThreeHundred$outboundSchema;
}

/** @internal */
export const TwoHundredAndNinetyNine$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndNinetyNine
> = z.nativeEnum(TwoHundredAndNinetyNine);

/** @internal */
export const TwoHundredAndNinetyNine$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndNinetyNine
> = TwoHundredAndNinetyNine$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndNinetyNine$ {
  /** @deprecated use `TwoHundredAndNinetyNine$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndNinetyNine$inboundSchema;
  /** @deprecated use `TwoHundredAndNinetyNine$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndNinetyNine$outboundSchema;
}

/** @internal */
export const TwoHundredAndNinetyEight$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndNinetyEight
> = z.nativeEnum(TwoHundredAndNinetyEight);

/** @internal */
export const TwoHundredAndNinetyEight$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndNinetyEight
> = TwoHundredAndNinetyEight$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndNinetyEight$ {
  /** @deprecated use `TwoHundredAndNinetyEight$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndNinetyEight$inboundSchema;
  /** @deprecated use `TwoHundredAndNinetyEight$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndNinetyEight$outboundSchema;
}

/** @internal */
export const TwoHundredAndNinetySeven$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndNinetySeven
> = z.nativeEnum(TwoHundredAndNinetySeven);

/** @internal */
export const TwoHundredAndNinetySeven$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndNinetySeven
> = TwoHundredAndNinetySeven$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndNinetySeven$ {
  /** @deprecated use `TwoHundredAndNinetySeven$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndNinetySeven$inboundSchema;
  /** @deprecated use `TwoHundredAndNinetySeven$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndNinetySeven$outboundSchema;
}

/** @internal */
export const TwoHundredAndNinetySix$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndNinetySix
> = z.nativeEnum(TwoHundredAndNinetySix);

/** @internal */
export const TwoHundredAndNinetySix$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndNinetySix
> = TwoHundredAndNinetySix$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndNinetySix$ {
  /** @deprecated use `TwoHundredAndNinetySix$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndNinetySix$inboundSchema;
  /** @deprecated use `TwoHundredAndNinetySix$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndNinetySix$outboundSchema;
}

/** @internal */
export const TwoHundredAndNinetyFive$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndNinetyFive
> = z.nativeEnum(TwoHundredAndNinetyFive);

/** @internal */
export const TwoHundredAndNinetyFive$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndNinetyFive
> = TwoHundredAndNinetyFive$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndNinetyFive$ {
  /** @deprecated use `TwoHundredAndNinetyFive$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndNinetyFive$inboundSchema;
  /** @deprecated use `TwoHundredAndNinetyFive$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndNinetyFive$outboundSchema;
}

/** @internal */
export const TwoHundredAndNinetyFour$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndNinetyFour
> = z.nativeEnum(TwoHundredAndNinetyFour);

/** @internal */
export const TwoHundredAndNinetyFour$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndNinetyFour
> = TwoHundredAndNinetyFour$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndNinetyFour$ {
  /** @deprecated use `TwoHundredAndNinetyFour$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndNinetyFour$inboundSchema;
  /** @deprecated use `TwoHundredAndNinetyFour$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndNinetyFour$outboundSchema;
}

/** @internal */
export const TwoHundredAndNinetyThree$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndNinetyThree
> = z.nativeEnum(TwoHundredAndNinetyThree);

/** @internal */
export const TwoHundredAndNinetyThree$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndNinetyThree
> = TwoHundredAndNinetyThree$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndNinetyThree$ {
  /** @deprecated use `TwoHundredAndNinetyThree$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndNinetyThree$inboundSchema;
  /** @deprecated use `TwoHundredAndNinetyThree$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndNinetyThree$outboundSchema;
}

/** @internal */
export const TwoHundredAndNinetyTwo$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndNinetyTwo
> = z.nativeEnum(TwoHundredAndNinetyTwo);

/** @internal */
export const TwoHundredAndNinetyTwo$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndNinetyTwo
> = TwoHundredAndNinetyTwo$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndNinetyTwo$ {
  /** @deprecated use `TwoHundredAndNinetyTwo$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndNinetyTwo$inboundSchema;
  /** @deprecated use `TwoHundredAndNinetyTwo$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndNinetyTwo$outboundSchema;
}

/** @internal */
export const TwoHundredAndNinetyOne$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndNinetyOne
> = z.nativeEnum(TwoHundredAndNinetyOne);

/** @internal */
export const TwoHundredAndNinetyOne$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndNinetyOne
> = TwoHundredAndNinetyOne$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndNinetyOne$ {
  /** @deprecated use `TwoHundredAndNinetyOne$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndNinetyOne$inboundSchema;
  /** @deprecated use `TwoHundredAndNinetyOne$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndNinetyOne$outboundSchema;
}

/** @internal */
export const TwoHundredAndNinety$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndNinety
> = z.nativeEnum(TwoHundredAndNinety);

/** @internal */
export const TwoHundredAndNinety$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndNinety
> = TwoHundredAndNinety$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndNinety$ {
  /** @deprecated use `TwoHundredAndNinety$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndNinety$inboundSchema;
  /** @deprecated use `TwoHundredAndNinety$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndNinety$outboundSchema;
}

/** @internal */
export const TwoHundredAndEightyNine$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndEightyNine
> = z.nativeEnum(TwoHundredAndEightyNine);

/** @internal */
export const TwoHundredAndEightyNine$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndEightyNine
> = TwoHundredAndEightyNine$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndEightyNine$ {
  /** @deprecated use `TwoHundredAndEightyNine$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndEightyNine$inboundSchema;
  /** @deprecated use `TwoHundredAndEightyNine$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndEightyNine$outboundSchema;
}

/** @internal */
export const TwoHundredAndEightyEight$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndEightyEight
> = z.nativeEnum(TwoHundredAndEightyEight);

/** @internal */
export const TwoHundredAndEightyEight$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndEightyEight
> = TwoHundredAndEightyEight$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndEightyEight$ {
  /** @deprecated use `TwoHundredAndEightyEight$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndEightyEight$inboundSchema;
  /** @deprecated use `TwoHundredAndEightyEight$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndEightyEight$outboundSchema;
}

/** @internal */
export const TwoHundredAndEightySeven$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndEightySeven
> = z.nativeEnum(TwoHundredAndEightySeven);

/** @internal */
export const TwoHundredAndEightySeven$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndEightySeven
> = TwoHundredAndEightySeven$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndEightySeven$ {
  /** @deprecated use `TwoHundredAndEightySeven$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndEightySeven$inboundSchema;
  /** @deprecated use `TwoHundredAndEightySeven$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndEightySeven$outboundSchema;
}

/** @internal */
export const TwoHundredAndEightySix$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndEightySix
> = z.nativeEnum(TwoHundredAndEightySix);

/** @internal */
export const TwoHundredAndEightySix$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndEightySix
> = TwoHundredAndEightySix$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndEightySix$ {
  /** @deprecated use `TwoHundredAndEightySix$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndEightySix$inboundSchema;
  /** @deprecated use `TwoHundredAndEightySix$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndEightySix$outboundSchema;
}

/** @internal */
export const TwoHundredAndEightyFive$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndEightyFive
> = z.nativeEnum(TwoHundredAndEightyFive);

/** @internal */
export const TwoHundredAndEightyFive$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndEightyFive
> = TwoHundredAndEightyFive$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndEightyFive$ {
  /** @deprecated use `TwoHundredAndEightyFive$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndEightyFive$inboundSchema;
  /** @deprecated use `TwoHundredAndEightyFive$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndEightyFive$outboundSchema;
}

/** @internal */
export const TwoHundredAndEightyFour$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndEightyFour
> = z.nativeEnum(TwoHundredAndEightyFour);

/** @internal */
export const TwoHundredAndEightyFour$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndEightyFour
> = TwoHundredAndEightyFour$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndEightyFour$ {
  /** @deprecated use `TwoHundredAndEightyFour$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndEightyFour$inboundSchema;
  /** @deprecated use `TwoHundredAndEightyFour$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndEightyFour$outboundSchema;
}

/** @internal */
export const TwoHundredAndEightyThree$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndEightyThree
> = z.nativeEnum(TwoHundredAndEightyThree);

/** @internal */
export const TwoHundredAndEightyThree$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndEightyThree
> = TwoHundredAndEightyThree$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndEightyThree$ {
  /** @deprecated use `TwoHundredAndEightyThree$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndEightyThree$inboundSchema;
  /** @deprecated use `TwoHundredAndEightyThree$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndEightyThree$outboundSchema;
}

/** @internal */
export const TwoHundredAndEightyTwo$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndEightyTwo
> = z.nativeEnum(TwoHundredAndEightyTwo);

/** @internal */
export const TwoHundredAndEightyTwo$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndEightyTwo
> = TwoHundredAndEightyTwo$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndEightyTwo$ {
  /** @deprecated use `TwoHundredAndEightyTwo$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndEightyTwo$inboundSchema;
  /** @deprecated use `TwoHundredAndEightyTwo$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndEightyTwo$outboundSchema;
}

/** @internal */
export const TwoHundredAndEightyOne$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndEightyOne
> = z.nativeEnum(TwoHundredAndEightyOne);

/** @internal */
export const TwoHundredAndEightyOne$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndEightyOne
> = TwoHundredAndEightyOne$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndEightyOne$ {
  /** @deprecated use `TwoHundredAndEightyOne$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndEightyOne$inboundSchema;
  /** @deprecated use `TwoHundredAndEightyOne$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndEightyOne$outboundSchema;
}

/** @internal */
export const TwoHundredAndEighty$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndEighty
> = z.nativeEnum(TwoHundredAndEighty);

/** @internal */
export const TwoHundredAndEighty$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndEighty
> = TwoHundredAndEighty$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndEighty$ {
  /** @deprecated use `TwoHundredAndEighty$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndEighty$inboundSchema;
  /** @deprecated use `TwoHundredAndEighty$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndEighty$outboundSchema;
}

/** @internal */
export const TwoHundredAndSeventyNine$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSeventyNine
> = z.nativeEnum(TwoHundredAndSeventyNine);

/** @internal */
export const TwoHundredAndSeventyNine$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSeventyNine
> = TwoHundredAndSeventyNine$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndSeventyNine$ {
  /** @deprecated use `TwoHundredAndSeventyNine$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndSeventyNine$inboundSchema;
  /** @deprecated use `TwoHundredAndSeventyNine$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndSeventyNine$outboundSchema;
}

/** @internal */
export const TwoHundredAndSeventyEight$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSeventyEight
> = z.nativeEnum(TwoHundredAndSeventyEight);

/** @internal */
export const TwoHundredAndSeventyEight$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSeventyEight
> = TwoHundredAndSeventyEight$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndSeventyEight$ {
  /** @deprecated use `TwoHundredAndSeventyEight$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndSeventyEight$inboundSchema;
  /** @deprecated use `TwoHundredAndSeventyEight$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndSeventyEight$outboundSchema;
}

/** @internal */
export const TwoHundredAndSeventySeven$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSeventySeven
> = z.nativeEnum(TwoHundredAndSeventySeven);

/** @internal */
export const TwoHundredAndSeventySeven$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSeventySeven
> = TwoHundredAndSeventySeven$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndSeventySeven$ {
  /** @deprecated use `TwoHundredAndSeventySeven$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndSeventySeven$inboundSchema;
  /** @deprecated use `TwoHundredAndSeventySeven$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndSeventySeven$outboundSchema;
}

/** @internal */
export const TwoHundredAndSeventySix$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSeventySix
> = z.nativeEnum(TwoHundredAndSeventySix);

/** @internal */
export const TwoHundredAndSeventySix$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSeventySix
> = TwoHundredAndSeventySix$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndSeventySix$ {
  /** @deprecated use `TwoHundredAndSeventySix$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndSeventySix$inboundSchema;
  /** @deprecated use `TwoHundredAndSeventySix$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndSeventySix$outboundSchema;
}

/** @internal */
export const TwoHundredAndSeventyFive$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSeventyFive
> = z.nativeEnum(TwoHundredAndSeventyFive);

/** @internal */
export const TwoHundredAndSeventyFive$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSeventyFive
> = TwoHundredAndSeventyFive$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndSeventyFive$ {
  /** @deprecated use `TwoHundredAndSeventyFive$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndSeventyFive$inboundSchema;
  /** @deprecated use `TwoHundredAndSeventyFive$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndSeventyFive$outboundSchema;
}

/** @internal */
export const TwoHundredAndSeventyFour$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSeventyFour
> = z.nativeEnum(TwoHundredAndSeventyFour);

/** @internal */
export const TwoHundredAndSeventyFour$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSeventyFour
> = TwoHundredAndSeventyFour$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndSeventyFour$ {
  /** @deprecated use `TwoHundredAndSeventyFour$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndSeventyFour$inboundSchema;
  /** @deprecated use `TwoHundredAndSeventyFour$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndSeventyFour$outboundSchema;
}

/** @internal */
export const TwoHundredAndSeventyThree$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSeventyThree
> = z.nativeEnum(TwoHundredAndSeventyThree);

/** @internal */
export const TwoHundredAndSeventyThree$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSeventyThree
> = TwoHundredAndSeventyThree$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndSeventyThree$ {
  /** @deprecated use `TwoHundredAndSeventyThree$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndSeventyThree$inboundSchema;
  /** @deprecated use `TwoHundredAndSeventyThree$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndSeventyThree$outboundSchema;
}

/** @internal */
export const TwoHundredAndSeventyTwo$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSeventyTwo
> = z.nativeEnum(TwoHundredAndSeventyTwo);

/** @internal */
export const TwoHundredAndSeventyTwo$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSeventyTwo
> = TwoHundredAndSeventyTwo$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndSeventyTwo$ {
  /** @deprecated use `TwoHundredAndSeventyTwo$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndSeventyTwo$inboundSchema;
  /** @deprecated use `TwoHundredAndSeventyTwo$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndSeventyTwo$outboundSchema;
}

/** @internal */
export const TwoHundredAndSeventyOne$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSeventyOne
> = z.nativeEnum(TwoHundredAndSeventyOne);

/** @internal */
export const TwoHundredAndSeventyOne$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSeventyOne
> = TwoHundredAndSeventyOne$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndSeventyOne$ {
  /** @deprecated use `TwoHundredAndSeventyOne$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndSeventyOne$inboundSchema;
  /** @deprecated use `TwoHundredAndSeventyOne$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndSeventyOne$outboundSchema;
}

/** @internal */
export const TwoHundredAndSeventy$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSeventy
> = z.nativeEnum(TwoHundredAndSeventy);

/** @internal */
export const TwoHundredAndSeventy$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSeventy
> = TwoHundredAndSeventy$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndSeventy$ {
  /** @deprecated use `TwoHundredAndSeventy$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndSeventy$inboundSchema;
  /** @deprecated use `TwoHundredAndSeventy$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndSeventy$outboundSchema;
}

/** @internal */
export const TwoHundredAndSixtyNine$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSixtyNine
> = z.nativeEnum(TwoHundredAndSixtyNine);

/** @internal */
export const TwoHundredAndSixtyNine$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSixtyNine
> = TwoHundredAndSixtyNine$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndSixtyNine$ {
  /** @deprecated use `TwoHundredAndSixtyNine$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndSixtyNine$inboundSchema;
  /** @deprecated use `TwoHundredAndSixtyNine$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndSixtyNine$outboundSchema;
}

/** @internal */
export const TwoHundredAndSixtyEight$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSixtyEight
> = z.nativeEnum(TwoHundredAndSixtyEight);

/** @internal */
export const TwoHundredAndSixtyEight$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSixtyEight
> = TwoHundredAndSixtyEight$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndSixtyEight$ {
  /** @deprecated use `TwoHundredAndSixtyEight$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndSixtyEight$inboundSchema;
  /** @deprecated use `TwoHundredAndSixtyEight$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndSixtyEight$outboundSchema;
}

/** @internal */
export const TwoHundredAndSixtySeven$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSixtySeven
> = z.nativeEnum(TwoHundredAndSixtySeven);

/** @internal */
export const TwoHundredAndSixtySeven$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSixtySeven
> = TwoHundredAndSixtySeven$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndSixtySeven$ {
  /** @deprecated use `TwoHundredAndSixtySeven$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndSixtySeven$inboundSchema;
  /** @deprecated use `TwoHundredAndSixtySeven$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndSixtySeven$outboundSchema;
}

/** @internal */
export const TwoHundredAndSixtySix$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSixtySix
> = z.nativeEnum(TwoHundredAndSixtySix);

/** @internal */
export const TwoHundredAndSixtySix$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSixtySix
> = TwoHundredAndSixtySix$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndSixtySix$ {
  /** @deprecated use `TwoHundredAndSixtySix$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndSixtySix$inboundSchema;
  /** @deprecated use `TwoHundredAndSixtySix$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndSixtySix$outboundSchema;
}

/** @internal */
export const TwoHundredAndSixtyFive$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSixtyFive
> = z.nativeEnum(TwoHundredAndSixtyFive);

/** @internal */
export const TwoHundredAndSixtyFive$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSixtyFive
> = TwoHundredAndSixtyFive$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndSixtyFive$ {
  /** @deprecated use `TwoHundredAndSixtyFive$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndSixtyFive$inboundSchema;
  /** @deprecated use `TwoHundredAndSixtyFive$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndSixtyFive$outboundSchema;
}

/** @internal */
export const TwoHundredAndSixtyFour$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSixtyFour
> = z.nativeEnum(TwoHundredAndSixtyFour);

/** @internal */
export const TwoHundredAndSixtyFour$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSixtyFour
> = TwoHundredAndSixtyFour$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndSixtyFour$ {
  /** @deprecated use `TwoHundredAndSixtyFour$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndSixtyFour$inboundSchema;
  /** @deprecated use `TwoHundredAndSixtyFour$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndSixtyFour$outboundSchema;
}

/** @internal */
export const TwoHundredAndSixtyThree$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSixtyThree
> = z.nativeEnum(TwoHundredAndSixtyThree);

/** @internal */
export const TwoHundredAndSixtyThree$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSixtyThree
> = TwoHundredAndSixtyThree$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndSixtyThree$ {
  /** @deprecated use `TwoHundredAndSixtyThree$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndSixtyThree$inboundSchema;
  /** @deprecated use `TwoHundredAndSixtyThree$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndSixtyThree$outboundSchema;
}

/** @internal */
export const TwoHundredAndSixtyTwo$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSixtyTwo
> = z.nativeEnum(TwoHundredAndSixtyTwo);

/** @internal */
export const TwoHundredAndSixtyTwo$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSixtyTwo
> = TwoHundredAndSixtyTwo$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndSixtyTwo$ {
  /** @deprecated use `TwoHundredAndSixtyTwo$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndSixtyTwo$inboundSchema;
  /** @deprecated use `TwoHundredAndSixtyTwo$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndSixtyTwo$outboundSchema;
}

/** @internal */
export const TwoHundredAndSixtyOne$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSixtyOne
> = z.nativeEnum(TwoHundredAndSixtyOne);

/** @internal */
export const TwoHundredAndSixtyOne$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSixtyOne
> = TwoHundredAndSixtyOne$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndSixtyOne$ {
  /** @deprecated use `TwoHundredAndSixtyOne$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndSixtyOne$inboundSchema;
  /** @deprecated use `TwoHundredAndSixtyOne$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndSixtyOne$outboundSchema;
}

/** @internal */
export const TwoHundredAndSixty$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSixty
> = z.nativeEnum(TwoHundredAndSixty);

/** @internal */
export const TwoHundredAndSixty$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSixty
> = TwoHundredAndSixty$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndSixty$ {
  /** @deprecated use `TwoHundredAndSixty$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndSixty$inboundSchema;
  /** @deprecated use `TwoHundredAndSixty$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndSixty$outboundSchema;
}

/** @internal */
export const TwoHundredAndFiftyNine$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndFiftyNine
> = z.nativeEnum(TwoHundredAndFiftyNine);

/** @internal */
export const TwoHundredAndFiftyNine$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndFiftyNine
> = TwoHundredAndFiftyNine$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndFiftyNine$ {
  /** @deprecated use `TwoHundredAndFiftyNine$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndFiftyNine$inboundSchema;
  /** @deprecated use `TwoHundredAndFiftyNine$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndFiftyNine$outboundSchema;
}

/** @internal */
export const TwoHundredAndFiftyEight$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndFiftyEight
> = z.nativeEnum(TwoHundredAndFiftyEight);

/** @internal */
export const TwoHundredAndFiftyEight$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndFiftyEight
> = TwoHundredAndFiftyEight$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndFiftyEight$ {
  /** @deprecated use `TwoHundredAndFiftyEight$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndFiftyEight$inboundSchema;
  /** @deprecated use `TwoHundredAndFiftyEight$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndFiftyEight$outboundSchema;
}

/** @internal */
export const TwoHundredAndFiftySeven$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndFiftySeven
> = z.nativeEnum(TwoHundredAndFiftySeven);

/** @internal */
export const TwoHundredAndFiftySeven$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndFiftySeven
> = TwoHundredAndFiftySeven$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndFiftySeven$ {
  /** @deprecated use `TwoHundredAndFiftySeven$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndFiftySeven$inboundSchema;
  /** @deprecated use `TwoHundredAndFiftySeven$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndFiftySeven$outboundSchema;
}

/** @internal */
export const TwoHundredAndFiftySix$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndFiftySix
> = z.nativeEnum(TwoHundredAndFiftySix);

/** @internal */
export const TwoHundredAndFiftySix$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndFiftySix
> = TwoHundredAndFiftySix$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndFiftySix$ {
  /** @deprecated use `TwoHundredAndFiftySix$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndFiftySix$inboundSchema;
  /** @deprecated use `TwoHundredAndFiftySix$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndFiftySix$outboundSchema;
}

/** @internal */
export const TwoHundredAndFiftyFive$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndFiftyFive
> = z.nativeEnum(TwoHundredAndFiftyFive);

/** @internal */
export const TwoHundredAndFiftyFive$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndFiftyFive
> = TwoHundredAndFiftyFive$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndFiftyFive$ {
  /** @deprecated use `TwoHundredAndFiftyFive$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndFiftyFive$inboundSchema;
  /** @deprecated use `TwoHundredAndFiftyFive$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndFiftyFive$outboundSchema;
}

/** @internal */
export const TwoHundredAndFiftyFour$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndFiftyFour
> = z.nativeEnum(TwoHundredAndFiftyFour);

/** @internal */
export const TwoHundredAndFiftyFour$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndFiftyFour
> = TwoHundredAndFiftyFour$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndFiftyFour$ {
  /** @deprecated use `TwoHundredAndFiftyFour$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndFiftyFour$inboundSchema;
  /** @deprecated use `TwoHundredAndFiftyFour$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndFiftyFour$outboundSchema;
}

/** @internal */
export const TwoHundredAndFiftyThree$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndFiftyThree
> = z.nativeEnum(TwoHundredAndFiftyThree);

/** @internal */
export const TwoHundredAndFiftyThree$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndFiftyThree
> = TwoHundredAndFiftyThree$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndFiftyThree$ {
  /** @deprecated use `TwoHundredAndFiftyThree$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndFiftyThree$inboundSchema;
  /** @deprecated use `TwoHundredAndFiftyThree$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndFiftyThree$outboundSchema;
}

/** @internal */
export const TwoHundredAndFiftyTwo$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndFiftyTwo
> = z.nativeEnum(TwoHundredAndFiftyTwo);

/** @internal */
export const TwoHundredAndFiftyTwo$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndFiftyTwo
> = TwoHundredAndFiftyTwo$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndFiftyTwo$ {
  /** @deprecated use `TwoHundredAndFiftyTwo$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndFiftyTwo$inboundSchema;
  /** @deprecated use `TwoHundredAndFiftyTwo$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndFiftyTwo$outboundSchema;
}

/** @internal */
export const TwoHundredAndFiftyOne$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndFiftyOne
> = z.nativeEnum(TwoHundredAndFiftyOne);

/** @internal */
export const TwoHundredAndFiftyOne$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndFiftyOne
> = TwoHundredAndFiftyOne$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndFiftyOne$ {
  /** @deprecated use `TwoHundredAndFiftyOne$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndFiftyOne$inboundSchema;
  /** @deprecated use `TwoHundredAndFiftyOne$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndFiftyOne$outboundSchema;
}

/** @internal */
export const TwoHundredAndFifty$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndFifty
> = z.nativeEnum(TwoHundredAndFifty);

/** @internal */
export const TwoHundredAndFifty$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndFifty
> = TwoHundredAndFifty$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndFifty$ {
  /** @deprecated use `TwoHundredAndFifty$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndFifty$inboundSchema;
  /** @deprecated use `TwoHundredAndFifty$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndFifty$outboundSchema;
}

/** @internal */
export const TwoHundredAndFortyNine$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndFortyNine
> = z.nativeEnum(TwoHundredAndFortyNine);

/** @internal */
export const TwoHundredAndFortyNine$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndFortyNine
> = TwoHundredAndFortyNine$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndFortyNine$ {
  /** @deprecated use `TwoHundredAndFortyNine$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndFortyNine$inboundSchema;
  /** @deprecated use `TwoHundredAndFortyNine$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndFortyNine$outboundSchema;
}

/** @internal */
export const TwoHundredAndFortyEight$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndFortyEight
> = z.nativeEnum(TwoHundredAndFortyEight);

/** @internal */
export const TwoHundredAndFortyEight$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndFortyEight
> = TwoHundredAndFortyEight$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndFortyEight$ {
  /** @deprecated use `TwoHundredAndFortyEight$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndFortyEight$inboundSchema;
  /** @deprecated use `TwoHundredAndFortyEight$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndFortyEight$outboundSchema;
}

/** @internal */
export const TwoHundredAndFortySeven$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndFortySeven
> = z.nativeEnum(TwoHundredAndFortySeven);

/** @internal */
export const TwoHundredAndFortySeven$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndFortySeven
> = TwoHundredAndFortySeven$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndFortySeven$ {
  /** @deprecated use `TwoHundredAndFortySeven$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndFortySeven$inboundSchema;
  /** @deprecated use `TwoHundredAndFortySeven$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndFortySeven$outboundSchema;
}

/** @internal */
export const TwoHundredAndFortySix$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndFortySix
> = z.nativeEnum(TwoHundredAndFortySix);

/** @internal */
export const TwoHundredAndFortySix$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndFortySix
> = TwoHundredAndFortySix$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndFortySix$ {
  /** @deprecated use `TwoHundredAndFortySix$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndFortySix$inboundSchema;
  /** @deprecated use `TwoHundredAndFortySix$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndFortySix$outboundSchema;
}

/** @internal */
export const TwoHundredAndFortyFive$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndFortyFive
> = z.nativeEnum(TwoHundredAndFortyFive);

/** @internal */
export const TwoHundredAndFortyFive$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndFortyFive
> = TwoHundredAndFortyFive$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndFortyFive$ {
  /** @deprecated use `TwoHundredAndFortyFive$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndFortyFive$inboundSchema;
  /** @deprecated use `TwoHundredAndFortyFive$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndFortyFive$outboundSchema;
}

/** @internal */
export const TwoHundredAndFortyFour$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndFortyFour
> = z.nativeEnum(TwoHundredAndFortyFour);

/** @internal */
export const TwoHundredAndFortyFour$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndFortyFour
> = TwoHundredAndFortyFour$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndFortyFour$ {
  /** @deprecated use `TwoHundredAndFortyFour$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndFortyFour$inboundSchema;
  /** @deprecated use `TwoHundredAndFortyFour$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndFortyFour$outboundSchema;
}

/** @internal */
export const TwoHundredAndFortyThree$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndFortyThree
> = z.nativeEnum(TwoHundredAndFortyThree);

/** @internal */
export const TwoHundredAndFortyThree$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndFortyThree
> = TwoHundredAndFortyThree$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndFortyThree$ {
  /** @deprecated use `TwoHundredAndFortyThree$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndFortyThree$inboundSchema;
  /** @deprecated use `TwoHundredAndFortyThree$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndFortyThree$outboundSchema;
}

/** @internal */
export const TwoHundredAndFortyTwo$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndFortyTwo
> = z.nativeEnum(TwoHundredAndFortyTwo);

/** @internal */
export const TwoHundredAndFortyTwo$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndFortyTwo
> = TwoHundredAndFortyTwo$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndFortyTwo$ {
  /** @deprecated use `TwoHundredAndFortyTwo$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndFortyTwo$inboundSchema;
  /** @deprecated use `TwoHundredAndFortyTwo$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndFortyTwo$outboundSchema;
}

/** @internal */
export const TwoHundredAndFortyOne$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndFortyOne
> = z.nativeEnum(TwoHundredAndFortyOne);

/** @internal */
export const TwoHundredAndFortyOne$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndFortyOne
> = TwoHundredAndFortyOne$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndFortyOne$ {
  /** @deprecated use `TwoHundredAndFortyOne$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndFortyOne$inboundSchema;
  /** @deprecated use `TwoHundredAndFortyOne$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndFortyOne$outboundSchema;
}

/** @internal */
export const TwoHundredAndForty$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndForty
> = z.nativeEnum(TwoHundredAndForty);

/** @internal */
export const TwoHundredAndForty$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndForty
> = TwoHundredAndForty$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndForty$ {
  /** @deprecated use `TwoHundredAndForty$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndForty$inboundSchema;
  /** @deprecated use `TwoHundredAndForty$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndForty$outboundSchema;
}

/** @internal */
export const TwoHundredAndThirtyNine$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndThirtyNine
> = z.nativeEnum(TwoHundredAndThirtyNine);

/** @internal */
export const TwoHundredAndThirtyNine$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndThirtyNine
> = TwoHundredAndThirtyNine$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndThirtyNine$ {
  /** @deprecated use `TwoHundredAndThirtyNine$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndThirtyNine$inboundSchema;
  /** @deprecated use `TwoHundredAndThirtyNine$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndThirtyNine$outboundSchema;
}

/** @internal */
export const TwoHundredAndThirtyEight$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndThirtyEight
> = z.nativeEnum(TwoHundredAndThirtyEight);

/** @internal */
export const TwoHundredAndThirtyEight$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndThirtyEight
> = TwoHundredAndThirtyEight$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndThirtyEight$ {
  /** @deprecated use `TwoHundredAndThirtyEight$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndThirtyEight$inboundSchema;
  /** @deprecated use `TwoHundredAndThirtyEight$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndThirtyEight$outboundSchema;
}

/** @internal */
export const TwoHundredAndThirtySeven$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndThirtySeven
> = z.nativeEnum(TwoHundredAndThirtySeven);

/** @internal */
export const TwoHundredAndThirtySeven$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndThirtySeven
> = TwoHundredAndThirtySeven$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndThirtySeven$ {
  /** @deprecated use `TwoHundredAndThirtySeven$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndThirtySeven$inboundSchema;
  /** @deprecated use `TwoHundredAndThirtySeven$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndThirtySeven$outboundSchema;
}

/** @internal */
export const TwoHundredAndThirtySix$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndThirtySix
> = z.nativeEnum(TwoHundredAndThirtySix);

/** @internal */
export const TwoHundredAndThirtySix$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndThirtySix
> = TwoHundredAndThirtySix$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndThirtySix$ {
  /** @deprecated use `TwoHundredAndThirtySix$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndThirtySix$inboundSchema;
  /** @deprecated use `TwoHundredAndThirtySix$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndThirtySix$outboundSchema;
}

/** @internal */
export const TwoHundredAndThirtyFive$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndThirtyFive
> = z.nativeEnum(TwoHundredAndThirtyFive);

/** @internal */
export const TwoHundredAndThirtyFive$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndThirtyFive
> = TwoHundredAndThirtyFive$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndThirtyFive$ {
  /** @deprecated use `TwoHundredAndThirtyFive$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndThirtyFive$inboundSchema;
  /** @deprecated use `TwoHundredAndThirtyFive$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndThirtyFive$outboundSchema;
}

/** @internal */
export const TwoHundredAndThirtyFour$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndThirtyFour
> = z.nativeEnum(TwoHundredAndThirtyFour);

/** @internal */
export const TwoHundredAndThirtyFour$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndThirtyFour
> = TwoHundredAndThirtyFour$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndThirtyFour$ {
  /** @deprecated use `TwoHundredAndThirtyFour$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndThirtyFour$inboundSchema;
  /** @deprecated use `TwoHundredAndThirtyFour$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndThirtyFour$outboundSchema;
}

/** @internal */
export const TwoHundredAndThirtyThree$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndThirtyThree
> = z.nativeEnum(TwoHundredAndThirtyThree);

/** @internal */
export const TwoHundredAndThirtyThree$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndThirtyThree
> = TwoHundredAndThirtyThree$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndThirtyThree$ {
  /** @deprecated use `TwoHundredAndThirtyThree$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndThirtyThree$inboundSchema;
  /** @deprecated use `TwoHundredAndThirtyThree$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndThirtyThree$outboundSchema;
}

/** @internal */
export const TwoHundredAndThirtyTwo$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndThirtyTwo
> = z.nativeEnum(TwoHundredAndThirtyTwo);

/** @internal */
export const TwoHundredAndThirtyTwo$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndThirtyTwo
> = TwoHundredAndThirtyTwo$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndThirtyTwo$ {
  /** @deprecated use `TwoHundredAndThirtyTwo$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndThirtyTwo$inboundSchema;
  /** @deprecated use `TwoHundredAndThirtyTwo$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndThirtyTwo$outboundSchema;
}

/** @internal */
export const TwoHundredAndThirtyOne$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndThirtyOne
> = z.nativeEnum(TwoHundredAndThirtyOne);

/** @internal */
export const TwoHundredAndThirtyOne$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndThirtyOne
> = TwoHundredAndThirtyOne$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndThirtyOne$ {
  /** @deprecated use `TwoHundredAndThirtyOne$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndThirtyOne$inboundSchema;
  /** @deprecated use `TwoHundredAndThirtyOne$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndThirtyOne$outboundSchema;
}

/** @internal */
export const TwoHundredAndThirty$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndThirty
> = z.nativeEnum(TwoHundredAndThirty);

/** @internal */
export const TwoHundredAndThirty$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndThirty
> = TwoHundredAndThirty$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndThirty$ {
  /** @deprecated use `TwoHundredAndThirty$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndThirty$inboundSchema;
  /** @deprecated use `TwoHundredAndThirty$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndThirty$outboundSchema;
}

/** @internal */
export const TwoHundredAndTwentyNine$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndTwentyNine
> = z.nativeEnum(TwoHundredAndTwentyNine);

/** @internal */
export const TwoHundredAndTwentyNine$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndTwentyNine
> = TwoHundredAndTwentyNine$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndTwentyNine$ {
  /** @deprecated use `TwoHundredAndTwentyNine$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndTwentyNine$inboundSchema;
  /** @deprecated use `TwoHundredAndTwentyNine$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndTwentyNine$outboundSchema;
}

/** @internal */
export const TwoHundredAndTwentyEight$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndTwentyEight
> = z.nativeEnum(TwoHundredAndTwentyEight);

/** @internal */
export const TwoHundredAndTwentyEight$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndTwentyEight
> = TwoHundredAndTwentyEight$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndTwentyEight$ {
  /** @deprecated use `TwoHundredAndTwentyEight$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndTwentyEight$inboundSchema;
  /** @deprecated use `TwoHundredAndTwentyEight$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndTwentyEight$outboundSchema;
}

/** @internal */
export const TwoHundredAndTwentySeven$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndTwentySeven
> = z.nativeEnum(TwoHundredAndTwentySeven);

/** @internal */
export const TwoHundredAndTwentySeven$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndTwentySeven
> = TwoHundredAndTwentySeven$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndTwentySeven$ {
  /** @deprecated use `TwoHundredAndTwentySeven$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndTwentySeven$inboundSchema;
  /** @deprecated use `TwoHundredAndTwentySeven$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndTwentySeven$outboundSchema;
}

/** @internal */
export const TwoHundredAndTwentySix$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndTwentySix
> = z.nativeEnum(TwoHundredAndTwentySix);

/** @internal */
export const TwoHundredAndTwentySix$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndTwentySix
> = TwoHundredAndTwentySix$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndTwentySix$ {
  /** @deprecated use `TwoHundredAndTwentySix$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndTwentySix$inboundSchema;
  /** @deprecated use `TwoHundredAndTwentySix$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndTwentySix$outboundSchema;
}

/** @internal */
export const TwoHundredAndTwentyFive$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndTwentyFive
> = z.nativeEnum(TwoHundredAndTwentyFive);

/** @internal */
export const TwoHundredAndTwentyFive$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndTwentyFive
> = TwoHundredAndTwentyFive$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndTwentyFive$ {
  /** @deprecated use `TwoHundredAndTwentyFive$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndTwentyFive$inboundSchema;
  /** @deprecated use `TwoHundredAndTwentyFive$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndTwentyFive$outboundSchema;
}

/** @internal */
export const TwoHundredAndTwentyFour$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndTwentyFour
> = z.nativeEnum(TwoHundredAndTwentyFour);

/** @internal */
export const TwoHundredAndTwentyFour$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndTwentyFour
> = TwoHundredAndTwentyFour$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndTwentyFour$ {
  /** @deprecated use `TwoHundredAndTwentyFour$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndTwentyFour$inboundSchema;
  /** @deprecated use `TwoHundredAndTwentyFour$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndTwentyFour$outboundSchema;
}

/** @internal */
export const TwoHundredAndTwentyThree$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndTwentyThree
> = z.nativeEnum(TwoHundredAndTwentyThree);

/** @internal */
export const TwoHundredAndTwentyThree$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndTwentyThree
> = TwoHundredAndTwentyThree$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndTwentyThree$ {
  /** @deprecated use `TwoHundredAndTwentyThree$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndTwentyThree$inboundSchema;
  /** @deprecated use `TwoHundredAndTwentyThree$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndTwentyThree$outboundSchema;
}

/** @internal */
export const TwoHundredAndTwentyTwo$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndTwentyTwo
> = z.nativeEnum(TwoHundredAndTwentyTwo);

/** @internal */
export const TwoHundredAndTwentyTwo$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndTwentyTwo
> = TwoHundredAndTwentyTwo$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndTwentyTwo$ {
  /** @deprecated use `TwoHundredAndTwentyTwo$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndTwentyTwo$inboundSchema;
  /** @deprecated use `TwoHundredAndTwentyTwo$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndTwentyTwo$outboundSchema;
}

/** @internal */
export const TwoHundredAndTwentyOne$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndTwentyOne
> = z.nativeEnum(TwoHundredAndTwentyOne);

/** @internal */
export const TwoHundredAndTwentyOne$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndTwentyOne
> = TwoHundredAndTwentyOne$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndTwentyOne$ {
  /** @deprecated use `TwoHundredAndTwentyOne$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndTwentyOne$inboundSchema;
  /** @deprecated use `TwoHundredAndTwentyOne$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndTwentyOne$outboundSchema;
}

/** @internal */
export const TwoHundredAndTwenty$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndTwenty
> = z.nativeEnum(TwoHundredAndTwenty);

/** @internal */
export const TwoHundredAndTwenty$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndTwenty
> = TwoHundredAndTwenty$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndTwenty$ {
  /** @deprecated use `TwoHundredAndTwenty$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndTwenty$inboundSchema;
  /** @deprecated use `TwoHundredAndTwenty$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndTwenty$outboundSchema;
}

/** @internal */
export const TwoHundredAndNineteen$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndNineteen
> = z.nativeEnum(TwoHundredAndNineteen);

/** @internal */
export const TwoHundredAndNineteen$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndNineteen
> = TwoHundredAndNineteen$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndNineteen$ {
  /** @deprecated use `TwoHundredAndNineteen$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndNineteen$inboundSchema;
  /** @deprecated use `TwoHundredAndNineteen$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndNineteen$outboundSchema;
}

/** @internal */
export const TwoHundredAndEighteen$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndEighteen
> = z.nativeEnum(TwoHundredAndEighteen);

/** @internal */
export const TwoHundredAndEighteen$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndEighteen
> = TwoHundredAndEighteen$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndEighteen$ {
  /** @deprecated use `TwoHundredAndEighteen$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndEighteen$inboundSchema;
  /** @deprecated use `TwoHundredAndEighteen$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndEighteen$outboundSchema;
}

/** @internal */
export const TwoHundredAndSeventeen$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSeventeen
> = z.nativeEnum(TwoHundredAndSeventeen);

/** @internal */
export const TwoHundredAndSeventeen$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSeventeen
> = TwoHundredAndSeventeen$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndSeventeen$ {
  /** @deprecated use `TwoHundredAndSeventeen$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndSeventeen$inboundSchema;
  /** @deprecated use `TwoHundredAndSeventeen$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndSeventeen$outboundSchema;
}

/** @internal */
export const TwoHundredAndSixteen$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSixteen
> = z.nativeEnum(TwoHundredAndSixteen);

/** @internal */
export const TwoHundredAndSixteen$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSixteen
> = TwoHundredAndSixteen$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndSixteen$ {
  /** @deprecated use `TwoHundredAndSixteen$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndSixteen$inboundSchema;
  /** @deprecated use `TwoHundredAndSixteen$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndSixteen$outboundSchema;
}

/** @internal */
export const TwoHundredAndFifteen$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndFifteen
> = z.nativeEnum(TwoHundredAndFifteen);

/** @internal */
export const TwoHundredAndFifteen$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndFifteen
> = TwoHundredAndFifteen$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndFifteen$ {
  /** @deprecated use `TwoHundredAndFifteen$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndFifteen$inboundSchema;
  /** @deprecated use `TwoHundredAndFifteen$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndFifteen$outboundSchema;
}

/** @internal */
export const TwoHundredAndFourteen$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndFourteen
> = z.nativeEnum(TwoHundredAndFourteen);

/** @internal */
export const TwoHundredAndFourteen$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndFourteen
> = TwoHundredAndFourteen$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndFourteen$ {
  /** @deprecated use `TwoHundredAndFourteen$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndFourteen$inboundSchema;
  /** @deprecated use `TwoHundredAndFourteen$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndFourteen$outboundSchema;
}

/** @internal */
export const TwoHundredAndThirteen$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndThirteen
> = z.nativeEnum(TwoHundredAndThirteen);

/** @internal */
export const TwoHundredAndThirteen$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndThirteen
> = TwoHundredAndThirteen$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndThirteen$ {
  /** @deprecated use `TwoHundredAndThirteen$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndThirteen$inboundSchema;
  /** @deprecated use `TwoHundredAndThirteen$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndThirteen$outboundSchema;
}

/** @internal */
export const TwoHundredAndTwelve$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndTwelve
> = z.nativeEnum(TwoHundredAndTwelve);

/** @internal */
export const TwoHundredAndTwelve$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndTwelve
> = TwoHundredAndTwelve$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndTwelve$ {
  /** @deprecated use `TwoHundredAndTwelve$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndTwelve$inboundSchema;
  /** @deprecated use `TwoHundredAndTwelve$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndTwelve$outboundSchema;
}

/** @internal */
export const TwoHundredAndEleven$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndEleven
> = z.nativeEnum(TwoHundredAndEleven);

/** @internal */
export const TwoHundredAndEleven$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndEleven
> = TwoHundredAndEleven$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndEleven$ {
  /** @deprecated use `TwoHundredAndEleven$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndEleven$inboundSchema;
  /** @deprecated use `TwoHundredAndEleven$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndEleven$outboundSchema;
}

/** @internal */
export const TwoHundredAndTen$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndTen
> = z.nativeEnum(TwoHundredAndTen);

/** @internal */
export const TwoHundredAndTen$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndTen
> = TwoHundredAndTen$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndTen$ {
  /** @deprecated use `TwoHundredAndTen$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndTen$inboundSchema;
  /** @deprecated use `TwoHundredAndTen$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndTen$outboundSchema;
}

/** @internal */
export const TwoHundredAndNine$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndNine
> = z.nativeEnum(TwoHundredAndNine);

/** @internal */
export const TwoHundredAndNine$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndNine
> = TwoHundredAndNine$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndNine$ {
  /** @deprecated use `TwoHundredAndNine$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndNine$inboundSchema;
  /** @deprecated use `TwoHundredAndNine$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndNine$outboundSchema;
}

/** @internal */
export const TwoHundredAndEight$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndEight
> = z.nativeEnum(TwoHundredAndEight);

/** @internal */
export const TwoHundredAndEight$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndEight
> = TwoHundredAndEight$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndEight$ {
  /** @deprecated use `TwoHundredAndEight$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndEight$inboundSchema;
  /** @deprecated use `TwoHundredAndEight$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndEight$outboundSchema;
}

/** @internal */
export const TwoHundredAndSeven$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSeven
> = z.nativeEnum(TwoHundredAndSeven);

/** @internal */
export const TwoHundredAndSeven$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSeven
> = TwoHundredAndSeven$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndSeven$ {
  /** @deprecated use `TwoHundredAndSeven$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndSeven$inboundSchema;
  /** @deprecated use `TwoHundredAndSeven$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndSeven$outboundSchema;
}

/** @internal */
export const TwoHundredAndSix$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSix
> = z.nativeEnum(TwoHundredAndSix);

/** @internal */
export const TwoHundredAndSix$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndSix
> = TwoHundredAndSix$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndSix$ {
  /** @deprecated use `TwoHundredAndSix$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndSix$inboundSchema;
  /** @deprecated use `TwoHundredAndSix$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndSix$outboundSchema;
}

/** @internal */
export const TwoHundredAndFive$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndFive
> = z.nativeEnum(TwoHundredAndFive);

/** @internal */
export const TwoHundredAndFive$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndFive
> = TwoHundredAndFive$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndFive$ {
  /** @deprecated use `TwoHundredAndFive$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndFive$inboundSchema;
  /** @deprecated use `TwoHundredAndFive$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndFive$outboundSchema;
}

/** @internal */
export const TwoHundredAndFour$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndFour
> = z.nativeEnum(TwoHundredAndFour);

/** @internal */
export const TwoHundredAndFour$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndFour
> = TwoHundredAndFour$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndFour$ {
  /** @deprecated use `TwoHundredAndFour$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndFour$inboundSchema;
  /** @deprecated use `TwoHundredAndFour$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndFour$outboundSchema;
}

/** @internal */
export const TwoHundredAndThree$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndThree
> = z.nativeEnum(TwoHundredAndThree);

/** @internal */
export const TwoHundredAndThree$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndThree
> = TwoHundredAndThree$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndThree$ {
  /** @deprecated use `TwoHundredAndThree$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndThree$inboundSchema;
  /** @deprecated use `TwoHundredAndThree$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndThree$outboundSchema;
}

/** @internal */
export const TwoHundredAndTwo$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndTwo
> = z.nativeEnum(TwoHundredAndTwo);

/** @internal */
export const TwoHundredAndTwo$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndTwo
> = TwoHundredAndTwo$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndTwo$ {
  /** @deprecated use `TwoHundredAndTwo$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndTwo$inboundSchema;
  /** @deprecated use `TwoHundredAndTwo$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndTwo$outboundSchema;
}

/** @internal */
export const TwoHundredAndOne$inboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndOne
> = z.nativeEnum(TwoHundredAndOne);

/** @internal */
export const TwoHundredAndOne$outboundSchema: z.ZodNativeEnum<
  typeof TwoHundredAndOne
> = TwoHundredAndOne$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundredAndOne$ {
  /** @deprecated use `TwoHundredAndOne$inboundSchema` instead. */
  export const inboundSchema = TwoHundredAndOne$inboundSchema;
  /** @deprecated use `TwoHundredAndOne$outboundSchema` instead. */
  export const outboundSchema = TwoHundredAndOne$outboundSchema;
}

/** @internal */
export const TwoHundred$inboundSchema: z.ZodNativeEnum<typeof TwoHundred> = z
  .nativeEnum(TwoHundred);

/** @internal */
export const TwoHundred$outboundSchema: z.ZodNativeEnum<typeof TwoHundred> =
  TwoHundred$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoHundred$ {
  /** @deprecated use `TwoHundred$inboundSchema` instead. */
  export const inboundSchema = TwoHundred$inboundSchema;
  /** @deprecated use `TwoHundred$outboundSchema` instead. */
  export const outboundSchema = TwoHundred$outboundSchema;
}

/** @internal */
export const OneHundredAndNinetyNine$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndNinetyNine
> = z.nativeEnum(OneHundredAndNinetyNine);

/** @internal */
export const OneHundredAndNinetyNine$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndNinetyNine
> = OneHundredAndNinetyNine$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndNinetyNine$ {
  /** @deprecated use `OneHundredAndNinetyNine$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndNinetyNine$inboundSchema;
  /** @deprecated use `OneHundredAndNinetyNine$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndNinetyNine$outboundSchema;
}

/** @internal */
export const OneHundredAndNinetyEight$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndNinetyEight
> = z.nativeEnum(OneHundredAndNinetyEight);

/** @internal */
export const OneHundredAndNinetyEight$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndNinetyEight
> = OneHundredAndNinetyEight$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndNinetyEight$ {
  /** @deprecated use `OneHundredAndNinetyEight$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndNinetyEight$inboundSchema;
  /** @deprecated use `OneHundredAndNinetyEight$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndNinetyEight$outboundSchema;
}

/** @internal */
export const OneHundredAndNinetySeven$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndNinetySeven
> = z.nativeEnum(OneHundredAndNinetySeven);

/** @internal */
export const OneHundredAndNinetySeven$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndNinetySeven
> = OneHundredAndNinetySeven$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndNinetySeven$ {
  /** @deprecated use `OneHundredAndNinetySeven$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndNinetySeven$inboundSchema;
  /** @deprecated use `OneHundredAndNinetySeven$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndNinetySeven$outboundSchema;
}

/** @internal */
export const OneHundredAndNinetySix$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndNinetySix
> = z.nativeEnum(OneHundredAndNinetySix);

/** @internal */
export const OneHundredAndNinetySix$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndNinetySix
> = OneHundredAndNinetySix$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndNinetySix$ {
  /** @deprecated use `OneHundredAndNinetySix$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndNinetySix$inboundSchema;
  /** @deprecated use `OneHundredAndNinetySix$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndNinetySix$outboundSchema;
}

/** @internal */
export const OneHundredAndNinetyFive$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndNinetyFive
> = z.nativeEnum(OneHundredAndNinetyFive);

/** @internal */
export const OneHundredAndNinetyFive$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndNinetyFive
> = OneHundredAndNinetyFive$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndNinetyFive$ {
  /** @deprecated use `OneHundredAndNinetyFive$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndNinetyFive$inboundSchema;
  /** @deprecated use `OneHundredAndNinetyFive$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndNinetyFive$outboundSchema;
}

/** @internal */
export const OneHundredAndNinetyFour$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndNinetyFour
> = z.nativeEnum(OneHundredAndNinetyFour);

/** @internal */
export const OneHundredAndNinetyFour$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndNinetyFour
> = OneHundredAndNinetyFour$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndNinetyFour$ {
  /** @deprecated use `OneHundredAndNinetyFour$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndNinetyFour$inboundSchema;
  /** @deprecated use `OneHundredAndNinetyFour$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndNinetyFour$outboundSchema;
}

/** @internal */
export const OneHundredAndNinetyThree$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndNinetyThree
> = z.nativeEnum(OneHundredAndNinetyThree);

/** @internal */
export const OneHundredAndNinetyThree$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndNinetyThree
> = OneHundredAndNinetyThree$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndNinetyThree$ {
  /** @deprecated use `OneHundredAndNinetyThree$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndNinetyThree$inboundSchema;
  /** @deprecated use `OneHundredAndNinetyThree$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndNinetyThree$outboundSchema;
}

/** @internal */
export const OneHundredAndNinetyTwo$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndNinetyTwo
> = z.nativeEnum(OneHundredAndNinetyTwo);

/** @internal */
export const OneHundredAndNinetyTwo$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndNinetyTwo
> = OneHundredAndNinetyTwo$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndNinetyTwo$ {
  /** @deprecated use `OneHundredAndNinetyTwo$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndNinetyTwo$inboundSchema;
  /** @deprecated use `OneHundredAndNinetyTwo$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndNinetyTwo$outboundSchema;
}

/** @internal */
export const OneHundredAndNinetyOne$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndNinetyOne
> = z.nativeEnum(OneHundredAndNinetyOne);

/** @internal */
export const OneHundredAndNinetyOne$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndNinetyOne
> = OneHundredAndNinetyOne$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndNinetyOne$ {
  /** @deprecated use `OneHundredAndNinetyOne$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndNinetyOne$inboundSchema;
  /** @deprecated use `OneHundredAndNinetyOne$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndNinetyOne$outboundSchema;
}

/** @internal */
export const OneHundredAndNinety$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndNinety
> = z.nativeEnum(OneHundredAndNinety);

/** @internal */
export const OneHundredAndNinety$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndNinety
> = OneHundredAndNinety$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndNinety$ {
  /** @deprecated use `OneHundredAndNinety$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndNinety$inboundSchema;
  /** @deprecated use `OneHundredAndNinety$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndNinety$outboundSchema;
}

/** @internal */
export const OneHundredAndEightyNine$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndEightyNine
> = z.nativeEnum(OneHundredAndEightyNine);

/** @internal */
export const OneHundredAndEightyNine$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndEightyNine
> = OneHundredAndEightyNine$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndEightyNine$ {
  /** @deprecated use `OneHundredAndEightyNine$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndEightyNine$inboundSchema;
  /** @deprecated use `OneHundredAndEightyNine$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndEightyNine$outboundSchema;
}

/** @internal */
export const OneHundredAndEightyEight$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndEightyEight
> = z.nativeEnum(OneHundredAndEightyEight);

/** @internal */
export const OneHundredAndEightyEight$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndEightyEight
> = OneHundredAndEightyEight$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndEightyEight$ {
  /** @deprecated use `OneHundredAndEightyEight$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndEightyEight$inboundSchema;
  /** @deprecated use `OneHundredAndEightyEight$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndEightyEight$outboundSchema;
}

/** @internal */
export const OneHundredAndEightySeven$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndEightySeven
> = z.nativeEnum(OneHundredAndEightySeven);

/** @internal */
export const OneHundredAndEightySeven$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndEightySeven
> = OneHundredAndEightySeven$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndEightySeven$ {
  /** @deprecated use `OneHundredAndEightySeven$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndEightySeven$inboundSchema;
  /** @deprecated use `OneHundredAndEightySeven$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndEightySeven$outboundSchema;
}

/** @internal */
export const OneHundredAndEightySix$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndEightySix
> = z.nativeEnum(OneHundredAndEightySix);

/** @internal */
export const OneHundredAndEightySix$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndEightySix
> = OneHundredAndEightySix$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndEightySix$ {
  /** @deprecated use `OneHundredAndEightySix$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndEightySix$inboundSchema;
  /** @deprecated use `OneHundredAndEightySix$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndEightySix$outboundSchema;
}

/** @internal */
export const OneHundredAndEightyFive$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndEightyFive
> = z.nativeEnum(OneHundredAndEightyFive);

/** @internal */
export const OneHundredAndEightyFive$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndEightyFive
> = OneHundredAndEightyFive$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndEightyFive$ {
  /** @deprecated use `OneHundredAndEightyFive$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndEightyFive$inboundSchema;
  /** @deprecated use `OneHundredAndEightyFive$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndEightyFive$outboundSchema;
}

/** @internal */
export const OneHundredAndEightyFour$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndEightyFour
> = z.nativeEnum(OneHundredAndEightyFour);

/** @internal */
export const OneHundredAndEightyFour$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndEightyFour
> = OneHundredAndEightyFour$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndEightyFour$ {
  /** @deprecated use `OneHundredAndEightyFour$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndEightyFour$inboundSchema;
  /** @deprecated use `OneHundredAndEightyFour$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndEightyFour$outboundSchema;
}

/** @internal */
export const OneHundredAndEightyThree$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndEightyThree
> = z.nativeEnum(OneHundredAndEightyThree);

/** @internal */
export const OneHundredAndEightyThree$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndEightyThree
> = OneHundredAndEightyThree$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndEightyThree$ {
  /** @deprecated use `OneHundredAndEightyThree$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndEightyThree$inboundSchema;
  /** @deprecated use `OneHundredAndEightyThree$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndEightyThree$outboundSchema;
}

/** @internal */
export const OneHundredAndEightyTwo$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndEightyTwo
> = z.nativeEnum(OneHundredAndEightyTwo);

/** @internal */
export const OneHundredAndEightyTwo$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndEightyTwo
> = OneHundredAndEightyTwo$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndEightyTwo$ {
  /** @deprecated use `OneHundredAndEightyTwo$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndEightyTwo$inboundSchema;
  /** @deprecated use `OneHundredAndEightyTwo$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndEightyTwo$outboundSchema;
}

/** @internal */
export const OneHundredAndEightyOne$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndEightyOne
> = z.nativeEnum(OneHundredAndEightyOne);

/** @internal */
export const OneHundredAndEightyOne$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndEightyOne
> = OneHundredAndEightyOne$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndEightyOne$ {
  /** @deprecated use `OneHundredAndEightyOne$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndEightyOne$inboundSchema;
  /** @deprecated use `OneHundredAndEightyOne$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndEightyOne$outboundSchema;
}

/** @internal */
export const OneHundredAndEighty$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndEighty
> = z.nativeEnum(OneHundredAndEighty);

/** @internal */
export const OneHundredAndEighty$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndEighty
> = OneHundredAndEighty$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndEighty$ {
  /** @deprecated use `OneHundredAndEighty$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndEighty$inboundSchema;
  /** @deprecated use `OneHundredAndEighty$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndEighty$outboundSchema;
}

/** @internal */
export const OneHundredAndSeventyNine$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSeventyNine
> = z.nativeEnum(OneHundredAndSeventyNine);

/** @internal */
export const OneHundredAndSeventyNine$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSeventyNine
> = OneHundredAndSeventyNine$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndSeventyNine$ {
  /** @deprecated use `OneHundredAndSeventyNine$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndSeventyNine$inboundSchema;
  /** @deprecated use `OneHundredAndSeventyNine$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndSeventyNine$outboundSchema;
}

/** @internal */
export const OneHundredAndSeventyEight$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSeventyEight
> = z.nativeEnum(OneHundredAndSeventyEight);

/** @internal */
export const OneHundredAndSeventyEight$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSeventyEight
> = OneHundredAndSeventyEight$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndSeventyEight$ {
  /** @deprecated use `OneHundredAndSeventyEight$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndSeventyEight$inboundSchema;
  /** @deprecated use `OneHundredAndSeventyEight$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndSeventyEight$outboundSchema;
}

/** @internal */
export const OneHundredAndSeventySeven$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSeventySeven
> = z.nativeEnum(OneHundredAndSeventySeven);

/** @internal */
export const OneHundredAndSeventySeven$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSeventySeven
> = OneHundredAndSeventySeven$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndSeventySeven$ {
  /** @deprecated use `OneHundredAndSeventySeven$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndSeventySeven$inboundSchema;
  /** @deprecated use `OneHundredAndSeventySeven$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndSeventySeven$outboundSchema;
}

/** @internal */
export const OneHundredAndSeventySix$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSeventySix
> = z.nativeEnum(OneHundredAndSeventySix);

/** @internal */
export const OneHundredAndSeventySix$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSeventySix
> = OneHundredAndSeventySix$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndSeventySix$ {
  /** @deprecated use `OneHundredAndSeventySix$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndSeventySix$inboundSchema;
  /** @deprecated use `OneHundredAndSeventySix$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndSeventySix$outboundSchema;
}

/** @internal */
export const OneHundredAndSeventyFive$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSeventyFive
> = z.nativeEnum(OneHundredAndSeventyFive);

/** @internal */
export const OneHundredAndSeventyFive$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSeventyFive
> = OneHundredAndSeventyFive$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndSeventyFive$ {
  /** @deprecated use `OneHundredAndSeventyFive$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndSeventyFive$inboundSchema;
  /** @deprecated use `OneHundredAndSeventyFive$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndSeventyFive$outboundSchema;
}

/** @internal */
export const OneHundredAndSeventyFour$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSeventyFour
> = z.nativeEnum(OneHundredAndSeventyFour);

/** @internal */
export const OneHundredAndSeventyFour$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSeventyFour
> = OneHundredAndSeventyFour$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndSeventyFour$ {
  /** @deprecated use `OneHundredAndSeventyFour$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndSeventyFour$inboundSchema;
  /** @deprecated use `OneHundredAndSeventyFour$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndSeventyFour$outboundSchema;
}

/** @internal */
export const OneHundredAndSeventyThree$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSeventyThree
> = z.nativeEnum(OneHundredAndSeventyThree);

/** @internal */
export const OneHundredAndSeventyThree$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSeventyThree
> = OneHundredAndSeventyThree$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndSeventyThree$ {
  /** @deprecated use `OneHundredAndSeventyThree$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndSeventyThree$inboundSchema;
  /** @deprecated use `OneHundredAndSeventyThree$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndSeventyThree$outboundSchema;
}

/** @internal */
export const OneHundredAndSeventyTwo$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSeventyTwo
> = z.nativeEnum(OneHundredAndSeventyTwo);

/** @internal */
export const OneHundredAndSeventyTwo$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSeventyTwo
> = OneHundredAndSeventyTwo$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndSeventyTwo$ {
  /** @deprecated use `OneHundredAndSeventyTwo$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndSeventyTwo$inboundSchema;
  /** @deprecated use `OneHundredAndSeventyTwo$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndSeventyTwo$outboundSchema;
}

/** @internal */
export const OneHundredAndSeventyOne$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSeventyOne
> = z.nativeEnum(OneHundredAndSeventyOne);

/** @internal */
export const OneHundredAndSeventyOne$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSeventyOne
> = OneHundredAndSeventyOne$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndSeventyOne$ {
  /** @deprecated use `OneHundredAndSeventyOne$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndSeventyOne$inboundSchema;
  /** @deprecated use `OneHundredAndSeventyOne$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndSeventyOne$outboundSchema;
}

/** @internal */
export const OneHundredAndSeventy$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSeventy
> = z.nativeEnum(OneHundredAndSeventy);

/** @internal */
export const OneHundredAndSeventy$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSeventy
> = OneHundredAndSeventy$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndSeventy$ {
  /** @deprecated use `OneHundredAndSeventy$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndSeventy$inboundSchema;
  /** @deprecated use `OneHundredAndSeventy$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndSeventy$outboundSchema;
}

/** @internal */
export const OneHundredAndSixtyNine$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSixtyNine
> = z.nativeEnum(OneHundredAndSixtyNine);

/** @internal */
export const OneHundredAndSixtyNine$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSixtyNine
> = OneHundredAndSixtyNine$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndSixtyNine$ {
  /** @deprecated use `OneHundredAndSixtyNine$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndSixtyNine$inboundSchema;
  /** @deprecated use `OneHundredAndSixtyNine$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndSixtyNine$outboundSchema;
}

/** @internal */
export const OneHundredAndSixtyEight$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSixtyEight
> = z.nativeEnum(OneHundredAndSixtyEight);

/** @internal */
export const OneHundredAndSixtyEight$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSixtyEight
> = OneHundredAndSixtyEight$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndSixtyEight$ {
  /** @deprecated use `OneHundredAndSixtyEight$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndSixtyEight$inboundSchema;
  /** @deprecated use `OneHundredAndSixtyEight$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndSixtyEight$outboundSchema;
}

/** @internal */
export const OneHundredAndSixtySeven$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSixtySeven
> = z.nativeEnum(OneHundredAndSixtySeven);

/** @internal */
export const OneHundredAndSixtySeven$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSixtySeven
> = OneHundredAndSixtySeven$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndSixtySeven$ {
  /** @deprecated use `OneHundredAndSixtySeven$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndSixtySeven$inboundSchema;
  /** @deprecated use `OneHundredAndSixtySeven$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndSixtySeven$outboundSchema;
}

/** @internal */
export const OneHundredAndSixtySix$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSixtySix
> = z.nativeEnum(OneHundredAndSixtySix);

/** @internal */
export const OneHundredAndSixtySix$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSixtySix
> = OneHundredAndSixtySix$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndSixtySix$ {
  /** @deprecated use `OneHundredAndSixtySix$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndSixtySix$inboundSchema;
  /** @deprecated use `OneHundredAndSixtySix$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndSixtySix$outboundSchema;
}

/** @internal */
export const OneHundredAndSixtyFive$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSixtyFive
> = z.nativeEnum(OneHundredAndSixtyFive);

/** @internal */
export const OneHundredAndSixtyFive$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSixtyFive
> = OneHundredAndSixtyFive$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndSixtyFive$ {
  /** @deprecated use `OneHundredAndSixtyFive$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndSixtyFive$inboundSchema;
  /** @deprecated use `OneHundredAndSixtyFive$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndSixtyFive$outboundSchema;
}

/** @internal */
export const OneHundredAndSixtyFour$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSixtyFour
> = z.nativeEnum(OneHundredAndSixtyFour);

/** @internal */
export const OneHundredAndSixtyFour$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSixtyFour
> = OneHundredAndSixtyFour$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndSixtyFour$ {
  /** @deprecated use `OneHundredAndSixtyFour$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndSixtyFour$inboundSchema;
  /** @deprecated use `OneHundredAndSixtyFour$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndSixtyFour$outboundSchema;
}

/** @internal */
export const OneHundredAndSixtyThree$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSixtyThree
> = z.nativeEnum(OneHundredAndSixtyThree);

/** @internal */
export const OneHundredAndSixtyThree$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSixtyThree
> = OneHundredAndSixtyThree$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndSixtyThree$ {
  /** @deprecated use `OneHundredAndSixtyThree$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndSixtyThree$inboundSchema;
  /** @deprecated use `OneHundredAndSixtyThree$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndSixtyThree$outboundSchema;
}

/** @internal */
export const OneHundredAndSixtyTwo$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSixtyTwo
> = z.nativeEnum(OneHundredAndSixtyTwo);

/** @internal */
export const OneHundredAndSixtyTwo$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSixtyTwo
> = OneHundredAndSixtyTwo$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndSixtyTwo$ {
  /** @deprecated use `OneHundredAndSixtyTwo$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndSixtyTwo$inboundSchema;
  /** @deprecated use `OneHundredAndSixtyTwo$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndSixtyTwo$outboundSchema;
}

/** @internal */
export const OneHundredAndSixtyOne$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSixtyOne
> = z.nativeEnum(OneHundredAndSixtyOne);

/** @internal */
export const OneHundredAndSixtyOne$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSixtyOne
> = OneHundredAndSixtyOne$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndSixtyOne$ {
  /** @deprecated use `OneHundredAndSixtyOne$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndSixtyOne$inboundSchema;
  /** @deprecated use `OneHundredAndSixtyOne$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndSixtyOne$outboundSchema;
}

/** @internal */
export const OneHundredAndSixty$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSixty
> = z.nativeEnum(OneHundredAndSixty);

/** @internal */
export const OneHundredAndSixty$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSixty
> = OneHundredAndSixty$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndSixty$ {
  /** @deprecated use `OneHundredAndSixty$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndSixty$inboundSchema;
  /** @deprecated use `OneHundredAndSixty$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndSixty$outboundSchema;
}

/** @internal */
export const OneHundredAndFiftyNine$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndFiftyNine
> = z.nativeEnum(OneHundredAndFiftyNine);

/** @internal */
export const OneHundredAndFiftyNine$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndFiftyNine
> = OneHundredAndFiftyNine$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndFiftyNine$ {
  /** @deprecated use `OneHundredAndFiftyNine$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndFiftyNine$inboundSchema;
  /** @deprecated use `OneHundredAndFiftyNine$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndFiftyNine$outboundSchema;
}

/** @internal */
export const OneHundredAndFiftyEight$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndFiftyEight
> = z.nativeEnum(OneHundredAndFiftyEight);

/** @internal */
export const OneHundredAndFiftyEight$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndFiftyEight
> = OneHundredAndFiftyEight$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndFiftyEight$ {
  /** @deprecated use `OneHundredAndFiftyEight$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndFiftyEight$inboundSchema;
  /** @deprecated use `OneHundredAndFiftyEight$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndFiftyEight$outboundSchema;
}

/** @internal */
export const OneHundredAndFiftySeven$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndFiftySeven
> = z.nativeEnum(OneHundredAndFiftySeven);

/** @internal */
export const OneHundredAndFiftySeven$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndFiftySeven
> = OneHundredAndFiftySeven$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndFiftySeven$ {
  /** @deprecated use `OneHundredAndFiftySeven$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndFiftySeven$inboundSchema;
  /** @deprecated use `OneHundredAndFiftySeven$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndFiftySeven$outboundSchema;
}

/** @internal */
export const OneHundredAndFiftySix$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndFiftySix
> = z.nativeEnum(OneHundredAndFiftySix);

/** @internal */
export const OneHundredAndFiftySix$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndFiftySix
> = OneHundredAndFiftySix$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndFiftySix$ {
  /** @deprecated use `OneHundredAndFiftySix$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndFiftySix$inboundSchema;
  /** @deprecated use `OneHundredAndFiftySix$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndFiftySix$outboundSchema;
}

/** @internal */
export const OneHundredAndFiftyFive$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndFiftyFive
> = z.nativeEnum(OneHundredAndFiftyFive);

/** @internal */
export const OneHundredAndFiftyFive$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndFiftyFive
> = OneHundredAndFiftyFive$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndFiftyFive$ {
  /** @deprecated use `OneHundredAndFiftyFive$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndFiftyFive$inboundSchema;
  /** @deprecated use `OneHundredAndFiftyFive$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndFiftyFive$outboundSchema;
}

/** @internal */
export const OneHundredAndFiftyFour$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndFiftyFour
> = z.nativeEnum(OneHundredAndFiftyFour);

/** @internal */
export const OneHundredAndFiftyFour$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndFiftyFour
> = OneHundredAndFiftyFour$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndFiftyFour$ {
  /** @deprecated use `OneHundredAndFiftyFour$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndFiftyFour$inboundSchema;
  /** @deprecated use `OneHundredAndFiftyFour$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndFiftyFour$outboundSchema;
}

/** @internal */
export const OneHundredAndFiftyThree$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndFiftyThree
> = z.nativeEnum(OneHundredAndFiftyThree);

/** @internal */
export const OneHundredAndFiftyThree$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndFiftyThree
> = OneHundredAndFiftyThree$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndFiftyThree$ {
  /** @deprecated use `OneHundredAndFiftyThree$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndFiftyThree$inboundSchema;
  /** @deprecated use `OneHundredAndFiftyThree$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndFiftyThree$outboundSchema;
}

/** @internal */
export const OneHundredAndFiftyTwo$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndFiftyTwo
> = z.nativeEnum(OneHundredAndFiftyTwo);

/** @internal */
export const OneHundredAndFiftyTwo$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndFiftyTwo
> = OneHundredAndFiftyTwo$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndFiftyTwo$ {
  /** @deprecated use `OneHundredAndFiftyTwo$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndFiftyTwo$inboundSchema;
  /** @deprecated use `OneHundredAndFiftyTwo$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndFiftyTwo$outboundSchema;
}

/** @internal */
export const OneHundredAndFiftyOne$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndFiftyOne
> = z.nativeEnum(OneHundredAndFiftyOne);

/** @internal */
export const OneHundredAndFiftyOne$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndFiftyOne
> = OneHundredAndFiftyOne$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndFiftyOne$ {
  /** @deprecated use `OneHundredAndFiftyOne$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndFiftyOne$inboundSchema;
  /** @deprecated use `OneHundredAndFiftyOne$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndFiftyOne$outboundSchema;
}

/** @internal */
export const OneHundredAndFifty$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndFifty
> = z.nativeEnum(OneHundredAndFifty);

/** @internal */
export const OneHundredAndFifty$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndFifty
> = OneHundredAndFifty$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndFifty$ {
  /** @deprecated use `OneHundredAndFifty$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndFifty$inboundSchema;
  /** @deprecated use `OneHundredAndFifty$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndFifty$outboundSchema;
}

/** @internal */
export const OneHundredAndFortyNine$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndFortyNine
> = z.nativeEnum(OneHundredAndFortyNine);

/** @internal */
export const OneHundredAndFortyNine$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndFortyNine
> = OneHundredAndFortyNine$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndFortyNine$ {
  /** @deprecated use `OneHundredAndFortyNine$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndFortyNine$inboundSchema;
  /** @deprecated use `OneHundredAndFortyNine$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndFortyNine$outboundSchema;
}

/** @internal */
export const OneHundredAndFortyEight$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndFortyEight
> = z.nativeEnum(OneHundredAndFortyEight);

/** @internal */
export const OneHundredAndFortyEight$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndFortyEight
> = OneHundredAndFortyEight$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndFortyEight$ {
  /** @deprecated use `OneHundredAndFortyEight$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndFortyEight$inboundSchema;
  /** @deprecated use `OneHundredAndFortyEight$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndFortyEight$outboundSchema;
}

/** @internal */
export const OneHundredAndFortySeven$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndFortySeven
> = z.nativeEnum(OneHundredAndFortySeven);

/** @internal */
export const OneHundredAndFortySeven$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndFortySeven
> = OneHundredAndFortySeven$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndFortySeven$ {
  /** @deprecated use `OneHundredAndFortySeven$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndFortySeven$inboundSchema;
  /** @deprecated use `OneHundredAndFortySeven$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndFortySeven$outboundSchema;
}

/** @internal */
export const OneHundredAndFortySix$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndFortySix
> = z.nativeEnum(OneHundredAndFortySix);

/** @internal */
export const OneHundredAndFortySix$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndFortySix
> = OneHundredAndFortySix$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndFortySix$ {
  /** @deprecated use `OneHundredAndFortySix$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndFortySix$inboundSchema;
  /** @deprecated use `OneHundredAndFortySix$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndFortySix$outboundSchema;
}

/** @internal */
export const OneHundredAndFortyFive$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndFortyFive
> = z.nativeEnum(OneHundredAndFortyFive);

/** @internal */
export const OneHundredAndFortyFive$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndFortyFive
> = OneHundredAndFortyFive$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndFortyFive$ {
  /** @deprecated use `OneHundredAndFortyFive$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndFortyFive$inboundSchema;
  /** @deprecated use `OneHundredAndFortyFive$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndFortyFive$outboundSchema;
}

/** @internal */
export const OneHundredAndFortyFour$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndFortyFour
> = z.nativeEnum(OneHundredAndFortyFour);

/** @internal */
export const OneHundredAndFortyFour$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndFortyFour
> = OneHundredAndFortyFour$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndFortyFour$ {
  /** @deprecated use `OneHundredAndFortyFour$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndFortyFour$inboundSchema;
  /** @deprecated use `OneHundredAndFortyFour$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndFortyFour$outboundSchema;
}

/** @internal */
export const OneHundredAndFortyThree$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndFortyThree
> = z.nativeEnum(OneHundredAndFortyThree);

/** @internal */
export const OneHundredAndFortyThree$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndFortyThree
> = OneHundredAndFortyThree$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndFortyThree$ {
  /** @deprecated use `OneHundredAndFortyThree$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndFortyThree$inboundSchema;
  /** @deprecated use `OneHundredAndFortyThree$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndFortyThree$outboundSchema;
}

/** @internal */
export const OneHundredAndFortyTwo$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndFortyTwo
> = z.nativeEnum(OneHundredAndFortyTwo);

/** @internal */
export const OneHundredAndFortyTwo$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndFortyTwo
> = OneHundredAndFortyTwo$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndFortyTwo$ {
  /** @deprecated use `OneHundredAndFortyTwo$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndFortyTwo$inboundSchema;
  /** @deprecated use `OneHundredAndFortyTwo$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndFortyTwo$outboundSchema;
}

/** @internal */
export const OneHundredAndFortyOne$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndFortyOne
> = z.nativeEnum(OneHundredAndFortyOne);

/** @internal */
export const OneHundredAndFortyOne$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndFortyOne
> = OneHundredAndFortyOne$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndFortyOne$ {
  /** @deprecated use `OneHundredAndFortyOne$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndFortyOne$inboundSchema;
  /** @deprecated use `OneHundredAndFortyOne$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndFortyOne$outboundSchema;
}

/** @internal */
export const OneHundredAndForty$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndForty
> = z.nativeEnum(OneHundredAndForty);

/** @internal */
export const OneHundredAndForty$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndForty
> = OneHundredAndForty$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndForty$ {
  /** @deprecated use `OneHundredAndForty$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndForty$inboundSchema;
  /** @deprecated use `OneHundredAndForty$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndForty$outboundSchema;
}

/** @internal */
export const OneHundredAndThirtyNine$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndThirtyNine
> = z.nativeEnum(OneHundredAndThirtyNine);

/** @internal */
export const OneHundredAndThirtyNine$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndThirtyNine
> = OneHundredAndThirtyNine$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndThirtyNine$ {
  /** @deprecated use `OneHundredAndThirtyNine$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndThirtyNine$inboundSchema;
  /** @deprecated use `OneHundredAndThirtyNine$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndThirtyNine$outboundSchema;
}

/** @internal */
export const OneHundredAndThirtyEight$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndThirtyEight
> = z.nativeEnum(OneHundredAndThirtyEight);

/** @internal */
export const OneHundredAndThirtyEight$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndThirtyEight
> = OneHundredAndThirtyEight$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndThirtyEight$ {
  /** @deprecated use `OneHundredAndThirtyEight$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndThirtyEight$inboundSchema;
  /** @deprecated use `OneHundredAndThirtyEight$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndThirtyEight$outboundSchema;
}

/** @internal */
export const OneHundredAndThirtySeven$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndThirtySeven
> = z.nativeEnum(OneHundredAndThirtySeven);

/** @internal */
export const OneHundredAndThirtySeven$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndThirtySeven
> = OneHundredAndThirtySeven$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndThirtySeven$ {
  /** @deprecated use `OneHundredAndThirtySeven$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndThirtySeven$inboundSchema;
  /** @deprecated use `OneHundredAndThirtySeven$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndThirtySeven$outboundSchema;
}

/** @internal */
export const OneHundredAndThirtySix$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndThirtySix
> = z.nativeEnum(OneHundredAndThirtySix);

/** @internal */
export const OneHundredAndThirtySix$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndThirtySix
> = OneHundredAndThirtySix$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndThirtySix$ {
  /** @deprecated use `OneHundredAndThirtySix$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndThirtySix$inboundSchema;
  /** @deprecated use `OneHundredAndThirtySix$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndThirtySix$outboundSchema;
}

/** @internal */
export const OneHundredAndThirtyFive$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndThirtyFive
> = z.nativeEnum(OneHundredAndThirtyFive);

/** @internal */
export const OneHundredAndThirtyFive$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndThirtyFive
> = OneHundredAndThirtyFive$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndThirtyFive$ {
  /** @deprecated use `OneHundredAndThirtyFive$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndThirtyFive$inboundSchema;
  /** @deprecated use `OneHundredAndThirtyFive$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndThirtyFive$outboundSchema;
}

/** @internal */
export const OneHundredAndThirtyFour$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndThirtyFour
> = z.nativeEnum(OneHundredAndThirtyFour);

/** @internal */
export const OneHundredAndThirtyFour$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndThirtyFour
> = OneHundredAndThirtyFour$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndThirtyFour$ {
  /** @deprecated use `OneHundredAndThirtyFour$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndThirtyFour$inboundSchema;
  /** @deprecated use `OneHundredAndThirtyFour$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndThirtyFour$outboundSchema;
}

/** @internal */
export const OneHundredAndThirtyThree$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndThirtyThree
> = z.nativeEnum(OneHundredAndThirtyThree);

/** @internal */
export const OneHundredAndThirtyThree$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndThirtyThree
> = OneHundredAndThirtyThree$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndThirtyThree$ {
  /** @deprecated use `OneHundredAndThirtyThree$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndThirtyThree$inboundSchema;
  /** @deprecated use `OneHundredAndThirtyThree$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndThirtyThree$outboundSchema;
}

/** @internal */
export const OneHundredAndThirtyTwo$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndThirtyTwo
> = z.nativeEnum(OneHundredAndThirtyTwo);

/** @internal */
export const OneHundredAndThirtyTwo$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndThirtyTwo
> = OneHundredAndThirtyTwo$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndThirtyTwo$ {
  /** @deprecated use `OneHundredAndThirtyTwo$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndThirtyTwo$inboundSchema;
  /** @deprecated use `OneHundredAndThirtyTwo$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndThirtyTwo$outboundSchema;
}

/** @internal */
export const OneHundredAndThirtyOne$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndThirtyOne
> = z.nativeEnum(OneHundredAndThirtyOne);

/** @internal */
export const OneHundredAndThirtyOne$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndThirtyOne
> = OneHundredAndThirtyOne$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndThirtyOne$ {
  /** @deprecated use `OneHundredAndThirtyOne$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndThirtyOne$inboundSchema;
  /** @deprecated use `OneHundredAndThirtyOne$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndThirtyOne$outboundSchema;
}

/** @internal */
export const OneHundredAndThirty$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndThirty
> = z.nativeEnum(OneHundredAndThirty);

/** @internal */
export const OneHundredAndThirty$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndThirty
> = OneHundredAndThirty$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndThirty$ {
  /** @deprecated use `OneHundredAndThirty$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndThirty$inboundSchema;
  /** @deprecated use `OneHundredAndThirty$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndThirty$outboundSchema;
}

/** @internal */
export const OneHundredAndTwentyNine$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndTwentyNine
> = z.nativeEnum(OneHundredAndTwentyNine);

/** @internal */
export const OneHundredAndTwentyNine$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndTwentyNine
> = OneHundredAndTwentyNine$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndTwentyNine$ {
  /** @deprecated use `OneHundredAndTwentyNine$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndTwentyNine$inboundSchema;
  /** @deprecated use `OneHundredAndTwentyNine$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndTwentyNine$outboundSchema;
}

/** @internal */
export const OneHundredAndTwentyEight$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndTwentyEight
> = z.nativeEnum(OneHundredAndTwentyEight);

/** @internal */
export const OneHundredAndTwentyEight$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndTwentyEight
> = OneHundredAndTwentyEight$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndTwentyEight$ {
  /** @deprecated use `OneHundredAndTwentyEight$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndTwentyEight$inboundSchema;
  /** @deprecated use `OneHundredAndTwentyEight$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndTwentyEight$outboundSchema;
}

/** @internal */
export const OneHundredAndTwentySeven$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndTwentySeven
> = z.nativeEnum(OneHundredAndTwentySeven);

/** @internal */
export const OneHundredAndTwentySeven$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndTwentySeven
> = OneHundredAndTwentySeven$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndTwentySeven$ {
  /** @deprecated use `OneHundredAndTwentySeven$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndTwentySeven$inboundSchema;
  /** @deprecated use `OneHundredAndTwentySeven$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndTwentySeven$outboundSchema;
}

/** @internal */
export const OneHundredAndTwentySix$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndTwentySix
> = z.nativeEnum(OneHundredAndTwentySix);

/** @internal */
export const OneHundredAndTwentySix$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndTwentySix
> = OneHundredAndTwentySix$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndTwentySix$ {
  /** @deprecated use `OneHundredAndTwentySix$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndTwentySix$inboundSchema;
  /** @deprecated use `OneHundredAndTwentySix$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndTwentySix$outboundSchema;
}

/** @internal */
export const OneHundredAndTwentyFive$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndTwentyFive
> = z.nativeEnum(OneHundredAndTwentyFive);

/** @internal */
export const OneHundredAndTwentyFive$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndTwentyFive
> = OneHundredAndTwentyFive$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndTwentyFive$ {
  /** @deprecated use `OneHundredAndTwentyFive$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndTwentyFive$inboundSchema;
  /** @deprecated use `OneHundredAndTwentyFive$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndTwentyFive$outboundSchema;
}

/** @internal */
export const OneHundredAndTwentyFour$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndTwentyFour
> = z.nativeEnum(OneHundredAndTwentyFour);

/** @internal */
export const OneHundredAndTwentyFour$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndTwentyFour
> = OneHundredAndTwentyFour$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndTwentyFour$ {
  /** @deprecated use `OneHundredAndTwentyFour$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndTwentyFour$inboundSchema;
  /** @deprecated use `OneHundredAndTwentyFour$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndTwentyFour$outboundSchema;
}

/** @internal */
export const OneHundredAndTwentyThree$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndTwentyThree
> = z.nativeEnum(OneHundredAndTwentyThree);

/** @internal */
export const OneHundredAndTwentyThree$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndTwentyThree
> = OneHundredAndTwentyThree$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndTwentyThree$ {
  /** @deprecated use `OneHundredAndTwentyThree$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndTwentyThree$inboundSchema;
  /** @deprecated use `OneHundredAndTwentyThree$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndTwentyThree$outboundSchema;
}

/** @internal */
export const OneHundredAndTwentyTwo$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndTwentyTwo
> = z.nativeEnum(OneHundredAndTwentyTwo);

/** @internal */
export const OneHundredAndTwentyTwo$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndTwentyTwo
> = OneHundredAndTwentyTwo$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndTwentyTwo$ {
  /** @deprecated use `OneHundredAndTwentyTwo$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndTwentyTwo$inboundSchema;
  /** @deprecated use `OneHundredAndTwentyTwo$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndTwentyTwo$outboundSchema;
}

/** @internal */
export const OneHundredAndTwentyOne$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndTwentyOne
> = z.nativeEnum(OneHundredAndTwentyOne);

/** @internal */
export const OneHundredAndTwentyOne$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndTwentyOne
> = OneHundredAndTwentyOne$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndTwentyOne$ {
  /** @deprecated use `OneHundredAndTwentyOne$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndTwentyOne$inboundSchema;
  /** @deprecated use `OneHundredAndTwentyOne$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndTwentyOne$outboundSchema;
}

/** @internal */
export const OneHundredAndTwenty$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndTwenty
> = z.nativeEnum(OneHundredAndTwenty);

/** @internal */
export const OneHundredAndTwenty$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndTwenty
> = OneHundredAndTwenty$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndTwenty$ {
  /** @deprecated use `OneHundredAndTwenty$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndTwenty$inboundSchema;
  /** @deprecated use `OneHundredAndTwenty$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndTwenty$outboundSchema;
}

/** @internal */
export const OneHundredAndNineteen$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndNineteen
> = z.nativeEnum(OneHundredAndNineteen);

/** @internal */
export const OneHundredAndNineteen$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndNineteen
> = OneHundredAndNineteen$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndNineteen$ {
  /** @deprecated use `OneHundredAndNineteen$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndNineteen$inboundSchema;
  /** @deprecated use `OneHundredAndNineteen$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndNineteen$outboundSchema;
}

/** @internal */
export const OneHundredAndEighteen$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndEighteen
> = z.nativeEnum(OneHundredAndEighteen);

/** @internal */
export const OneHundredAndEighteen$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndEighteen
> = OneHundredAndEighteen$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndEighteen$ {
  /** @deprecated use `OneHundredAndEighteen$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndEighteen$inboundSchema;
  /** @deprecated use `OneHundredAndEighteen$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndEighteen$outboundSchema;
}

/** @internal */
export const OneHundredAndSeventeen$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSeventeen
> = z.nativeEnum(OneHundredAndSeventeen);

/** @internal */
export const OneHundredAndSeventeen$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSeventeen
> = OneHundredAndSeventeen$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndSeventeen$ {
  /** @deprecated use `OneHundredAndSeventeen$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndSeventeen$inboundSchema;
  /** @deprecated use `OneHundredAndSeventeen$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndSeventeen$outboundSchema;
}

/** @internal */
export const OneHundredAndSixteen$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSixteen
> = z.nativeEnum(OneHundredAndSixteen);

/** @internal */
export const OneHundredAndSixteen$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSixteen
> = OneHundredAndSixteen$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndSixteen$ {
  /** @deprecated use `OneHundredAndSixteen$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndSixteen$inboundSchema;
  /** @deprecated use `OneHundredAndSixteen$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndSixteen$outboundSchema;
}

/** @internal */
export const OneHundredAndFifteen$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndFifteen
> = z.nativeEnum(OneHundredAndFifteen);

/** @internal */
export const OneHundredAndFifteen$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndFifteen
> = OneHundredAndFifteen$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndFifteen$ {
  /** @deprecated use `OneHundredAndFifteen$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndFifteen$inboundSchema;
  /** @deprecated use `OneHundredAndFifteen$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndFifteen$outboundSchema;
}

/** @internal */
export const OneHundredAndFourteen$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndFourteen
> = z.nativeEnum(OneHundredAndFourteen);

/** @internal */
export const OneHundredAndFourteen$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndFourteen
> = OneHundredAndFourteen$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndFourteen$ {
  /** @deprecated use `OneHundredAndFourteen$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndFourteen$inboundSchema;
  /** @deprecated use `OneHundredAndFourteen$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndFourteen$outboundSchema;
}

/** @internal */
export const OneHundredAndThirteen$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndThirteen
> = z.nativeEnum(OneHundredAndThirteen);

/** @internal */
export const OneHundredAndThirteen$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndThirteen
> = OneHundredAndThirteen$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndThirteen$ {
  /** @deprecated use `OneHundredAndThirteen$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndThirteen$inboundSchema;
  /** @deprecated use `OneHundredAndThirteen$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndThirteen$outboundSchema;
}

/** @internal */
export const OneHundredAndTwelve$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndTwelve
> = z.nativeEnum(OneHundredAndTwelve);

/** @internal */
export const OneHundredAndTwelve$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndTwelve
> = OneHundredAndTwelve$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndTwelve$ {
  /** @deprecated use `OneHundredAndTwelve$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndTwelve$inboundSchema;
  /** @deprecated use `OneHundredAndTwelve$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndTwelve$outboundSchema;
}

/** @internal */
export const OneHundredAndEleven$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndEleven
> = z.nativeEnum(OneHundredAndEleven);

/** @internal */
export const OneHundredAndEleven$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndEleven
> = OneHundredAndEleven$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndEleven$ {
  /** @deprecated use `OneHundredAndEleven$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndEleven$inboundSchema;
  /** @deprecated use `OneHundredAndEleven$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndEleven$outboundSchema;
}

/** @internal */
export const OneHundredAndTen$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndTen
> = z.nativeEnum(OneHundredAndTen);

/** @internal */
export const OneHundredAndTen$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndTen
> = OneHundredAndTen$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndTen$ {
  /** @deprecated use `OneHundredAndTen$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndTen$inboundSchema;
  /** @deprecated use `OneHundredAndTen$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndTen$outboundSchema;
}

/** @internal */
export const OneHundredAndNine$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndNine
> = z.nativeEnum(OneHundredAndNine);

/** @internal */
export const OneHundredAndNine$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndNine
> = OneHundredAndNine$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndNine$ {
  /** @deprecated use `OneHundredAndNine$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndNine$inboundSchema;
  /** @deprecated use `OneHundredAndNine$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndNine$outboundSchema;
}

/** @internal */
export const OneHundredAndEight$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndEight
> = z.nativeEnum(OneHundredAndEight);

/** @internal */
export const OneHundredAndEight$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndEight
> = OneHundredAndEight$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndEight$ {
  /** @deprecated use `OneHundredAndEight$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndEight$inboundSchema;
  /** @deprecated use `OneHundredAndEight$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndEight$outboundSchema;
}

/** @internal */
export const OneHundredAndSeven$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSeven
> = z.nativeEnum(OneHundredAndSeven);

/** @internal */
export const OneHundredAndSeven$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSeven
> = OneHundredAndSeven$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndSeven$ {
  /** @deprecated use `OneHundredAndSeven$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndSeven$inboundSchema;
  /** @deprecated use `OneHundredAndSeven$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndSeven$outboundSchema;
}

/** @internal */
export const OneHundredAndSix$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSix
> = z.nativeEnum(OneHundredAndSix);

/** @internal */
export const OneHundredAndSix$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndSix
> = OneHundredAndSix$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndSix$ {
  /** @deprecated use `OneHundredAndSix$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndSix$inboundSchema;
  /** @deprecated use `OneHundredAndSix$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndSix$outboundSchema;
}

/** @internal */
export const OneHundredAndFive$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndFive
> = z.nativeEnum(OneHundredAndFive);

/** @internal */
export const OneHundredAndFive$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndFive
> = OneHundredAndFive$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndFive$ {
  /** @deprecated use `OneHundredAndFive$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndFive$inboundSchema;
  /** @deprecated use `OneHundredAndFive$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndFive$outboundSchema;
}

/** @internal */
export const OneHundredAndFour$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndFour
> = z.nativeEnum(OneHundredAndFour);

/** @internal */
export const OneHundredAndFour$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndFour
> = OneHundredAndFour$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndFour$ {
  /** @deprecated use `OneHundredAndFour$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndFour$inboundSchema;
  /** @deprecated use `OneHundredAndFour$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndFour$outboundSchema;
}

/** @internal */
export const OneHundredAndThree$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndThree
> = z.nativeEnum(OneHundredAndThree);

/** @internal */
export const OneHundredAndThree$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndThree
> = OneHundredAndThree$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndThree$ {
  /** @deprecated use `OneHundredAndThree$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndThree$inboundSchema;
  /** @deprecated use `OneHundredAndThree$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndThree$outboundSchema;
}

/** @internal */
export const OneHundredAndTwo$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndTwo
> = z.nativeEnum(OneHundredAndTwo);

/** @internal */
export const OneHundredAndTwo$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndTwo
> = OneHundredAndTwo$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndTwo$ {
  /** @deprecated use `OneHundredAndTwo$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndTwo$inboundSchema;
  /** @deprecated use `OneHundredAndTwo$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndTwo$outboundSchema;
}

/** @internal */
export const OneHundredAndOne$inboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndOne
> = z.nativeEnum(OneHundredAndOne);

/** @internal */
export const OneHundredAndOne$outboundSchema: z.ZodNativeEnum<
  typeof OneHundredAndOne
> = OneHundredAndOne$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundredAndOne$ {
  /** @deprecated use `OneHundredAndOne$inboundSchema` instead. */
  export const inboundSchema = OneHundredAndOne$inboundSchema;
  /** @deprecated use `OneHundredAndOne$outboundSchema` instead. */
  export const outboundSchema = OneHundredAndOne$outboundSchema;
}

/** @internal */
export const OneHundred$inboundSchema: z.ZodNativeEnum<typeof OneHundred> = z
  .nativeEnum(OneHundred);

/** @internal */
export const OneHundred$outboundSchema: z.ZodNativeEnum<typeof OneHundred> =
  OneHundred$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneHundred$ {
  /** @deprecated use `OneHundred$inboundSchema` instead. */
  export const inboundSchema = OneHundred$inboundSchema;
  /** @deprecated use `OneHundred$outboundSchema` instead. */
  export const outboundSchema = OneHundred$outboundSchema;
}

/** @internal */
export const NinetyNine$inboundSchema: z.ZodNativeEnum<typeof NinetyNine> = z
  .nativeEnum(NinetyNine);

/** @internal */
export const NinetyNine$outboundSchema: z.ZodNativeEnum<typeof NinetyNine> =
  NinetyNine$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NinetyNine$ {
  /** @deprecated use `NinetyNine$inboundSchema` instead. */
  export const inboundSchema = NinetyNine$inboundSchema;
  /** @deprecated use `NinetyNine$outboundSchema` instead. */
  export const outboundSchema = NinetyNine$outboundSchema;
}

/** @internal */
export const NinetyEight$inboundSchema: z.ZodNativeEnum<typeof NinetyEight> = z
  .nativeEnum(NinetyEight);

/** @internal */
export const NinetyEight$outboundSchema: z.ZodNativeEnum<typeof NinetyEight> =
  NinetyEight$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NinetyEight$ {
  /** @deprecated use `NinetyEight$inboundSchema` instead. */
  export const inboundSchema = NinetyEight$inboundSchema;
  /** @deprecated use `NinetyEight$outboundSchema` instead. */
  export const outboundSchema = NinetyEight$outboundSchema;
}

/** @internal */
export const NinetySeven$inboundSchema: z.ZodNativeEnum<typeof NinetySeven> = z
  .nativeEnum(NinetySeven);

/** @internal */
export const NinetySeven$outboundSchema: z.ZodNativeEnum<typeof NinetySeven> =
  NinetySeven$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NinetySeven$ {
  /** @deprecated use `NinetySeven$inboundSchema` instead. */
  export const inboundSchema = NinetySeven$inboundSchema;
  /** @deprecated use `NinetySeven$outboundSchema` instead. */
  export const outboundSchema = NinetySeven$outboundSchema;
}

/** @internal */
export const NinetySix$inboundSchema: z.ZodNativeEnum<typeof NinetySix> = z
  .nativeEnum(NinetySix);

/** @internal */
export const NinetySix$outboundSchema: z.ZodNativeEnum<typeof NinetySix> =
  NinetySix$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NinetySix$ {
  /** @deprecated use `NinetySix$inboundSchema` instead. */
  export const inboundSchema = NinetySix$inboundSchema;
  /** @deprecated use `NinetySix$outboundSchema` instead. */
  export const outboundSchema = NinetySix$outboundSchema;
}

/** @internal */
export const NinetyFive$inboundSchema: z.ZodNativeEnum<typeof NinetyFive> = z
  .nativeEnum(NinetyFive);

/** @internal */
export const NinetyFive$outboundSchema: z.ZodNativeEnum<typeof NinetyFive> =
  NinetyFive$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NinetyFive$ {
  /** @deprecated use `NinetyFive$inboundSchema` instead. */
  export const inboundSchema = NinetyFive$inboundSchema;
  /** @deprecated use `NinetyFive$outboundSchema` instead. */
  export const outboundSchema = NinetyFive$outboundSchema;
}

/** @internal */
export const NinetyFour$inboundSchema: z.ZodNativeEnum<typeof NinetyFour> = z
  .nativeEnum(NinetyFour);

/** @internal */
export const NinetyFour$outboundSchema: z.ZodNativeEnum<typeof NinetyFour> =
  NinetyFour$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NinetyFour$ {
  /** @deprecated use `NinetyFour$inboundSchema` instead. */
  export const inboundSchema = NinetyFour$inboundSchema;
  /** @deprecated use `NinetyFour$outboundSchema` instead. */
  export const outboundSchema = NinetyFour$outboundSchema;
}

/** @internal */
export const NinetyThree$inboundSchema: z.ZodNativeEnum<typeof NinetyThree> = z
  .nativeEnum(NinetyThree);

/** @internal */
export const NinetyThree$outboundSchema: z.ZodNativeEnum<typeof NinetyThree> =
  NinetyThree$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NinetyThree$ {
  /** @deprecated use `NinetyThree$inboundSchema` instead. */
  export const inboundSchema = NinetyThree$inboundSchema;
  /** @deprecated use `NinetyThree$outboundSchema` instead. */
  export const outboundSchema = NinetyThree$outboundSchema;
}

/** @internal */
export const NinetyTwo$inboundSchema: z.ZodNativeEnum<typeof NinetyTwo> = z
  .nativeEnum(NinetyTwo);

/** @internal */
export const NinetyTwo$outboundSchema: z.ZodNativeEnum<typeof NinetyTwo> =
  NinetyTwo$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NinetyTwo$ {
  /** @deprecated use `NinetyTwo$inboundSchema` instead. */
  export const inboundSchema = NinetyTwo$inboundSchema;
  /** @deprecated use `NinetyTwo$outboundSchema` instead. */
  export const outboundSchema = NinetyTwo$outboundSchema;
}

/** @internal */
export const NinetyOne$inboundSchema: z.ZodNativeEnum<typeof NinetyOne> = z
  .nativeEnum(NinetyOne);

/** @internal */
export const NinetyOne$outboundSchema: z.ZodNativeEnum<typeof NinetyOne> =
  NinetyOne$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NinetyOne$ {
  /** @deprecated use `NinetyOne$inboundSchema` instead. */
  export const inboundSchema = NinetyOne$inboundSchema;
  /** @deprecated use `NinetyOne$outboundSchema` instead. */
  export const outboundSchema = NinetyOne$outboundSchema;
}

/** @internal */
export const Ninety$inboundSchema: z.ZodNativeEnum<typeof Ninety> = z
  .nativeEnum(Ninety);

/** @internal */
export const Ninety$outboundSchema: z.ZodNativeEnum<typeof Ninety> =
  Ninety$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Ninety$ {
  /** @deprecated use `Ninety$inboundSchema` instead. */
  export const inboundSchema = Ninety$inboundSchema;
  /** @deprecated use `Ninety$outboundSchema` instead. */
  export const outboundSchema = Ninety$outboundSchema;
}

/** @internal */
export const EightyNine$inboundSchema: z.ZodNativeEnum<typeof EightyNine> = z
  .nativeEnum(EightyNine);

/** @internal */
export const EightyNine$outboundSchema: z.ZodNativeEnum<typeof EightyNine> =
  EightyNine$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EightyNine$ {
  /** @deprecated use `EightyNine$inboundSchema` instead. */
  export const inboundSchema = EightyNine$inboundSchema;
  /** @deprecated use `EightyNine$outboundSchema` instead. */
  export const outboundSchema = EightyNine$outboundSchema;
}

/** @internal */
export const EightyEight$inboundSchema: z.ZodNativeEnum<typeof EightyEight> = z
  .nativeEnum(EightyEight);

/** @internal */
export const EightyEight$outboundSchema: z.ZodNativeEnum<typeof EightyEight> =
  EightyEight$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EightyEight$ {
  /** @deprecated use `EightyEight$inboundSchema` instead. */
  export const inboundSchema = EightyEight$inboundSchema;
  /** @deprecated use `EightyEight$outboundSchema` instead. */
  export const outboundSchema = EightyEight$outboundSchema;
}

/** @internal */
export const EightySeven$inboundSchema: z.ZodNativeEnum<typeof EightySeven> = z
  .nativeEnum(EightySeven);

/** @internal */
export const EightySeven$outboundSchema: z.ZodNativeEnum<typeof EightySeven> =
  EightySeven$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EightySeven$ {
  /** @deprecated use `EightySeven$inboundSchema` instead. */
  export const inboundSchema = EightySeven$inboundSchema;
  /** @deprecated use `EightySeven$outboundSchema` instead. */
  export const outboundSchema = EightySeven$outboundSchema;
}

/** @internal */
export const EightySix$inboundSchema: z.ZodNativeEnum<typeof EightySix> = z
  .nativeEnum(EightySix);

/** @internal */
export const EightySix$outboundSchema: z.ZodNativeEnum<typeof EightySix> =
  EightySix$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EightySix$ {
  /** @deprecated use `EightySix$inboundSchema` instead. */
  export const inboundSchema = EightySix$inboundSchema;
  /** @deprecated use `EightySix$outboundSchema` instead. */
  export const outboundSchema = EightySix$outboundSchema;
}

/** @internal */
export const EightyFive$inboundSchema: z.ZodNativeEnum<typeof EightyFive> = z
  .nativeEnum(EightyFive);

/** @internal */
export const EightyFive$outboundSchema: z.ZodNativeEnum<typeof EightyFive> =
  EightyFive$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EightyFive$ {
  /** @deprecated use `EightyFive$inboundSchema` instead. */
  export const inboundSchema = EightyFive$inboundSchema;
  /** @deprecated use `EightyFive$outboundSchema` instead. */
  export const outboundSchema = EightyFive$outboundSchema;
}

/** @internal */
export const EightyFour$inboundSchema: z.ZodNativeEnum<typeof EightyFour> = z
  .nativeEnum(EightyFour);

/** @internal */
export const EightyFour$outboundSchema: z.ZodNativeEnum<typeof EightyFour> =
  EightyFour$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EightyFour$ {
  /** @deprecated use `EightyFour$inboundSchema` instead. */
  export const inboundSchema = EightyFour$inboundSchema;
  /** @deprecated use `EightyFour$outboundSchema` instead. */
  export const outboundSchema = EightyFour$outboundSchema;
}

/** @internal */
export const EightyThree$inboundSchema: z.ZodNativeEnum<typeof EightyThree> = z
  .nativeEnum(EightyThree);

/** @internal */
export const EightyThree$outboundSchema: z.ZodNativeEnum<typeof EightyThree> =
  EightyThree$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EightyThree$ {
  /** @deprecated use `EightyThree$inboundSchema` instead. */
  export const inboundSchema = EightyThree$inboundSchema;
  /** @deprecated use `EightyThree$outboundSchema` instead. */
  export const outboundSchema = EightyThree$outboundSchema;
}

/** @internal */
export const EightyTwo$inboundSchema: z.ZodNativeEnum<typeof EightyTwo> = z
  .nativeEnum(EightyTwo);

/** @internal */
export const EightyTwo$outboundSchema: z.ZodNativeEnum<typeof EightyTwo> =
  EightyTwo$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EightyTwo$ {
  /** @deprecated use `EightyTwo$inboundSchema` instead. */
  export const inboundSchema = EightyTwo$inboundSchema;
  /** @deprecated use `EightyTwo$outboundSchema` instead. */
  export const outboundSchema = EightyTwo$outboundSchema;
}

/** @internal */
export const EightyOne$inboundSchema: z.ZodNativeEnum<typeof EightyOne> = z
  .nativeEnum(EightyOne);

/** @internal */
export const EightyOne$outboundSchema: z.ZodNativeEnum<typeof EightyOne> =
  EightyOne$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EightyOne$ {
  /** @deprecated use `EightyOne$inboundSchema` instead. */
  export const inboundSchema = EightyOne$inboundSchema;
  /** @deprecated use `EightyOne$outboundSchema` instead. */
  export const outboundSchema = EightyOne$outboundSchema;
}

/** @internal */
export const Eighty$inboundSchema: z.ZodNativeEnum<typeof Eighty> = z
  .nativeEnum(Eighty);

/** @internal */
export const Eighty$outboundSchema: z.ZodNativeEnum<typeof Eighty> =
  Eighty$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Eighty$ {
  /** @deprecated use `Eighty$inboundSchema` instead. */
  export const inboundSchema = Eighty$inboundSchema;
  /** @deprecated use `Eighty$outboundSchema` instead. */
  export const outboundSchema = Eighty$outboundSchema;
}

/** @internal */
export const SeventyNine$inboundSchema: z.ZodNativeEnum<typeof SeventyNine> = z
  .nativeEnum(SeventyNine);

/** @internal */
export const SeventyNine$outboundSchema: z.ZodNativeEnum<typeof SeventyNine> =
  SeventyNine$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SeventyNine$ {
  /** @deprecated use `SeventyNine$inboundSchema` instead. */
  export const inboundSchema = SeventyNine$inboundSchema;
  /** @deprecated use `SeventyNine$outboundSchema` instead. */
  export const outboundSchema = SeventyNine$outboundSchema;
}

/** @internal */
export const SeventyEight$inboundSchema: z.ZodNativeEnum<typeof SeventyEight> =
  z.nativeEnum(SeventyEight);

/** @internal */
export const SeventyEight$outboundSchema: z.ZodNativeEnum<typeof SeventyEight> =
  SeventyEight$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SeventyEight$ {
  /** @deprecated use `SeventyEight$inboundSchema` instead. */
  export const inboundSchema = SeventyEight$inboundSchema;
  /** @deprecated use `SeventyEight$outboundSchema` instead. */
  export const outboundSchema = SeventyEight$outboundSchema;
}

/** @internal */
export const SeventySeven$inboundSchema: z.ZodNativeEnum<typeof SeventySeven> =
  z.nativeEnum(SeventySeven);

/** @internal */
export const SeventySeven$outboundSchema: z.ZodNativeEnum<typeof SeventySeven> =
  SeventySeven$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SeventySeven$ {
  /** @deprecated use `SeventySeven$inboundSchema` instead. */
  export const inboundSchema = SeventySeven$inboundSchema;
  /** @deprecated use `SeventySeven$outboundSchema` instead. */
  export const outboundSchema = SeventySeven$outboundSchema;
}

/** @internal */
export const SeventySix$inboundSchema: z.ZodNativeEnum<typeof SeventySix> = z
  .nativeEnum(SeventySix);

/** @internal */
export const SeventySix$outboundSchema: z.ZodNativeEnum<typeof SeventySix> =
  SeventySix$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SeventySix$ {
  /** @deprecated use `SeventySix$inboundSchema` instead. */
  export const inboundSchema = SeventySix$inboundSchema;
  /** @deprecated use `SeventySix$outboundSchema` instead. */
  export const outboundSchema = SeventySix$outboundSchema;
}

/** @internal */
export const SeventyFive$inboundSchema: z.ZodNativeEnum<typeof SeventyFive> = z
  .nativeEnum(SeventyFive);

/** @internal */
export const SeventyFive$outboundSchema: z.ZodNativeEnum<typeof SeventyFive> =
  SeventyFive$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SeventyFive$ {
  /** @deprecated use `SeventyFive$inboundSchema` instead. */
  export const inboundSchema = SeventyFive$inboundSchema;
  /** @deprecated use `SeventyFive$outboundSchema` instead. */
  export const outboundSchema = SeventyFive$outboundSchema;
}

/** @internal */
export const SeventyFour$inboundSchema: z.ZodNativeEnum<typeof SeventyFour> = z
  .nativeEnum(SeventyFour);

/** @internal */
export const SeventyFour$outboundSchema: z.ZodNativeEnum<typeof SeventyFour> =
  SeventyFour$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SeventyFour$ {
  /** @deprecated use `SeventyFour$inboundSchema` instead. */
  export const inboundSchema = SeventyFour$inboundSchema;
  /** @deprecated use `SeventyFour$outboundSchema` instead. */
  export const outboundSchema = SeventyFour$outboundSchema;
}

/** @internal */
export const SeventyThree$inboundSchema: z.ZodNativeEnum<typeof SeventyThree> =
  z.nativeEnum(SeventyThree);

/** @internal */
export const SeventyThree$outboundSchema: z.ZodNativeEnum<typeof SeventyThree> =
  SeventyThree$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SeventyThree$ {
  /** @deprecated use `SeventyThree$inboundSchema` instead. */
  export const inboundSchema = SeventyThree$inboundSchema;
  /** @deprecated use `SeventyThree$outboundSchema` instead. */
  export const outboundSchema = SeventyThree$outboundSchema;
}

/** @internal */
export const SeventyTwo$inboundSchema: z.ZodNativeEnum<typeof SeventyTwo> = z
  .nativeEnum(SeventyTwo);

/** @internal */
export const SeventyTwo$outboundSchema: z.ZodNativeEnum<typeof SeventyTwo> =
  SeventyTwo$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SeventyTwo$ {
  /** @deprecated use `SeventyTwo$inboundSchema` instead. */
  export const inboundSchema = SeventyTwo$inboundSchema;
  /** @deprecated use `SeventyTwo$outboundSchema` instead. */
  export const outboundSchema = SeventyTwo$outboundSchema;
}

/** @internal */
export const SeventyOne$inboundSchema: z.ZodNativeEnum<typeof SeventyOne> = z
  .nativeEnum(SeventyOne);

/** @internal */
export const SeventyOne$outboundSchema: z.ZodNativeEnum<typeof SeventyOne> =
  SeventyOne$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SeventyOne$ {
  /** @deprecated use `SeventyOne$inboundSchema` instead. */
  export const inboundSchema = SeventyOne$inboundSchema;
  /** @deprecated use `SeventyOne$outboundSchema` instead. */
  export const outboundSchema = SeventyOne$outboundSchema;
}

/** @internal */
export const Field70$inboundSchema: z.ZodNativeEnum<typeof Field70> = z
  .nativeEnum(Field70);

/** @internal */
export const Field70$outboundSchema: z.ZodNativeEnum<typeof Field70> =
  Field70$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field70$ {
  /** @deprecated use `Field70$inboundSchema` instead. */
  export const inboundSchema = Field70$inboundSchema;
  /** @deprecated use `Field70$outboundSchema` instead. */
  export const outboundSchema = Field70$outboundSchema;
}

/** @internal */
export const Field69$inboundSchema: z.ZodNativeEnum<typeof Field69> = z
  .nativeEnum(Field69);

/** @internal */
export const Field69$outboundSchema: z.ZodNativeEnum<typeof Field69> =
  Field69$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field69$ {
  /** @deprecated use `Field69$inboundSchema` instead. */
  export const inboundSchema = Field69$inboundSchema;
  /** @deprecated use `Field69$outboundSchema` instead. */
  export const outboundSchema = Field69$outboundSchema;
}

/** @internal */
export const Field68$inboundSchema: z.ZodNativeEnum<typeof Field68> = z
  .nativeEnum(Field68);

/** @internal */
export const Field68$outboundSchema: z.ZodNativeEnum<typeof Field68> =
  Field68$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field68$ {
  /** @deprecated use `Field68$inboundSchema` instead. */
  export const inboundSchema = Field68$inboundSchema;
  /** @deprecated use `Field68$outboundSchema` instead. */
  export const outboundSchema = Field68$outboundSchema;
}

/** @internal */
export const Field67$inboundSchema: z.ZodNativeEnum<typeof Field67> = z
  .nativeEnum(Field67);

/** @internal */
export const Field67$outboundSchema: z.ZodNativeEnum<typeof Field67> =
  Field67$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field67$ {
  /** @deprecated use `Field67$inboundSchema` instead. */
  export const inboundSchema = Field67$inboundSchema;
  /** @deprecated use `Field67$outboundSchema` instead. */
  export const outboundSchema = Field67$outboundSchema;
}

/** @internal */
export const Field66$inboundSchema: z.ZodNativeEnum<typeof Field66> = z
  .nativeEnum(Field66);

/** @internal */
export const Field66$outboundSchema: z.ZodNativeEnum<typeof Field66> =
  Field66$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field66$ {
  /** @deprecated use `Field66$inboundSchema` instead. */
  export const inboundSchema = Field66$inboundSchema;
  /** @deprecated use `Field66$outboundSchema` instead. */
  export const outboundSchema = Field66$outboundSchema;
}

/** @internal */
export const Field65$inboundSchema: z.ZodNativeEnum<typeof Field65> = z
  .nativeEnum(Field65);

/** @internal */
export const Field65$outboundSchema: z.ZodNativeEnum<typeof Field65> =
  Field65$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field65$ {
  /** @deprecated use `Field65$inboundSchema` instead. */
  export const inboundSchema = Field65$inboundSchema;
  /** @deprecated use `Field65$outboundSchema` instead. */
  export const outboundSchema = Field65$outboundSchema;
}

/** @internal */
export const Field64$inboundSchema: z.ZodNativeEnum<typeof Field64> = z
  .nativeEnum(Field64);

/** @internal */
export const Field64$outboundSchema: z.ZodNativeEnum<typeof Field64> =
  Field64$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field64$ {
  /** @deprecated use `Field64$inboundSchema` instead. */
  export const inboundSchema = Field64$inboundSchema;
  /** @deprecated use `Field64$outboundSchema` instead. */
  export const outboundSchema = Field64$outboundSchema;
}

/** @internal */
export const Field63$inboundSchema: z.ZodNativeEnum<typeof Field63> = z
  .nativeEnum(Field63);

/** @internal */
export const Field63$outboundSchema: z.ZodNativeEnum<typeof Field63> =
  Field63$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field63$ {
  /** @deprecated use `Field63$inboundSchema` instead. */
  export const inboundSchema = Field63$inboundSchema;
  /** @deprecated use `Field63$outboundSchema` instead. */
  export const outboundSchema = Field63$outboundSchema;
}

/** @internal */
export const Field62$inboundSchema: z.ZodNativeEnum<typeof Field62> = z
  .nativeEnum(Field62);

/** @internal */
export const Field62$outboundSchema: z.ZodNativeEnum<typeof Field62> =
  Field62$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field62$ {
  /** @deprecated use `Field62$inboundSchema` instead. */
  export const inboundSchema = Field62$inboundSchema;
  /** @deprecated use `Field62$outboundSchema` instead. */
  export const outboundSchema = Field62$outboundSchema;
}

/** @internal */
export const Field61$inboundSchema: z.ZodNativeEnum<typeof Field61> = z
  .nativeEnum(Field61);

/** @internal */
export const Field61$outboundSchema: z.ZodNativeEnum<typeof Field61> =
  Field61$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field61$ {
  /** @deprecated use `Field61$inboundSchema` instead. */
  export const inboundSchema = Field61$inboundSchema;
  /** @deprecated use `Field61$outboundSchema` instead. */
  export const outboundSchema = Field61$outboundSchema;
}

/** @internal */
export const Field60$inboundSchema: z.ZodNativeEnum<typeof Field60> = z
  .nativeEnum(Field60);

/** @internal */
export const Field60$outboundSchema: z.ZodNativeEnum<typeof Field60> =
  Field60$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field60$ {
  /** @deprecated use `Field60$inboundSchema` instead. */
  export const inboundSchema = Field60$inboundSchema;
  /** @deprecated use `Field60$outboundSchema` instead. */
  export const outboundSchema = Field60$outboundSchema;
}

/** @internal */
export const Field59$inboundSchema: z.ZodNativeEnum<typeof Field59> = z
  .nativeEnum(Field59);

/** @internal */
export const Field59$outboundSchema: z.ZodNativeEnum<typeof Field59> =
  Field59$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field59$ {
  /** @deprecated use `Field59$inboundSchema` instead. */
  export const inboundSchema = Field59$inboundSchema;
  /** @deprecated use `Field59$outboundSchema` instead. */
  export const outboundSchema = Field59$outboundSchema;
}

/** @internal */
export const Field58$inboundSchema: z.ZodNativeEnum<typeof Field58> = z
  .nativeEnum(Field58);

/** @internal */
export const Field58$outboundSchema: z.ZodNativeEnum<typeof Field58> =
  Field58$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field58$ {
  /** @deprecated use `Field58$inboundSchema` instead. */
  export const inboundSchema = Field58$inboundSchema;
  /** @deprecated use `Field58$outboundSchema` instead. */
  export const outboundSchema = Field58$outboundSchema;
}

/** @internal */
export const Field57$inboundSchema: z.ZodNativeEnum<typeof Field57> = z
  .nativeEnum(Field57);

/** @internal */
export const Field57$outboundSchema: z.ZodNativeEnum<typeof Field57> =
  Field57$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field57$ {
  /** @deprecated use `Field57$inboundSchema` instead. */
  export const inboundSchema = Field57$inboundSchema;
  /** @deprecated use `Field57$outboundSchema` instead. */
  export const outboundSchema = Field57$outboundSchema;
}

/** @internal */
export const Field56$inboundSchema: z.ZodNativeEnum<typeof Field56> = z
  .nativeEnum(Field56);

/** @internal */
export const Field56$outboundSchema: z.ZodNativeEnum<typeof Field56> =
  Field56$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field56$ {
  /** @deprecated use `Field56$inboundSchema` instead. */
  export const inboundSchema = Field56$inboundSchema;
  /** @deprecated use `Field56$outboundSchema` instead. */
  export const outboundSchema = Field56$outboundSchema;
}

/** @internal */
export const Field55$inboundSchema: z.ZodNativeEnum<typeof Field55> = z
  .nativeEnum(Field55);

/** @internal */
export const Field55$outboundSchema: z.ZodNativeEnum<typeof Field55> =
  Field55$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field55$ {
  /** @deprecated use `Field55$inboundSchema` instead. */
  export const inboundSchema = Field55$inboundSchema;
  /** @deprecated use `Field55$outboundSchema` instead. */
  export const outboundSchema = Field55$outboundSchema;
}

/** @internal */
export const Field54$inboundSchema: z.ZodNativeEnum<typeof Field54> = z
  .nativeEnum(Field54);

/** @internal */
export const Field54$outboundSchema: z.ZodNativeEnum<typeof Field54> =
  Field54$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field54$ {
  /** @deprecated use `Field54$inboundSchema` instead. */
  export const inboundSchema = Field54$inboundSchema;
  /** @deprecated use `Field54$outboundSchema` instead. */
  export const outboundSchema = Field54$outboundSchema;
}

/** @internal */
export const Field53$inboundSchema: z.ZodNativeEnum<typeof Field53> = z
  .nativeEnum(Field53);

/** @internal */
export const Field53$outboundSchema: z.ZodNativeEnum<typeof Field53> =
  Field53$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field53$ {
  /** @deprecated use `Field53$inboundSchema` instead. */
  export const inboundSchema = Field53$inboundSchema;
  /** @deprecated use `Field53$outboundSchema` instead. */
  export const outboundSchema = Field53$outboundSchema;
}

/** @internal */
export const Field52$inboundSchema: z.ZodNativeEnum<typeof Field52> = z
  .nativeEnum(Field52);

/** @internal */
export const Field52$outboundSchema: z.ZodNativeEnum<typeof Field52> =
  Field52$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field52$ {
  /** @deprecated use `Field52$inboundSchema` instead. */
  export const inboundSchema = Field52$inboundSchema;
  /** @deprecated use `Field52$outboundSchema` instead. */
  export const outboundSchema = Field52$outboundSchema;
}

/** @internal */
export const Field51$inboundSchema: z.ZodNativeEnum<typeof Field51> = z
  .nativeEnum(Field51);

/** @internal */
export const Field51$outboundSchema: z.ZodNativeEnum<typeof Field51> =
  Field51$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field51$ {
  /** @deprecated use `Field51$inboundSchema` instead. */
  export const inboundSchema = Field51$inboundSchema;
  /** @deprecated use `Field51$outboundSchema` instead. */
  export const outboundSchema = Field51$outboundSchema;
}

/** @internal */
export const Field50$inboundSchema: z.ZodNativeEnum<typeof Field50> = z
  .nativeEnum(Field50);

/** @internal */
export const Field50$outboundSchema: z.ZodNativeEnum<typeof Field50> =
  Field50$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field50$ {
  /** @deprecated use `Field50$inboundSchema` instead. */
  export const inboundSchema = Field50$inboundSchema;
  /** @deprecated use `Field50$outboundSchema` instead. */
  export const outboundSchema = Field50$outboundSchema;
}

/** @internal */
export const Field49$inboundSchema: z.ZodNativeEnum<typeof Field49> = z
  .nativeEnum(Field49);

/** @internal */
export const Field49$outboundSchema: z.ZodNativeEnum<typeof Field49> =
  Field49$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field49$ {
  /** @deprecated use `Field49$inboundSchema` instead. */
  export const inboundSchema = Field49$inboundSchema;
  /** @deprecated use `Field49$outboundSchema` instead. */
  export const outboundSchema = Field49$outboundSchema;
}

/** @internal */
export const Field48$inboundSchema: z.ZodNativeEnum<typeof Field48> = z
  .nativeEnum(Field48);

/** @internal */
export const Field48$outboundSchema: z.ZodNativeEnum<typeof Field48> =
  Field48$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field48$ {
  /** @deprecated use `Field48$inboundSchema` instead. */
  export const inboundSchema = Field48$inboundSchema;
  /** @deprecated use `Field48$outboundSchema` instead. */
  export const outboundSchema = Field48$outboundSchema;
}

/** @internal */
export const Field47$inboundSchema: z.ZodNativeEnum<typeof Field47> = z
  .nativeEnum(Field47);

/** @internal */
export const Field47$outboundSchema: z.ZodNativeEnum<typeof Field47> =
  Field47$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field47$ {
  /** @deprecated use `Field47$inboundSchema` instead. */
  export const inboundSchema = Field47$inboundSchema;
  /** @deprecated use `Field47$outboundSchema` instead. */
  export const outboundSchema = Field47$outboundSchema;
}

/** @internal */
export const Field46$inboundSchema: z.ZodNativeEnum<typeof Field46> = z
  .nativeEnum(Field46);

/** @internal */
export const Field46$outboundSchema: z.ZodNativeEnum<typeof Field46> =
  Field46$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field46$ {
  /** @deprecated use `Field46$inboundSchema` instead. */
  export const inboundSchema = Field46$inboundSchema;
  /** @deprecated use `Field46$outboundSchema` instead. */
  export const outboundSchema = Field46$outboundSchema;
}

/** @internal */
export const Field45$inboundSchema: z.ZodNativeEnum<typeof Field45> = z
  .nativeEnum(Field45);

/** @internal */
export const Field45$outboundSchema: z.ZodNativeEnum<typeof Field45> =
  Field45$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field45$ {
  /** @deprecated use `Field45$inboundSchema` instead. */
  export const inboundSchema = Field45$inboundSchema;
  /** @deprecated use `Field45$outboundSchema` instead. */
  export const outboundSchema = Field45$outboundSchema;
}

/** @internal */
export const Field44$inboundSchema: z.ZodNativeEnum<typeof Field44> = z
  .nativeEnum(Field44);

/** @internal */
export const Field44$outboundSchema: z.ZodNativeEnum<typeof Field44> =
  Field44$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field44$ {
  /** @deprecated use `Field44$inboundSchema` instead. */
  export const inboundSchema = Field44$inboundSchema;
  /** @deprecated use `Field44$outboundSchema` instead. */
  export const outboundSchema = Field44$outboundSchema;
}

/** @internal */
export const Field43$inboundSchema: z.ZodNativeEnum<typeof Field43> = z
  .nativeEnum(Field43);

/** @internal */
export const Field43$outboundSchema: z.ZodNativeEnum<typeof Field43> =
  Field43$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field43$ {
  /** @deprecated use `Field43$inboundSchema` instead. */
  export const inboundSchema = Field43$inboundSchema;
  /** @deprecated use `Field43$outboundSchema` instead. */
  export const outboundSchema = Field43$outboundSchema;
}

/** @internal */
export const Field42$inboundSchema: z.ZodNativeEnum<typeof Field42> = z
  .nativeEnum(Field42);

/** @internal */
export const Field42$outboundSchema: z.ZodNativeEnum<typeof Field42> =
  Field42$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field42$ {
  /** @deprecated use `Field42$inboundSchema` instead. */
  export const inboundSchema = Field42$inboundSchema;
  /** @deprecated use `Field42$outboundSchema` instead. */
  export const outboundSchema = Field42$outboundSchema;
}

/** @internal */
export const Field41$inboundSchema: z.ZodNativeEnum<typeof Field41> = z
  .nativeEnum(Field41);

/** @internal */
export const Field41$outboundSchema: z.ZodNativeEnum<typeof Field41> =
  Field41$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field41$ {
  /** @deprecated use `Field41$inboundSchema` instead. */
  export const inboundSchema = Field41$inboundSchema;
  /** @deprecated use `Field41$outboundSchema` instead. */
  export const outboundSchema = Field41$outboundSchema;
}

/** @internal */
export const Field40$inboundSchema: z.ZodNativeEnum<typeof Field40> = z
  .nativeEnum(Field40);

/** @internal */
export const Field40$outboundSchema: z.ZodNativeEnum<typeof Field40> =
  Field40$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field40$ {
  /** @deprecated use `Field40$inboundSchema` instead. */
  export const inboundSchema = Field40$inboundSchema;
  /** @deprecated use `Field40$outboundSchema` instead. */
  export const outboundSchema = Field40$outboundSchema;
}

/** @internal */
export const Field39$inboundSchema: z.ZodNativeEnum<typeof Field39> = z
  .nativeEnum(Field39);

/** @internal */
export const Field39$outboundSchema: z.ZodNativeEnum<typeof Field39> =
  Field39$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field39$ {
  /** @deprecated use `Field39$inboundSchema` instead. */
  export const inboundSchema = Field39$inboundSchema;
  /** @deprecated use `Field39$outboundSchema` instead. */
  export const outboundSchema = Field39$outboundSchema;
}

/** @internal */
export const Field38$inboundSchema: z.ZodNativeEnum<typeof Field38> = z
  .nativeEnum(Field38);

/** @internal */
export const Field38$outboundSchema: z.ZodNativeEnum<typeof Field38> =
  Field38$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field38$ {
  /** @deprecated use `Field38$inboundSchema` instead. */
  export const inboundSchema = Field38$inboundSchema;
  /** @deprecated use `Field38$outboundSchema` instead. */
  export const outboundSchema = Field38$outboundSchema;
}

/** @internal */
export const Field37$inboundSchema: z.ZodNativeEnum<typeof Field37> = z
  .nativeEnum(Field37);

/** @internal */
export const Field37$outboundSchema: z.ZodNativeEnum<typeof Field37> =
  Field37$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field37$ {
  /** @deprecated use `Field37$inboundSchema` instead. */
  export const inboundSchema = Field37$inboundSchema;
  /** @deprecated use `Field37$outboundSchema` instead. */
  export const outboundSchema = Field37$outboundSchema;
}

/** @internal */
export const Field36$inboundSchema: z.ZodNativeEnum<typeof Field36> = z
  .nativeEnum(Field36);

/** @internal */
export const Field36$outboundSchema: z.ZodNativeEnum<typeof Field36> =
  Field36$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field36$ {
  /** @deprecated use `Field36$inboundSchema` instead. */
  export const inboundSchema = Field36$inboundSchema;
  /** @deprecated use `Field36$outboundSchema` instead. */
  export const outboundSchema = Field36$outboundSchema;
}

/** @internal */
export const Field35$inboundSchema: z.ZodNativeEnum<typeof Field35> = z
  .nativeEnum(Field35);

/** @internal */
export const Field35$outboundSchema: z.ZodNativeEnum<typeof Field35> =
  Field35$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field35$ {
  /** @deprecated use `Field35$inboundSchema` instead. */
  export const inboundSchema = Field35$inboundSchema;
  /** @deprecated use `Field35$outboundSchema` instead. */
  export const outboundSchema = Field35$outboundSchema;
}

/** @internal */
export const Field34$inboundSchema: z.ZodNativeEnum<typeof Field34> = z
  .nativeEnum(Field34);

/** @internal */
export const Field34$outboundSchema: z.ZodNativeEnum<typeof Field34> =
  Field34$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field34$ {
  /** @deprecated use `Field34$inboundSchema` instead. */
  export const inboundSchema = Field34$inboundSchema;
  /** @deprecated use `Field34$outboundSchema` instead. */
  export const outboundSchema = Field34$outboundSchema;
}

/** @internal */
export const Field33$inboundSchema: z.ZodNativeEnum<typeof Field33> = z
  .nativeEnum(Field33);

/** @internal */
export const Field33$outboundSchema: z.ZodNativeEnum<typeof Field33> =
  Field33$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field33$ {
  /** @deprecated use `Field33$inboundSchema` instead. */
  export const inboundSchema = Field33$inboundSchema;
  /** @deprecated use `Field33$outboundSchema` instead. */
  export const outboundSchema = Field33$outboundSchema;
}

/** @internal */
export const Field32$inboundSchema: z.ZodNativeEnum<typeof Field32> = z
  .nativeEnum(Field32);

/** @internal */
export const Field32$outboundSchema: z.ZodNativeEnum<typeof Field32> =
  Field32$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Field32$ {
  /** @deprecated use `Field32$inboundSchema` instead. */
  export const inboundSchema = Field32$inboundSchema;
  /** @deprecated use `Field32$outboundSchema` instead. */
  export const outboundSchema = Field32$outboundSchema;
}

/** @internal */
export const QueryTableField31$inboundSchema: z.ZodNativeEnum<
  typeof QueryTableField31
> = z.nativeEnum(QueryTableField31);

/** @internal */
export const QueryTableField31$outboundSchema: z.ZodNativeEnum<
  typeof QueryTableField31
> = QueryTableField31$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableField31$ {
  /** @deprecated use `QueryTableField31$inboundSchema` instead. */
  export const inboundSchema = QueryTableField31$inboundSchema;
  /** @deprecated use `QueryTableField31$outboundSchema` instead. */
  export const outboundSchema = QueryTableField31$outboundSchema;
}

/** @internal */
export const QueryTableField30$inboundSchema: z.ZodNativeEnum<
  typeof QueryTableField30
> = z.nativeEnum(QueryTableField30);

/** @internal */
export const QueryTableField30$outboundSchema: z.ZodNativeEnum<
  typeof QueryTableField30
> = QueryTableField30$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableField30$ {
  /** @deprecated use `QueryTableField30$inboundSchema` instead. */
  export const inboundSchema = QueryTableField30$inboundSchema;
  /** @deprecated use `QueryTableField30$outboundSchema` instead. */
  export const outboundSchema = QueryTableField30$outboundSchema;
}

/** @internal */
export const QueryTableField29$inboundSchema: z.ZodNativeEnum<
  typeof QueryTableField29
> = z.nativeEnum(QueryTableField29);

/** @internal */
export const QueryTableField29$outboundSchema: z.ZodNativeEnum<
  typeof QueryTableField29
> = QueryTableField29$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableField29$ {
  /** @deprecated use `QueryTableField29$inboundSchema` instead. */
  export const inboundSchema = QueryTableField29$inboundSchema;
  /** @deprecated use `QueryTableField29$outboundSchema` instead. */
  export const outboundSchema = QueryTableField29$outboundSchema;
}

/** @internal */
export const QueryTableField28$inboundSchema: z.ZodNativeEnum<
  typeof QueryTableField28
> = z.nativeEnum(QueryTableField28);

/** @internal */
export const QueryTableField28$outboundSchema: z.ZodNativeEnum<
  typeof QueryTableField28
> = QueryTableField28$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableField28$ {
  /** @deprecated use `QueryTableField28$inboundSchema` instead. */
  export const inboundSchema = QueryTableField28$inboundSchema;
  /** @deprecated use `QueryTableField28$outboundSchema` instead. */
  export const outboundSchema = QueryTableField28$outboundSchema;
}

/** @internal */
export const QueryTableField27$inboundSchema: z.ZodNativeEnum<
  typeof QueryTableField27
> = z.nativeEnum(QueryTableField27);

/** @internal */
export const QueryTableField27$outboundSchema: z.ZodNativeEnum<
  typeof QueryTableField27
> = QueryTableField27$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableField27$ {
  /** @deprecated use `QueryTableField27$inboundSchema` instead. */
  export const inboundSchema = QueryTableField27$inboundSchema;
  /** @deprecated use `QueryTableField27$outboundSchema` instead. */
  export const outboundSchema = QueryTableField27$outboundSchema;
}

/** @internal */
export const QueryTableField26$inboundSchema: z.ZodNativeEnum<
  typeof QueryTableField26
> = z.nativeEnum(QueryTableField26);

/** @internal */
export const QueryTableField26$outboundSchema: z.ZodNativeEnum<
  typeof QueryTableField26
> = QueryTableField26$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableField26$ {
  /** @deprecated use `QueryTableField26$inboundSchema` instead. */
  export const inboundSchema = QueryTableField26$inboundSchema;
  /** @deprecated use `QueryTableField26$outboundSchema` instead. */
  export const outboundSchema = QueryTableField26$outboundSchema;
}

/** @internal */
export const QueryTableField25$inboundSchema: z.ZodNativeEnum<
  typeof QueryTableField25
> = z.nativeEnum(QueryTableField25);

/** @internal */
export const QueryTableField25$outboundSchema: z.ZodNativeEnum<
  typeof QueryTableField25
> = QueryTableField25$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableField25$ {
  /** @deprecated use `QueryTableField25$inboundSchema` instead. */
  export const inboundSchema = QueryTableField25$inboundSchema;
  /** @deprecated use `QueryTableField25$outboundSchema` instead. */
  export const outboundSchema = QueryTableField25$outboundSchema;
}

/** @internal */
export const QueryTableField24$inboundSchema: z.ZodNativeEnum<
  typeof QueryTableField24
> = z.nativeEnum(QueryTableField24);

/** @internal */
export const QueryTableField24$outboundSchema: z.ZodNativeEnum<
  typeof QueryTableField24
> = QueryTableField24$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableField24$ {
  /** @deprecated use `QueryTableField24$inboundSchema` instead. */
  export const inboundSchema = QueryTableField24$inboundSchema;
  /** @deprecated use `QueryTableField24$outboundSchema` instead. */
  export const outboundSchema = QueryTableField24$outboundSchema;
}

/** @internal */
export const QueryTableField23$inboundSchema: z.ZodNativeEnum<
  typeof QueryTableField23
> = z.nativeEnum(QueryTableField23);

/** @internal */
export const QueryTableField23$outboundSchema: z.ZodNativeEnum<
  typeof QueryTableField23
> = QueryTableField23$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableField23$ {
  /** @deprecated use `QueryTableField23$inboundSchema` instead. */
  export const inboundSchema = QueryTableField23$inboundSchema;
  /** @deprecated use `QueryTableField23$outboundSchema` instead. */
  export const outboundSchema = QueryTableField23$outboundSchema;
}

/** @internal */
export const QueryTableField22$inboundSchema: z.ZodNativeEnum<
  typeof QueryTableField22
> = z.nativeEnum(QueryTableField22);

/** @internal */
export const QueryTableField22$outboundSchema: z.ZodNativeEnum<
  typeof QueryTableField22
> = QueryTableField22$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableField22$ {
  /** @deprecated use `QueryTableField22$inboundSchema` instead. */
  export const inboundSchema = QueryTableField22$inboundSchema;
  /** @deprecated use `QueryTableField22$outboundSchema` instead. */
  export const outboundSchema = QueryTableField22$outboundSchema;
}

/** @internal */
export const QueryTableField21$inboundSchema: z.ZodNativeEnum<
  typeof QueryTableField21
> = z.nativeEnum(QueryTableField21);

/** @internal */
export const QueryTableField21$outboundSchema: z.ZodNativeEnum<
  typeof QueryTableField21
> = QueryTableField21$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableField21$ {
  /** @deprecated use `QueryTableField21$inboundSchema` instead. */
  export const inboundSchema = QueryTableField21$inboundSchema;
  /** @deprecated use `QueryTableField21$outboundSchema` instead. */
  export const outboundSchema = QueryTableField21$outboundSchema;
}

/** @internal */
export const QueryTableField20$inboundSchema: z.ZodNativeEnum<
  typeof QueryTableField20
> = z.nativeEnum(QueryTableField20);

/** @internal */
export const QueryTableField20$outboundSchema: z.ZodNativeEnum<
  typeof QueryTableField20
> = QueryTableField20$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableField20$ {
  /** @deprecated use `QueryTableField20$inboundSchema` instead. */
  export const inboundSchema = QueryTableField20$inboundSchema;
  /** @deprecated use `QueryTableField20$outboundSchema` instead. */
  export const outboundSchema = QueryTableField20$outboundSchema;
}

/** @internal */
export const QueryTableField19$inboundSchema: z.ZodNativeEnum<
  typeof QueryTableField19
> = z.nativeEnum(QueryTableField19);

/** @internal */
export const QueryTableField19$outboundSchema: z.ZodNativeEnum<
  typeof QueryTableField19
> = QueryTableField19$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableField19$ {
  /** @deprecated use `QueryTableField19$inboundSchema` instead. */
  export const inboundSchema = QueryTableField19$inboundSchema;
  /** @deprecated use `QueryTableField19$outboundSchema` instead. */
  export const outboundSchema = QueryTableField19$outboundSchema;
}

/** @internal */
export const QueryTableField18$inboundSchema: z.ZodNativeEnum<
  typeof QueryTableField18
> = z.nativeEnum(QueryTableField18);

/** @internal */
export const QueryTableField18$outboundSchema: z.ZodNativeEnum<
  typeof QueryTableField18
> = QueryTableField18$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableField18$ {
  /** @deprecated use `QueryTableField18$inboundSchema` instead. */
  export const inboundSchema = QueryTableField18$inboundSchema;
  /** @deprecated use `QueryTableField18$outboundSchema` instead. */
  export const outboundSchema = QueryTableField18$outboundSchema;
}

/** @internal */
export const QueryTableField17$inboundSchema: z.ZodNativeEnum<
  typeof QueryTableField17
> = z.nativeEnum(QueryTableField17);

/** @internal */
export const QueryTableField17$outboundSchema: z.ZodNativeEnum<
  typeof QueryTableField17
> = QueryTableField17$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableField17$ {
  /** @deprecated use `QueryTableField17$inboundSchema` instead. */
  export const inboundSchema = QueryTableField17$inboundSchema;
  /** @deprecated use `QueryTableField17$outboundSchema` instead. */
  export const outboundSchema = QueryTableField17$outboundSchema;
}

/** @internal */
export const QueryTableField16$inboundSchema: z.ZodNativeEnum<
  typeof QueryTableField16
> = z.nativeEnum(QueryTableField16);

/** @internal */
export const QueryTableField16$outboundSchema: z.ZodNativeEnum<
  typeof QueryTableField16
> = QueryTableField16$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableField16$ {
  /** @deprecated use `QueryTableField16$inboundSchema` instead. */
  export const inboundSchema = QueryTableField16$inboundSchema;
  /** @deprecated use `QueryTableField16$outboundSchema` instead. */
  export const outboundSchema = QueryTableField16$outboundSchema;
}

/** @internal */
export const QueryTableField15$inboundSchema: z.ZodNativeEnum<
  typeof QueryTableField15
> = z.nativeEnum(QueryTableField15);

/** @internal */
export const QueryTableField15$outboundSchema: z.ZodNativeEnum<
  typeof QueryTableField15
> = QueryTableField15$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableField15$ {
  /** @deprecated use `QueryTableField15$inboundSchema` instead. */
  export const inboundSchema = QueryTableField15$inboundSchema;
  /** @deprecated use `QueryTableField15$outboundSchema` instead. */
  export const outboundSchema = QueryTableField15$outboundSchema;
}

/** @internal */
export const QueryTableField14$inboundSchema: z.ZodNativeEnum<
  typeof QueryTableField14
> = z.nativeEnum(QueryTableField14);

/** @internal */
export const QueryTableField14$outboundSchema: z.ZodNativeEnum<
  typeof QueryTableField14
> = QueryTableField14$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableField14$ {
  /** @deprecated use `QueryTableField14$inboundSchema` instead. */
  export const inboundSchema = QueryTableField14$inboundSchema;
  /** @deprecated use `QueryTableField14$outboundSchema` instead. */
  export const outboundSchema = QueryTableField14$outboundSchema;
}

/** @internal */
export const QueryTableField13$inboundSchema: z.ZodNativeEnum<
  typeof QueryTableField13
> = z.nativeEnum(QueryTableField13);

/** @internal */
export const QueryTableField13$outboundSchema: z.ZodNativeEnum<
  typeof QueryTableField13
> = QueryTableField13$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableField13$ {
  /** @deprecated use `QueryTableField13$inboundSchema` instead. */
  export const inboundSchema = QueryTableField13$inboundSchema;
  /** @deprecated use `QueryTableField13$outboundSchema` instead. */
  export const outboundSchema = QueryTableField13$outboundSchema;
}

/** @internal */
export const QueryTableField12$inboundSchema: z.ZodNativeEnum<
  typeof QueryTableField12
> = z.nativeEnum(QueryTableField12);

/** @internal */
export const QueryTableField12$outboundSchema: z.ZodNativeEnum<
  typeof QueryTableField12
> = QueryTableField12$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableField12$ {
  /** @deprecated use `QueryTableField12$inboundSchema` instead. */
  export const inboundSchema = QueryTableField12$inboundSchema;
  /** @deprecated use `QueryTableField12$outboundSchema` instead. */
  export const outboundSchema = QueryTableField12$outboundSchema;
}

/** @internal */
export const QueryTableField11$inboundSchema: z.ZodNativeEnum<
  typeof QueryTableField11
> = z.nativeEnum(QueryTableField11);

/** @internal */
export const QueryTableField11$outboundSchema: z.ZodNativeEnum<
  typeof QueryTableField11
> = QueryTableField11$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableField11$ {
  /** @deprecated use `QueryTableField11$inboundSchema` instead. */
  export const inboundSchema = QueryTableField11$inboundSchema;
  /** @deprecated use `QueryTableField11$outboundSchema` instead. */
  export const outboundSchema = QueryTableField11$outboundSchema;
}

/** @internal */
export const QueryTableField10$inboundSchema: z.ZodNativeEnum<
  typeof QueryTableField10
> = z.nativeEnum(QueryTableField10);

/** @internal */
export const QueryTableField10$outboundSchema: z.ZodNativeEnum<
  typeof QueryTableField10
> = QueryTableField10$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableField10$ {
  /** @deprecated use `QueryTableField10$inboundSchema` instead. */
  export const inboundSchema = QueryTableField10$inboundSchema;
  /** @deprecated use `QueryTableField10$outboundSchema` instead. */
  export const outboundSchema = QueryTableField10$outboundSchema;
}

/** @internal */
export const QueryTableField9$inboundSchema: z.ZodNativeEnum<
  typeof QueryTableField9
> = z.nativeEnum(QueryTableField9);

/** @internal */
export const QueryTableField9$outboundSchema: z.ZodNativeEnum<
  typeof QueryTableField9
> = QueryTableField9$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableField9$ {
  /** @deprecated use `QueryTableField9$inboundSchema` instead. */
  export const inboundSchema = QueryTableField9$inboundSchema;
  /** @deprecated use `QueryTableField9$outboundSchema` instead. */
  export const outboundSchema = QueryTableField9$outboundSchema;
}

/** @internal */
export const QueryTableField8$inboundSchema: z.ZodNativeEnum<
  typeof QueryTableField8
> = z.nativeEnum(QueryTableField8);

/** @internal */
export const QueryTableField8$outboundSchema: z.ZodNativeEnum<
  typeof QueryTableField8
> = QueryTableField8$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableField8$ {
  /** @deprecated use `QueryTableField8$inboundSchema` instead. */
  export const inboundSchema = QueryTableField8$inboundSchema;
  /** @deprecated use `QueryTableField8$outboundSchema` instead. */
  export const outboundSchema = QueryTableField8$outboundSchema;
}

/** @internal */
export const QueryTableFieldQuery7$inboundSchema: z.ZodNativeEnum<
  typeof QueryTableFieldQuery7
> = z.nativeEnum(QueryTableFieldQuery7);

/** @internal */
export const QueryTableFieldQuery7$outboundSchema: z.ZodNativeEnum<
  typeof QueryTableFieldQuery7
> = QueryTableFieldQuery7$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableFieldQuery7$ {
  /** @deprecated use `QueryTableFieldQuery7$inboundSchema` instead. */
  export const inboundSchema = QueryTableFieldQuery7$inboundSchema;
  /** @deprecated use `QueryTableFieldQuery7$outboundSchema` instead. */
  export const outboundSchema = QueryTableFieldQuery7$outboundSchema;
}

/** @internal */
export const QueryTableFieldQuery6$inboundSchema: z.ZodNativeEnum<
  typeof QueryTableFieldQuery6
> = z.nativeEnum(QueryTableFieldQuery6);

/** @internal */
export const QueryTableFieldQuery6$outboundSchema: z.ZodNativeEnum<
  typeof QueryTableFieldQuery6
> = QueryTableFieldQuery6$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableFieldQuery6$ {
  /** @deprecated use `QueryTableFieldQuery6$inboundSchema` instead. */
  export const inboundSchema = QueryTableFieldQuery6$inboundSchema;
  /** @deprecated use `QueryTableFieldQuery6$outboundSchema` instead. */
  export const outboundSchema = QueryTableFieldQuery6$outboundSchema;
}

/** @internal */
export const QueryTableFieldQuery5$inboundSchema: z.ZodNativeEnum<
  typeof QueryTableFieldQuery5
> = z.nativeEnum(QueryTableFieldQuery5);

/** @internal */
export const QueryTableFieldQuery5$outboundSchema: z.ZodNativeEnum<
  typeof QueryTableFieldQuery5
> = QueryTableFieldQuery5$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableFieldQuery5$ {
  /** @deprecated use `QueryTableFieldQuery5$inboundSchema` instead. */
  export const inboundSchema = QueryTableFieldQuery5$inboundSchema;
  /** @deprecated use `QueryTableFieldQuery5$outboundSchema` instead. */
  export const outboundSchema = QueryTableFieldQuery5$outboundSchema;
}

/** @internal */
export const QueryTableFieldQuery4$inboundSchema: z.ZodNativeEnum<
  typeof QueryTableFieldQuery4
> = z.nativeEnum(QueryTableFieldQuery4);

/** @internal */
export const QueryTableFieldQuery4$outboundSchema: z.ZodNativeEnum<
  typeof QueryTableFieldQuery4
> = QueryTableFieldQuery4$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableFieldQuery4$ {
  /** @deprecated use `QueryTableFieldQuery4$inboundSchema` instead. */
  export const inboundSchema = QueryTableFieldQuery4$inboundSchema;
  /** @deprecated use `QueryTableFieldQuery4$outboundSchema` instead. */
  export const outboundSchema = QueryTableFieldQuery4$outboundSchema;
}

/** @internal */
export const QueryTableFieldQuery3$inboundSchema: z.ZodNativeEnum<
  typeof QueryTableFieldQuery3
> = z.nativeEnum(QueryTableFieldQuery3);

/** @internal */
export const QueryTableFieldQuery3$outboundSchema: z.ZodNativeEnum<
  typeof QueryTableFieldQuery3
> = QueryTableFieldQuery3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableFieldQuery3$ {
  /** @deprecated use `QueryTableFieldQuery3$inboundSchema` instead. */
  export const inboundSchema = QueryTableFieldQuery3$inboundSchema;
  /** @deprecated use `QueryTableFieldQuery3$outboundSchema` instead. */
  export const outboundSchema = QueryTableFieldQuery3$outboundSchema;
}

/** @internal */
export const QueryTableFieldQuery2$inboundSchema: z.ZodNativeEnum<
  typeof QueryTableFieldQuery2
> = z.nativeEnum(QueryTableFieldQuery2);

/** @internal */
export const QueryTableFieldQuery2$outboundSchema: z.ZodNativeEnum<
  typeof QueryTableFieldQuery2
> = QueryTableFieldQuery2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableFieldQuery2$ {
  /** @deprecated use `QueryTableFieldQuery2$inboundSchema` instead. */
  export const inboundSchema = QueryTableFieldQuery2$inboundSchema;
  /** @deprecated use `QueryTableFieldQuery2$outboundSchema` instead. */
  export const outboundSchema = QueryTableFieldQuery2$outboundSchema;
}

/** @internal */
export const QueryTableFieldQuery1$inboundSchema: z.ZodNativeEnum<
  typeof QueryTableFieldQuery1
> = z.nativeEnum(QueryTableFieldQuery1);

/** @internal */
export const QueryTableFieldQuery1$outboundSchema: z.ZodNativeEnum<
  typeof QueryTableFieldQuery1
> = QueryTableFieldQuery1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableFieldQuery1$ {
  /** @deprecated use `QueryTableFieldQuery1$inboundSchema` instead. */
  export const inboundSchema = QueryTableFieldQuery1$inboundSchema;
  /** @deprecated use `QueryTableFieldQuery1$outboundSchema` instead. */
  export const outboundSchema = QueryTableFieldQuery1$outboundSchema;
}

/** @internal */
export const QueryTableQueryField$inboundSchema: z.ZodType<
  QueryTableQueryField,
  z.ZodTypeDef,
  unknown
> = z.union([
  QueryTableFieldQuery1$inboundSchema,
  QueryTableFieldQuery2$inboundSchema,
  QueryTableFieldQuery3$inboundSchema,
  QueryTableFieldQuery4$inboundSchema,
  QueryTableFieldQuery5$inboundSchema,
  QueryTableFieldQuery6$inboundSchema,
  QueryTableFieldQuery7$inboundSchema,
  QueryTableField8$inboundSchema,
  QueryTableField9$inboundSchema,
  QueryTableField10$inboundSchema,
  QueryTableField11$inboundSchema,
  QueryTableField12$inboundSchema,
  QueryTableField13$inboundSchema,
  QueryTableField14$inboundSchema,
  QueryTableField15$inboundSchema,
  QueryTableField16$inboundSchema,
  QueryTableField17$inboundSchema,
  QueryTableField18$inboundSchema,
  QueryTableField19$inboundSchema,
  QueryTableField20$inboundSchema,
  QueryTableField21$inboundSchema,
  QueryTableField22$inboundSchema,
  QueryTableField23$inboundSchema,
  QueryTableField24$inboundSchema,
  QueryTableField25$inboundSchema,
  QueryTableField26$inboundSchema,
  QueryTableField27$inboundSchema,
  QueryTableField28$inboundSchema,
  QueryTableField29$inboundSchema,
  QueryTableField30$inboundSchema,
  QueryTableField31$inboundSchema,
  Field32$inboundSchema,
  Field33$inboundSchema,
  Field34$inboundSchema,
  Field35$inboundSchema,
  Field36$inboundSchema,
  Field37$inboundSchema,
  Field38$inboundSchema,
  Field39$inboundSchema,
  Field40$inboundSchema,
  Field41$inboundSchema,
  Field42$inboundSchema,
  Field43$inboundSchema,
  Field44$inboundSchema,
  Field45$inboundSchema,
  Field46$inboundSchema,
  Field47$inboundSchema,
  Field48$inboundSchema,
  Field49$inboundSchema,
  Field50$inboundSchema,
  Field51$inboundSchema,
  Field52$inboundSchema,
  Field53$inboundSchema,
  Field54$inboundSchema,
  Field55$inboundSchema,
  Field56$inboundSchema,
  Field57$inboundSchema,
  Field58$inboundSchema,
  Field59$inboundSchema,
  Field60$inboundSchema,
  Field61$inboundSchema,
  Field62$inboundSchema,
  Field63$inboundSchema,
  Field64$inboundSchema,
  Field65$inboundSchema,
  Field66$inboundSchema,
  Field67$inboundSchema,
  Field68$inboundSchema,
  Field69$inboundSchema,
  Field70$inboundSchema,
  SeventyOne$inboundSchema,
  SeventyTwo$inboundSchema,
  SeventyThree$inboundSchema,
  SeventyFour$inboundSchema,
  SeventyFive$inboundSchema,
  SeventySix$inboundSchema,
  SeventySeven$inboundSchema,
  SeventyEight$inboundSchema,
  SeventyNine$inboundSchema,
  Eighty$inboundSchema,
  EightyOne$inboundSchema,
  EightyTwo$inboundSchema,
  EightyThree$inboundSchema,
  EightyFour$inboundSchema,
  EightyFive$inboundSchema,
  EightySix$inboundSchema,
  EightySeven$inboundSchema,
  EightyEight$inboundSchema,
  EightyNine$inboundSchema,
  Ninety$inboundSchema,
  NinetyOne$inboundSchema,
  NinetyTwo$inboundSchema,
  NinetyThree$inboundSchema,
  NinetyFour$inboundSchema,
  NinetyFive$inboundSchema,
  NinetySix$inboundSchema,
  NinetySeven$inboundSchema,
  NinetyEight$inboundSchema,
  NinetyNine$inboundSchema,
  OneHundred$inboundSchema,
  OneHundredAndOne$inboundSchema,
  OneHundredAndTwo$inboundSchema,
  OneHundredAndThree$inboundSchema,
  OneHundredAndFour$inboundSchema,
  OneHundredAndFive$inboundSchema,
  OneHundredAndSix$inboundSchema,
  OneHundredAndSeven$inboundSchema,
  OneHundredAndEight$inboundSchema,
  OneHundredAndNine$inboundSchema,
  OneHundredAndTen$inboundSchema,
  OneHundredAndEleven$inboundSchema,
  OneHundredAndTwelve$inboundSchema,
  OneHundredAndThirteen$inboundSchema,
  OneHundredAndFourteen$inboundSchema,
  OneHundredAndFifteen$inboundSchema,
  OneHundredAndSixteen$inboundSchema,
  OneHundredAndSeventeen$inboundSchema,
  OneHundredAndEighteen$inboundSchema,
  OneHundredAndNineteen$inboundSchema,
  OneHundredAndTwenty$inboundSchema,
  OneHundredAndTwentyOne$inboundSchema,
  OneHundredAndTwentyTwo$inboundSchema,
  OneHundredAndTwentyThree$inboundSchema,
  OneHundredAndTwentyFour$inboundSchema,
  OneHundredAndTwentyFive$inboundSchema,
  OneHundredAndTwentySix$inboundSchema,
  OneHundredAndTwentySeven$inboundSchema,
  OneHundredAndTwentyEight$inboundSchema,
  OneHundredAndTwentyNine$inboundSchema,
  OneHundredAndThirty$inboundSchema,
  OneHundredAndThirtyOne$inboundSchema,
  OneHundredAndThirtyTwo$inboundSchema,
  OneHundredAndThirtyThree$inboundSchema,
  OneHundredAndThirtyFour$inboundSchema,
  OneHundredAndThirtyFive$inboundSchema,
  OneHundredAndThirtySix$inboundSchema,
  OneHundredAndThirtySeven$inboundSchema,
  OneHundredAndThirtyEight$inboundSchema,
  OneHundredAndThirtyNine$inboundSchema,
  OneHundredAndForty$inboundSchema,
  OneHundredAndFortyOne$inboundSchema,
  OneHundredAndFortyTwo$inboundSchema,
  OneHundredAndFortyThree$inboundSchema,
  OneHundredAndFortyFour$inboundSchema,
  OneHundredAndFortyFive$inboundSchema,
  OneHundredAndFortySix$inboundSchema,
  OneHundredAndFortySeven$inboundSchema,
  OneHundredAndFortyEight$inboundSchema,
  OneHundredAndFortyNine$inboundSchema,
  OneHundredAndFifty$inboundSchema,
  OneHundredAndFiftyOne$inboundSchema,
  OneHundredAndFiftyTwo$inboundSchema,
  OneHundredAndFiftyThree$inboundSchema,
  OneHundredAndFiftyFour$inboundSchema,
  OneHundredAndFiftyFive$inboundSchema,
  OneHundredAndFiftySix$inboundSchema,
  OneHundredAndFiftySeven$inboundSchema,
  OneHundredAndFiftyEight$inboundSchema,
  OneHundredAndFiftyNine$inboundSchema,
  OneHundredAndSixty$inboundSchema,
  OneHundredAndSixtyOne$inboundSchema,
  OneHundredAndSixtyTwo$inboundSchema,
  OneHundredAndSixtyThree$inboundSchema,
  OneHundredAndSixtyFour$inboundSchema,
  OneHundredAndSixtyFive$inboundSchema,
  OneHundredAndSixtySix$inboundSchema,
  OneHundredAndSixtySeven$inboundSchema,
  OneHundredAndSixtyEight$inboundSchema,
  OneHundredAndSixtyNine$inboundSchema,
  OneHundredAndSeventy$inboundSchema,
  OneHundredAndSeventyOne$inboundSchema,
  OneHundredAndSeventyTwo$inboundSchema,
  OneHundredAndSeventyThree$inboundSchema,
  OneHundredAndSeventyFour$inboundSchema,
  OneHundredAndSeventyFive$inboundSchema,
  OneHundredAndSeventySix$inboundSchema,
  OneHundredAndSeventySeven$inboundSchema,
  OneHundredAndSeventyEight$inboundSchema,
  OneHundredAndSeventyNine$inboundSchema,
  OneHundredAndEighty$inboundSchema,
  OneHundredAndEightyOne$inboundSchema,
  OneHundredAndEightyTwo$inboundSchema,
  OneHundredAndEightyThree$inboundSchema,
  OneHundredAndEightyFour$inboundSchema,
  OneHundredAndEightyFive$inboundSchema,
  OneHundredAndEightySix$inboundSchema,
  OneHundredAndEightySeven$inboundSchema,
  OneHundredAndEightyEight$inboundSchema,
  OneHundredAndEightyNine$inboundSchema,
  OneHundredAndNinety$inboundSchema,
  OneHundredAndNinetyOne$inboundSchema,
  OneHundredAndNinetyTwo$inboundSchema,
  OneHundredAndNinetyThree$inboundSchema,
  OneHundredAndNinetyFour$inboundSchema,
  OneHundredAndNinetyFive$inboundSchema,
  OneHundredAndNinetySix$inboundSchema,
  OneHundredAndNinetySeven$inboundSchema,
  OneHundredAndNinetyEight$inboundSchema,
  OneHundredAndNinetyNine$inboundSchema,
  TwoHundred$inboundSchema,
  TwoHundredAndOne$inboundSchema,
  TwoHundredAndTwo$inboundSchema,
  TwoHundredAndThree$inboundSchema,
  TwoHundredAndFour$inboundSchema,
  TwoHundredAndFive$inboundSchema,
  TwoHundredAndSix$inboundSchema,
  TwoHundredAndSeven$inboundSchema,
  TwoHundredAndEight$inboundSchema,
  TwoHundredAndNine$inboundSchema,
  TwoHundredAndTen$inboundSchema,
  TwoHundredAndEleven$inboundSchema,
  TwoHundredAndTwelve$inboundSchema,
  TwoHundredAndThirteen$inboundSchema,
  TwoHundredAndFourteen$inboundSchema,
  TwoHundredAndFifteen$inboundSchema,
  TwoHundredAndSixteen$inboundSchema,
  TwoHundredAndSeventeen$inboundSchema,
  TwoHundredAndEighteen$inboundSchema,
  TwoHundredAndNineteen$inboundSchema,
  TwoHundredAndTwenty$inboundSchema,
  TwoHundredAndTwentyOne$inboundSchema,
  TwoHundredAndTwentyTwo$inboundSchema,
  TwoHundredAndTwentyThree$inboundSchema,
  TwoHundredAndTwentyFour$inboundSchema,
  TwoHundredAndTwentyFive$inboundSchema,
  TwoHundredAndTwentySix$inboundSchema,
  TwoHundredAndTwentySeven$inboundSchema,
  TwoHundredAndTwentyEight$inboundSchema,
  TwoHundredAndTwentyNine$inboundSchema,
  TwoHundredAndThirty$inboundSchema,
  TwoHundredAndThirtyOne$inboundSchema,
  TwoHundredAndThirtyTwo$inboundSchema,
  TwoHundredAndThirtyThree$inboundSchema,
  TwoHundredAndThirtyFour$inboundSchema,
  TwoHundredAndThirtyFive$inboundSchema,
  TwoHundredAndThirtySix$inboundSchema,
  TwoHundredAndThirtySeven$inboundSchema,
  TwoHundredAndThirtyEight$inboundSchema,
  TwoHundredAndThirtyNine$inboundSchema,
  TwoHundredAndForty$inboundSchema,
  TwoHundredAndFortyOne$inboundSchema,
  TwoHundredAndFortyTwo$inboundSchema,
  TwoHundredAndFortyThree$inboundSchema,
  TwoHundredAndFortyFour$inboundSchema,
  TwoHundredAndFortyFive$inboundSchema,
  TwoHundredAndFortySix$inboundSchema,
  TwoHundredAndFortySeven$inboundSchema,
  TwoHundredAndFortyEight$inboundSchema,
  TwoHundredAndFortyNine$inboundSchema,
  TwoHundredAndFifty$inboundSchema,
  TwoHundredAndFiftyOne$inboundSchema,
  TwoHundredAndFiftyTwo$inboundSchema,
  TwoHundredAndFiftyThree$inboundSchema,
  TwoHundredAndFiftyFour$inboundSchema,
  TwoHundredAndFiftyFive$inboundSchema,
  TwoHundredAndFiftySix$inboundSchema,
  TwoHundredAndFiftySeven$inboundSchema,
  TwoHundredAndFiftyEight$inboundSchema,
  TwoHundredAndFiftyNine$inboundSchema,
  TwoHundredAndSixty$inboundSchema,
  TwoHundredAndSixtyOne$inboundSchema,
  TwoHundredAndSixtyTwo$inboundSchema,
  TwoHundredAndSixtyThree$inboundSchema,
  TwoHundredAndSixtyFour$inboundSchema,
  TwoHundredAndSixtyFive$inboundSchema,
  TwoHundredAndSixtySix$inboundSchema,
  TwoHundredAndSixtySeven$inboundSchema,
  TwoHundredAndSixtyEight$inboundSchema,
  TwoHundredAndSixtyNine$inboundSchema,
  TwoHundredAndSeventy$inboundSchema,
  TwoHundredAndSeventyOne$inboundSchema,
  TwoHundredAndSeventyTwo$inboundSchema,
  TwoHundredAndSeventyThree$inboundSchema,
  TwoHundredAndSeventyFour$inboundSchema,
  TwoHundredAndSeventyFive$inboundSchema,
  TwoHundredAndSeventySix$inboundSchema,
  TwoHundredAndSeventySeven$inboundSchema,
  TwoHundredAndSeventyEight$inboundSchema,
  TwoHundredAndSeventyNine$inboundSchema,
  TwoHundredAndEighty$inboundSchema,
  TwoHundredAndEightyOne$inboundSchema,
  TwoHundredAndEightyTwo$inboundSchema,
  TwoHundredAndEightyThree$inboundSchema,
  TwoHundredAndEightyFour$inboundSchema,
  TwoHundredAndEightyFive$inboundSchema,
  TwoHundredAndEightySix$inboundSchema,
  TwoHundredAndEightySeven$inboundSchema,
  TwoHundredAndEightyEight$inboundSchema,
  TwoHundredAndEightyNine$inboundSchema,
  TwoHundredAndNinety$inboundSchema,
  TwoHundredAndNinetyOne$inboundSchema,
  TwoHundredAndNinetyTwo$inboundSchema,
  TwoHundredAndNinetyThree$inboundSchema,
  TwoHundredAndNinetyFour$inboundSchema,
  TwoHundredAndNinetyFive$inboundSchema,
  TwoHundredAndNinetySix$inboundSchema,
  TwoHundredAndNinetySeven$inboundSchema,
  TwoHundredAndNinetyEight$inboundSchema,
  TwoHundredAndNinetyNine$inboundSchema,
  ThreeHundred$inboundSchema,
  ThreeHundredAndOne$inboundSchema,
  ThreeHundredAndTwo$inboundSchema,
  ThreeHundredAndThree$inboundSchema,
  ThreeHundredAndFour$inboundSchema,
  ThreeHundredAndFive$inboundSchema,
  ThreeHundredAndSix$inboundSchema,
  ThreeHundredAndSeven$inboundSchema,
  ThreeHundredAndEight$inboundSchema,
  ThreeHundredAndNine$inboundSchema,
  ThreeHundredAndTen$inboundSchema,
]);

/** @internal */
export type QueryTableQueryField$Outbound =
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string;

/** @internal */
export const QueryTableQueryField$outboundSchema: z.ZodType<
  QueryTableQueryField$Outbound,
  z.ZodTypeDef,
  QueryTableQueryField
> = z.union([
  QueryTableFieldQuery1$outboundSchema,
  QueryTableFieldQuery2$outboundSchema,
  QueryTableFieldQuery3$outboundSchema,
  QueryTableFieldQuery4$outboundSchema,
  QueryTableFieldQuery5$outboundSchema,
  QueryTableFieldQuery6$outboundSchema,
  QueryTableFieldQuery7$outboundSchema,
  QueryTableField8$outboundSchema,
  QueryTableField9$outboundSchema,
  QueryTableField10$outboundSchema,
  QueryTableField11$outboundSchema,
  QueryTableField12$outboundSchema,
  QueryTableField13$outboundSchema,
  QueryTableField14$outboundSchema,
  QueryTableField15$outboundSchema,
  QueryTableField16$outboundSchema,
  QueryTableField17$outboundSchema,
  QueryTableField18$outboundSchema,
  QueryTableField19$outboundSchema,
  QueryTableField20$outboundSchema,
  QueryTableField21$outboundSchema,
  QueryTableField22$outboundSchema,
  QueryTableField23$outboundSchema,
  QueryTableField24$outboundSchema,
  QueryTableField25$outboundSchema,
  QueryTableField26$outboundSchema,
  QueryTableField27$outboundSchema,
  QueryTableField28$outboundSchema,
  QueryTableField29$outboundSchema,
  QueryTableField30$outboundSchema,
  QueryTableField31$outboundSchema,
  Field32$outboundSchema,
  Field33$outboundSchema,
  Field34$outboundSchema,
  Field35$outboundSchema,
  Field36$outboundSchema,
  Field37$outboundSchema,
  Field38$outboundSchema,
  Field39$outboundSchema,
  Field40$outboundSchema,
  Field41$outboundSchema,
  Field42$outboundSchema,
  Field43$outboundSchema,
  Field44$outboundSchema,
  Field45$outboundSchema,
  Field46$outboundSchema,
  Field47$outboundSchema,
  Field48$outboundSchema,
  Field49$outboundSchema,
  Field50$outboundSchema,
  Field51$outboundSchema,
  Field52$outboundSchema,
  Field53$outboundSchema,
  Field54$outboundSchema,
  Field55$outboundSchema,
  Field56$outboundSchema,
  Field57$outboundSchema,
  Field58$outboundSchema,
  Field59$outboundSchema,
  Field60$outboundSchema,
  Field61$outboundSchema,
  Field62$outboundSchema,
  Field63$outboundSchema,
  Field64$outboundSchema,
  Field65$outboundSchema,
  Field66$outboundSchema,
  Field67$outboundSchema,
  Field68$outboundSchema,
  Field69$outboundSchema,
  Field70$outboundSchema,
  SeventyOne$outboundSchema,
  SeventyTwo$outboundSchema,
  SeventyThree$outboundSchema,
  SeventyFour$outboundSchema,
  SeventyFive$outboundSchema,
  SeventySix$outboundSchema,
  SeventySeven$outboundSchema,
  SeventyEight$outboundSchema,
  SeventyNine$outboundSchema,
  Eighty$outboundSchema,
  EightyOne$outboundSchema,
  EightyTwo$outboundSchema,
  EightyThree$outboundSchema,
  EightyFour$outboundSchema,
  EightyFive$outboundSchema,
  EightySix$outboundSchema,
  EightySeven$outboundSchema,
  EightyEight$outboundSchema,
  EightyNine$outboundSchema,
  Ninety$outboundSchema,
  NinetyOne$outboundSchema,
  NinetyTwo$outboundSchema,
  NinetyThree$outboundSchema,
  NinetyFour$outboundSchema,
  NinetyFive$outboundSchema,
  NinetySix$outboundSchema,
  NinetySeven$outboundSchema,
  NinetyEight$outboundSchema,
  NinetyNine$outboundSchema,
  OneHundred$outboundSchema,
  OneHundredAndOne$outboundSchema,
  OneHundredAndTwo$outboundSchema,
  OneHundredAndThree$outboundSchema,
  OneHundredAndFour$outboundSchema,
  OneHundredAndFive$outboundSchema,
  OneHundredAndSix$outboundSchema,
  OneHundredAndSeven$outboundSchema,
  OneHundredAndEight$outboundSchema,
  OneHundredAndNine$outboundSchema,
  OneHundredAndTen$outboundSchema,
  OneHundredAndEleven$outboundSchema,
  OneHundredAndTwelve$outboundSchema,
  OneHundredAndThirteen$outboundSchema,
  OneHundredAndFourteen$outboundSchema,
  OneHundredAndFifteen$outboundSchema,
  OneHundredAndSixteen$outboundSchema,
  OneHundredAndSeventeen$outboundSchema,
  OneHundredAndEighteen$outboundSchema,
  OneHundredAndNineteen$outboundSchema,
  OneHundredAndTwenty$outboundSchema,
  OneHundredAndTwentyOne$outboundSchema,
  OneHundredAndTwentyTwo$outboundSchema,
  OneHundredAndTwentyThree$outboundSchema,
  OneHundredAndTwentyFour$outboundSchema,
  OneHundredAndTwentyFive$outboundSchema,
  OneHundredAndTwentySix$outboundSchema,
  OneHundredAndTwentySeven$outboundSchema,
  OneHundredAndTwentyEight$outboundSchema,
  OneHundredAndTwentyNine$outboundSchema,
  OneHundredAndThirty$outboundSchema,
  OneHundredAndThirtyOne$outboundSchema,
  OneHundredAndThirtyTwo$outboundSchema,
  OneHundredAndThirtyThree$outboundSchema,
  OneHundredAndThirtyFour$outboundSchema,
  OneHundredAndThirtyFive$outboundSchema,
  OneHundredAndThirtySix$outboundSchema,
  OneHundredAndThirtySeven$outboundSchema,
  OneHundredAndThirtyEight$outboundSchema,
  OneHundredAndThirtyNine$outboundSchema,
  OneHundredAndForty$outboundSchema,
  OneHundredAndFortyOne$outboundSchema,
  OneHundredAndFortyTwo$outboundSchema,
  OneHundredAndFortyThree$outboundSchema,
  OneHundredAndFortyFour$outboundSchema,
  OneHundredAndFortyFive$outboundSchema,
  OneHundredAndFortySix$outboundSchema,
  OneHundredAndFortySeven$outboundSchema,
  OneHundredAndFortyEight$outboundSchema,
  OneHundredAndFortyNine$outboundSchema,
  OneHundredAndFifty$outboundSchema,
  OneHundredAndFiftyOne$outboundSchema,
  OneHundredAndFiftyTwo$outboundSchema,
  OneHundredAndFiftyThree$outboundSchema,
  OneHundredAndFiftyFour$outboundSchema,
  OneHundredAndFiftyFive$outboundSchema,
  OneHundredAndFiftySix$outboundSchema,
  OneHundredAndFiftySeven$outboundSchema,
  OneHundredAndFiftyEight$outboundSchema,
  OneHundredAndFiftyNine$outboundSchema,
  OneHundredAndSixty$outboundSchema,
  OneHundredAndSixtyOne$outboundSchema,
  OneHundredAndSixtyTwo$outboundSchema,
  OneHundredAndSixtyThree$outboundSchema,
  OneHundredAndSixtyFour$outboundSchema,
  OneHundredAndSixtyFive$outboundSchema,
  OneHundredAndSixtySix$outboundSchema,
  OneHundredAndSixtySeven$outboundSchema,
  OneHundredAndSixtyEight$outboundSchema,
  OneHundredAndSixtyNine$outboundSchema,
  OneHundredAndSeventy$outboundSchema,
  OneHundredAndSeventyOne$outboundSchema,
  OneHundredAndSeventyTwo$outboundSchema,
  OneHundredAndSeventyThree$outboundSchema,
  OneHundredAndSeventyFour$outboundSchema,
  OneHundredAndSeventyFive$outboundSchema,
  OneHundredAndSeventySix$outboundSchema,
  OneHundredAndSeventySeven$outboundSchema,
  OneHundredAndSeventyEight$outboundSchema,
  OneHundredAndSeventyNine$outboundSchema,
  OneHundredAndEighty$outboundSchema,
  OneHundredAndEightyOne$outboundSchema,
  OneHundredAndEightyTwo$outboundSchema,
  OneHundredAndEightyThree$outboundSchema,
  OneHundredAndEightyFour$outboundSchema,
  OneHundredAndEightyFive$outboundSchema,
  OneHundredAndEightySix$outboundSchema,
  OneHundredAndEightySeven$outboundSchema,
  OneHundredAndEightyEight$outboundSchema,
  OneHundredAndEightyNine$outboundSchema,
  OneHundredAndNinety$outboundSchema,
  OneHundredAndNinetyOne$outboundSchema,
  OneHundredAndNinetyTwo$outboundSchema,
  OneHundredAndNinetyThree$outboundSchema,
  OneHundredAndNinetyFour$outboundSchema,
  OneHundredAndNinetyFive$outboundSchema,
  OneHundredAndNinetySix$outboundSchema,
  OneHundredAndNinetySeven$outboundSchema,
  OneHundredAndNinetyEight$outboundSchema,
  OneHundredAndNinetyNine$outboundSchema,
  TwoHundred$outboundSchema,
  TwoHundredAndOne$outboundSchema,
  TwoHundredAndTwo$outboundSchema,
  TwoHundredAndThree$outboundSchema,
  TwoHundredAndFour$outboundSchema,
  TwoHundredAndFive$outboundSchema,
  TwoHundredAndSix$outboundSchema,
  TwoHundredAndSeven$outboundSchema,
  TwoHundredAndEight$outboundSchema,
  TwoHundredAndNine$outboundSchema,
  TwoHundredAndTen$outboundSchema,
  TwoHundredAndEleven$outboundSchema,
  TwoHundredAndTwelve$outboundSchema,
  TwoHundredAndThirteen$outboundSchema,
  TwoHundredAndFourteen$outboundSchema,
  TwoHundredAndFifteen$outboundSchema,
  TwoHundredAndSixteen$outboundSchema,
  TwoHundredAndSeventeen$outboundSchema,
  TwoHundredAndEighteen$outboundSchema,
  TwoHundredAndNineteen$outboundSchema,
  TwoHundredAndTwenty$outboundSchema,
  TwoHundredAndTwentyOne$outboundSchema,
  TwoHundredAndTwentyTwo$outboundSchema,
  TwoHundredAndTwentyThree$outboundSchema,
  TwoHundredAndTwentyFour$outboundSchema,
  TwoHundredAndTwentyFive$outboundSchema,
  TwoHundredAndTwentySix$outboundSchema,
  TwoHundredAndTwentySeven$outboundSchema,
  TwoHundredAndTwentyEight$outboundSchema,
  TwoHundredAndTwentyNine$outboundSchema,
  TwoHundredAndThirty$outboundSchema,
  TwoHundredAndThirtyOne$outboundSchema,
  TwoHundredAndThirtyTwo$outboundSchema,
  TwoHundredAndThirtyThree$outboundSchema,
  TwoHundredAndThirtyFour$outboundSchema,
  TwoHundredAndThirtyFive$outboundSchema,
  TwoHundredAndThirtySix$outboundSchema,
  TwoHundredAndThirtySeven$outboundSchema,
  TwoHundredAndThirtyEight$outboundSchema,
  TwoHundredAndThirtyNine$outboundSchema,
  TwoHundredAndForty$outboundSchema,
  TwoHundredAndFortyOne$outboundSchema,
  TwoHundredAndFortyTwo$outboundSchema,
  TwoHundredAndFortyThree$outboundSchema,
  TwoHundredAndFortyFour$outboundSchema,
  TwoHundredAndFortyFive$outboundSchema,
  TwoHundredAndFortySix$outboundSchema,
  TwoHundredAndFortySeven$outboundSchema,
  TwoHundredAndFortyEight$outboundSchema,
  TwoHundredAndFortyNine$outboundSchema,
  TwoHundredAndFifty$outboundSchema,
  TwoHundredAndFiftyOne$outboundSchema,
  TwoHundredAndFiftyTwo$outboundSchema,
  TwoHundredAndFiftyThree$outboundSchema,
  TwoHundredAndFiftyFour$outboundSchema,
  TwoHundredAndFiftyFive$outboundSchema,
  TwoHundredAndFiftySix$outboundSchema,
  TwoHundredAndFiftySeven$outboundSchema,
  TwoHundredAndFiftyEight$outboundSchema,
  TwoHundredAndFiftyNine$outboundSchema,
  TwoHundredAndSixty$outboundSchema,
  TwoHundredAndSixtyOne$outboundSchema,
  TwoHundredAndSixtyTwo$outboundSchema,
  TwoHundredAndSixtyThree$outboundSchema,
  TwoHundredAndSixtyFour$outboundSchema,
  TwoHundredAndSixtyFive$outboundSchema,
  TwoHundredAndSixtySix$outboundSchema,
  TwoHundredAndSixtySeven$outboundSchema,
  TwoHundredAndSixtyEight$outboundSchema,
  TwoHundredAndSixtyNine$outboundSchema,
  TwoHundredAndSeventy$outboundSchema,
  TwoHundredAndSeventyOne$outboundSchema,
  TwoHundredAndSeventyTwo$outboundSchema,
  TwoHundredAndSeventyThree$outboundSchema,
  TwoHundredAndSeventyFour$outboundSchema,
  TwoHundredAndSeventyFive$outboundSchema,
  TwoHundredAndSeventySix$outboundSchema,
  TwoHundredAndSeventySeven$outboundSchema,
  TwoHundredAndSeventyEight$outboundSchema,
  TwoHundredAndSeventyNine$outboundSchema,
  TwoHundredAndEighty$outboundSchema,
  TwoHundredAndEightyOne$outboundSchema,
  TwoHundredAndEightyTwo$outboundSchema,
  TwoHundredAndEightyThree$outboundSchema,
  TwoHundredAndEightyFour$outboundSchema,
  TwoHundredAndEightyFive$outboundSchema,
  TwoHundredAndEightySix$outboundSchema,
  TwoHundredAndEightySeven$outboundSchema,
  TwoHundredAndEightyEight$outboundSchema,
  TwoHundredAndEightyNine$outboundSchema,
  TwoHundredAndNinety$outboundSchema,
  TwoHundredAndNinetyOne$outboundSchema,
  TwoHundredAndNinetyTwo$outboundSchema,
  TwoHundredAndNinetyThree$outboundSchema,
  TwoHundredAndNinetyFour$outboundSchema,
  TwoHundredAndNinetyFive$outboundSchema,
  TwoHundredAndNinetySix$outboundSchema,
  TwoHundredAndNinetySeven$outboundSchema,
  TwoHundredAndNinetyEight$outboundSchema,
  TwoHundredAndNinetyNine$outboundSchema,
  ThreeHundred$outboundSchema,
  ThreeHundredAndOne$outboundSchema,
  ThreeHundredAndTwo$outboundSchema,
  ThreeHundredAndThree$outboundSchema,
  ThreeHundredAndFour$outboundSchema,
  ThreeHundredAndFive$outboundSchema,
  ThreeHundredAndSix$outboundSchema,
  ThreeHundredAndSeven$outboundSchema,
  ThreeHundredAndEight$outboundSchema,
  ThreeHundredAndNine$outboundSchema,
  ThreeHundredAndTen$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableQueryField$ {
  /** @deprecated use `QueryTableQueryField$inboundSchema` instead. */
  export const inboundSchema = QueryTableQueryField$inboundSchema;
  /** @deprecated use `QueryTableQueryField$outboundSchema` instead. */
  export const outboundSchema = QueryTableQueryField$outboundSchema;
  /** @deprecated use `QueryTableQueryField$Outbound` instead. */
  export type Outbound = QueryTableQueryField$Outbound;
}

export function queryTableQueryFieldToJSON(
  queryTableQueryField: QueryTableQueryField,
): string {
  return JSON.stringify(
    QueryTableQueryField$outboundSchema.parse(queryTableQueryField),
  );
}

export function queryTableQueryFieldFromJSON(
  jsonString: string,
): SafeParseResult<QueryTableQueryField, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => QueryTableQueryField$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'QueryTableQueryField' from JSON`,
  );
}

/** @internal */
export const QueryTableDirection2$inboundSchema: z.ZodNativeEnum<
  typeof QueryTableDirection2
> = z.nativeEnum(QueryTableDirection2);

/** @internal */
export const QueryTableDirection2$outboundSchema: z.ZodNativeEnum<
  typeof QueryTableDirection2
> = QueryTableDirection2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableDirection2$ {
  /** @deprecated use `QueryTableDirection2$inboundSchema` instead. */
  export const inboundSchema = QueryTableDirection2$inboundSchema;
  /** @deprecated use `QueryTableDirection2$outboundSchema` instead. */
  export const outboundSchema = QueryTableDirection2$outboundSchema;
}

/** @internal */
export const QueryTableDirection1$inboundSchema: z.ZodNativeEnum<
  typeof QueryTableDirection1
> = z.nativeEnum(QueryTableDirection1);

/** @internal */
export const QueryTableDirection1$outboundSchema: z.ZodNativeEnum<
  typeof QueryTableDirection1
> = QueryTableDirection1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableDirection1$ {
  /** @deprecated use `QueryTableDirection1$inboundSchema` instead. */
  export const inboundSchema = QueryTableDirection1$inboundSchema;
  /** @deprecated use `QueryTableDirection1$outboundSchema` instead. */
  export const outboundSchema = QueryTableDirection1$outboundSchema;
}

/** @internal */
export const QueryTableDirection$inboundSchema: z.ZodType<
  QueryTableDirection,
  z.ZodTypeDef,
  unknown
> = z.union([
  QueryTableDirection1$inboundSchema,
  QueryTableDirection2$inboundSchema,
]);

/** @internal */
export type QueryTableDirection$Outbound = string | string;

/** @internal */
export const QueryTableDirection$outboundSchema: z.ZodType<
  QueryTableDirection$Outbound,
  z.ZodTypeDef,
  QueryTableDirection
> = z.union([
  QueryTableDirection1$outboundSchema,
  QueryTableDirection2$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableDirection$ {
  /** @deprecated use `QueryTableDirection$inboundSchema` instead. */
  export const inboundSchema = QueryTableDirection$inboundSchema;
  /** @deprecated use `QueryTableDirection$outboundSchema` instead. */
  export const outboundSchema = QueryTableDirection$outboundSchema;
  /** @deprecated use `QueryTableDirection$Outbound` instead. */
  export type Outbound = QueryTableDirection$Outbound;
}

export function queryTableDirectionToJSON(
  queryTableDirection: QueryTableDirection,
): string {
  return JSON.stringify(
    QueryTableDirection$outboundSchema.parse(queryTableDirection),
  );
}

export function queryTableDirectionFromJSON(
  jsonString: string,
): SafeParseResult<QueryTableDirection, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => QueryTableDirection$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'QueryTableDirection' from JSON`,
  );
}

/** @internal */
export const QueryTableOrderBy$inboundSchema: z.ZodType<
  QueryTableOrderBy,
  z.ZodTypeDef,
  unknown
> = z.object({
  field: z.union([
    QueryTableFieldQuery1$inboundSchema,
    QueryTableFieldQuery2$inboundSchema,
    QueryTableFieldQuery3$inboundSchema,
    QueryTableFieldQuery4$inboundSchema,
    QueryTableFieldQuery5$inboundSchema,
    QueryTableFieldQuery6$inboundSchema,
    QueryTableFieldQuery7$inboundSchema,
    QueryTableField8$inboundSchema,
    QueryTableField9$inboundSchema,
    QueryTableField10$inboundSchema,
    QueryTableField11$inboundSchema,
    QueryTableField12$inboundSchema,
    QueryTableField13$inboundSchema,
    QueryTableField14$inboundSchema,
    QueryTableField15$inboundSchema,
    QueryTableField16$inboundSchema,
    QueryTableField17$inboundSchema,
    QueryTableField18$inboundSchema,
    QueryTableField19$inboundSchema,
    QueryTableField20$inboundSchema,
    QueryTableField21$inboundSchema,
    QueryTableField22$inboundSchema,
    QueryTableField23$inboundSchema,
    QueryTableField24$inboundSchema,
    QueryTableField25$inboundSchema,
    QueryTableField26$inboundSchema,
    QueryTableField27$inboundSchema,
    QueryTableField28$inboundSchema,
    QueryTableField29$inboundSchema,
    QueryTableField30$inboundSchema,
    QueryTableField31$inboundSchema,
    Field32$inboundSchema,
    Field33$inboundSchema,
    Field34$inboundSchema,
    Field35$inboundSchema,
    Field36$inboundSchema,
    Field37$inboundSchema,
    Field38$inboundSchema,
    Field39$inboundSchema,
    Field40$inboundSchema,
    Field41$inboundSchema,
    Field42$inboundSchema,
    Field43$inboundSchema,
    Field44$inboundSchema,
    Field45$inboundSchema,
    Field46$inboundSchema,
    Field47$inboundSchema,
    Field48$inboundSchema,
    Field49$inboundSchema,
    Field50$inboundSchema,
    Field51$inboundSchema,
    Field52$inboundSchema,
    Field53$inboundSchema,
    Field54$inboundSchema,
    Field55$inboundSchema,
    Field56$inboundSchema,
    Field57$inboundSchema,
    Field58$inboundSchema,
    Field59$inboundSchema,
    Field60$inboundSchema,
    Field61$inboundSchema,
    Field62$inboundSchema,
    Field63$inboundSchema,
    Field64$inboundSchema,
    Field65$inboundSchema,
    Field66$inboundSchema,
    Field67$inboundSchema,
    Field68$inboundSchema,
    Field69$inboundSchema,
    Field70$inboundSchema,
    SeventyOne$inboundSchema,
    SeventyTwo$inboundSchema,
    SeventyThree$inboundSchema,
    SeventyFour$inboundSchema,
    SeventyFive$inboundSchema,
    SeventySix$inboundSchema,
    SeventySeven$inboundSchema,
    SeventyEight$inboundSchema,
    SeventyNine$inboundSchema,
    Eighty$inboundSchema,
    EightyOne$inboundSchema,
    EightyTwo$inboundSchema,
    EightyThree$inboundSchema,
    EightyFour$inboundSchema,
    EightyFive$inboundSchema,
    EightySix$inboundSchema,
    EightySeven$inboundSchema,
    EightyEight$inboundSchema,
    EightyNine$inboundSchema,
    Ninety$inboundSchema,
    NinetyOne$inboundSchema,
    NinetyTwo$inboundSchema,
    NinetyThree$inboundSchema,
    NinetyFour$inboundSchema,
    NinetyFive$inboundSchema,
    NinetySix$inboundSchema,
    NinetySeven$inboundSchema,
    NinetyEight$inboundSchema,
    NinetyNine$inboundSchema,
    OneHundred$inboundSchema,
    OneHundredAndOne$inboundSchema,
    OneHundredAndTwo$inboundSchema,
    OneHundredAndThree$inboundSchema,
    OneHundredAndFour$inboundSchema,
    OneHundredAndFive$inboundSchema,
    OneHundredAndSix$inboundSchema,
    OneHundredAndSeven$inboundSchema,
    OneHundredAndEight$inboundSchema,
    OneHundredAndNine$inboundSchema,
    OneHundredAndTen$inboundSchema,
    OneHundredAndEleven$inboundSchema,
    OneHundredAndTwelve$inboundSchema,
    OneHundredAndThirteen$inboundSchema,
    OneHundredAndFourteen$inboundSchema,
    OneHundredAndFifteen$inboundSchema,
    OneHundredAndSixteen$inboundSchema,
    OneHundredAndSeventeen$inboundSchema,
    OneHundredAndEighteen$inboundSchema,
    OneHundredAndNineteen$inboundSchema,
    OneHundredAndTwenty$inboundSchema,
    OneHundredAndTwentyOne$inboundSchema,
    OneHundredAndTwentyTwo$inboundSchema,
    OneHundredAndTwentyThree$inboundSchema,
    OneHundredAndTwentyFour$inboundSchema,
    OneHundredAndTwentyFive$inboundSchema,
    OneHundredAndTwentySix$inboundSchema,
    OneHundredAndTwentySeven$inboundSchema,
    OneHundredAndTwentyEight$inboundSchema,
    OneHundredAndTwentyNine$inboundSchema,
    OneHundredAndThirty$inboundSchema,
    OneHundredAndThirtyOne$inboundSchema,
    OneHundredAndThirtyTwo$inboundSchema,
    OneHundredAndThirtyThree$inboundSchema,
    OneHundredAndThirtyFour$inboundSchema,
    OneHundredAndThirtyFive$inboundSchema,
    OneHundredAndThirtySix$inboundSchema,
    OneHundredAndThirtySeven$inboundSchema,
    OneHundredAndThirtyEight$inboundSchema,
    OneHundredAndThirtyNine$inboundSchema,
    OneHundredAndForty$inboundSchema,
    OneHundredAndFortyOne$inboundSchema,
    OneHundredAndFortyTwo$inboundSchema,
    OneHundredAndFortyThree$inboundSchema,
    OneHundredAndFortyFour$inboundSchema,
    OneHundredAndFortyFive$inboundSchema,
    OneHundredAndFortySix$inboundSchema,
    OneHundredAndFortySeven$inboundSchema,
    OneHundredAndFortyEight$inboundSchema,
    OneHundredAndFortyNine$inboundSchema,
    OneHundredAndFifty$inboundSchema,
    OneHundredAndFiftyOne$inboundSchema,
    OneHundredAndFiftyTwo$inboundSchema,
    OneHundredAndFiftyThree$inboundSchema,
    OneHundredAndFiftyFour$inboundSchema,
    OneHundredAndFiftyFive$inboundSchema,
    OneHundredAndFiftySix$inboundSchema,
    OneHundredAndFiftySeven$inboundSchema,
    OneHundredAndFiftyEight$inboundSchema,
    OneHundredAndFiftyNine$inboundSchema,
    OneHundredAndSixty$inboundSchema,
    OneHundredAndSixtyOne$inboundSchema,
    OneHundredAndSixtyTwo$inboundSchema,
    OneHundredAndSixtyThree$inboundSchema,
    OneHundredAndSixtyFour$inboundSchema,
    OneHundredAndSixtyFive$inboundSchema,
    OneHundredAndSixtySix$inboundSchema,
    OneHundredAndSixtySeven$inboundSchema,
    OneHundredAndSixtyEight$inboundSchema,
    OneHundredAndSixtyNine$inboundSchema,
    OneHundredAndSeventy$inboundSchema,
    OneHundredAndSeventyOne$inboundSchema,
    OneHundredAndSeventyTwo$inboundSchema,
    OneHundredAndSeventyThree$inboundSchema,
    OneHundredAndSeventyFour$inboundSchema,
    OneHundredAndSeventyFive$inboundSchema,
    OneHundredAndSeventySix$inboundSchema,
    OneHundredAndSeventySeven$inboundSchema,
    OneHundredAndSeventyEight$inboundSchema,
    OneHundredAndSeventyNine$inboundSchema,
    OneHundredAndEighty$inboundSchema,
    OneHundredAndEightyOne$inboundSchema,
    OneHundredAndEightyTwo$inboundSchema,
    OneHundredAndEightyThree$inboundSchema,
    OneHundredAndEightyFour$inboundSchema,
    OneHundredAndEightyFive$inboundSchema,
    OneHundredAndEightySix$inboundSchema,
    OneHundredAndEightySeven$inboundSchema,
    OneHundredAndEightyEight$inboundSchema,
    OneHundredAndEightyNine$inboundSchema,
    OneHundredAndNinety$inboundSchema,
    OneHundredAndNinetyOne$inboundSchema,
    OneHundredAndNinetyTwo$inboundSchema,
    OneHundredAndNinetyThree$inboundSchema,
    OneHundredAndNinetyFour$inboundSchema,
    OneHundredAndNinetyFive$inboundSchema,
    OneHundredAndNinetySix$inboundSchema,
    OneHundredAndNinetySeven$inboundSchema,
    OneHundredAndNinetyEight$inboundSchema,
    OneHundredAndNinetyNine$inboundSchema,
    TwoHundred$inboundSchema,
    TwoHundredAndOne$inboundSchema,
    TwoHundredAndTwo$inboundSchema,
    TwoHundredAndThree$inboundSchema,
    TwoHundredAndFour$inboundSchema,
    TwoHundredAndFive$inboundSchema,
    TwoHundredAndSix$inboundSchema,
    TwoHundredAndSeven$inboundSchema,
    TwoHundredAndEight$inboundSchema,
    TwoHundredAndNine$inboundSchema,
    TwoHundredAndTen$inboundSchema,
    TwoHundredAndEleven$inboundSchema,
    TwoHundredAndTwelve$inboundSchema,
    TwoHundredAndThirteen$inboundSchema,
    TwoHundredAndFourteen$inboundSchema,
    TwoHundredAndFifteen$inboundSchema,
    TwoHundredAndSixteen$inboundSchema,
    TwoHundredAndSeventeen$inboundSchema,
    TwoHundredAndEighteen$inboundSchema,
    TwoHundredAndNineteen$inboundSchema,
    TwoHundredAndTwenty$inboundSchema,
    TwoHundredAndTwentyOne$inboundSchema,
    TwoHundredAndTwentyTwo$inboundSchema,
    TwoHundredAndTwentyThree$inboundSchema,
    TwoHundredAndTwentyFour$inboundSchema,
    TwoHundredAndTwentyFive$inboundSchema,
    TwoHundredAndTwentySix$inboundSchema,
    TwoHundredAndTwentySeven$inboundSchema,
    TwoHundredAndTwentyEight$inboundSchema,
    TwoHundredAndTwentyNine$inboundSchema,
    TwoHundredAndThirty$inboundSchema,
    TwoHundredAndThirtyOne$inboundSchema,
    TwoHundredAndThirtyTwo$inboundSchema,
    TwoHundredAndThirtyThree$inboundSchema,
    TwoHundredAndThirtyFour$inboundSchema,
    TwoHundredAndThirtyFive$inboundSchema,
    TwoHundredAndThirtySix$inboundSchema,
    TwoHundredAndThirtySeven$inboundSchema,
    TwoHundredAndThirtyEight$inboundSchema,
    TwoHundredAndThirtyNine$inboundSchema,
    TwoHundredAndForty$inboundSchema,
    TwoHundredAndFortyOne$inboundSchema,
    TwoHundredAndFortyTwo$inboundSchema,
    TwoHundredAndFortyThree$inboundSchema,
    TwoHundredAndFortyFour$inboundSchema,
    TwoHundredAndFortyFive$inboundSchema,
    TwoHundredAndFortySix$inboundSchema,
    TwoHundredAndFortySeven$inboundSchema,
    TwoHundredAndFortyEight$inboundSchema,
    TwoHundredAndFortyNine$inboundSchema,
    TwoHundredAndFifty$inboundSchema,
    TwoHundredAndFiftyOne$inboundSchema,
    TwoHundredAndFiftyTwo$inboundSchema,
    TwoHundredAndFiftyThree$inboundSchema,
    TwoHundredAndFiftyFour$inboundSchema,
    TwoHundredAndFiftyFive$inboundSchema,
    TwoHundredAndFiftySix$inboundSchema,
    TwoHundredAndFiftySeven$inboundSchema,
    TwoHundredAndFiftyEight$inboundSchema,
    TwoHundredAndFiftyNine$inboundSchema,
    TwoHundredAndSixty$inboundSchema,
    TwoHundredAndSixtyOne$inboundSchema,
    TwoHundredAndSixtyTwo$inboundSchema,
    TwoHundredAndSixtyThree$inboundSchema,
    TwoHundredAndSixtyFour$inboundSchema,
    TwoHundredAndSixtyFive$inboundSchema,
    TwoHundredAndSixtySix$inboundSchema,
    TwoHundredAndSixtySeven$inboundSchema,
    TwoHundredAndSixtyEight$inboundSchema,
    TwoHundredAndSixtyNine$inboundSchema,
    TwoHundredAndSeventy$inboundSchema,
    TwoHundredAndSeventyOne$inboundSchema,
    TwoHundredAndSeventyTwo$inboundSchema,
    TwoHundredAndSeventyThree$inboundSchema,
    TwoHundredAndSeventyFour$inboundSchema,
    TwoHundredAndSeventyFive$inboundSchema,
    TwoHundredAndSeventySix$inboundSchema,
    TwoHundredAndSeventySeven$inboundSchema,
    TwoHundredAndSeventyEight$inboundSchema,
    TwoHundredAndSeventyNine$inboundSchema,
    TwoHundredAndEighty$inboundSchema,
    TwoHundredAndEightyOne$inboundSchema,
    TwoHundredAndEightyTwo$inboundSchema,
    TwoHundredAndEightyThree$inboundSchema,
    TwoHundredAndEightyFour$inboundSchema,
    TwoHundredAndEightyFive$inboundSchema,
    TwoHundredAndEightySix$inboundSchema,
    TwoHundredAndEightySeven$inboundSchema,
    TwoHundredAndEightyEight$inboundSchema,
    TwoHundredAndEightyNine$inboundSchema,
    TwoHundredAndNinety$inboundSchema,
    TwoHundredAndNinetyOne$inboundSchema,
    TwoHundredAndNinetyTwo$inboundSchema,
    TwoHundredAndNinetyThree$inboundSchema,
    TwoHundredAndNinetyFour$inboundSchema,
    TwoHundredAndNinetyFive$inboundSchema,
    TwoHundredAndNinetySix$inboundSchema,
    TwoHundredAndNinetySeven$inboundSchema,
    TwoHundredAndNinetyEight$inboundSchema,
    TwoHundredAndNinetyNine$inboundSchema,
    ThreeHundred$inboundSchema,
    ThreeHundredAndOne$inboundSchema,
    ThreeHundredAndTwo$inboundSchema,
    ThreeHundredAndThree$inboundSchema,
    ThreeHundredAndFour$inboundSchema,
    ThreeHundredAndFive$inboundSchema,
    ThreeHundredAndSix$inboundSchema,
    ThreeHundredAndSeven$inboundSchema,
    ThreeHundredAndEight$inboundSchema,
    ThreeHundredAndNine$inboundSchema,
    ThreeHundredAndTen$inboundSchema,
  ]),
  direction: z.union([
    QueryTableDirection1$inboundSchema,
    QueryTableDirection2$inboundSchema,
  ]),
});

/** @internal */
export type QueryTableOrderBy$Outbound = {
  field:
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string;
  direction: string | string;
};

/** @internal */
export const QueryTableOrderBy$outboundSchema: z.ZodType<
  QueryTableOrderBy$Outbound,
  z.ZodTypeDef,
  QueryTableOrderBy
> = z.object({
  field: z.union([
    QueryTableFieldQuery1$outboundSchema,
    QueryTableFieldQuery2$outboundSchema,
    QueryTableFieldQuery3$outboundSchema,
    QueryTableFieldQuery4$outboundSchema,
    QueryTableFieldQuery5$outboundSchema,
    QueryTableFieldQuery6$outboundSchema,
    QueryTableFieldQuery7$outboundSchema,
    QueryTableField8$outboundSchema,
    QueryTableField9$outboundSchema,
    QueryTableField10$outboundSchema,
    QueryTableField11$outboundSchema,
    QueryTableField12$outboundSchema,
    QueryTableField13$outboundSchema,
    QueryTableField14$outboundSchema,
    QueryTableField15$outboundSchema,
    QueryTableField16$outboundSchema,
    QueryTableField17$outboundSchema,
    QueryTableField18$outboundSchema,
    QueryTableField19$outboundSchema,
    QueryTableField20$outboundSchema,
    QueryTableField21$outboundSchema,
    QueryTableField22$outboundSchema,
    QueryTableField23$outboundSchema,
    QueryTableField24$outboundSchema,
    QueryTableField25$outboundSchema,
    QueryTableField26$outboundSchema,
    QueryTableField27$outboundSchema,
    QueryTableField28$outboundSchema,
    QueryTableField29$outboundSchema,
    QueryTableField30$outboundSchema,
    QueryTableField31$outboundSchema,
    Field32$outboundSchema,
    Field33$outboundSchema,
    Field34$outboundSchema,
    Field35$outboundSchema,
    Field36$outboundSchema,
    Field37$outboundSchema,
    Field38$outboundSchema,
    Field39$outboundSchema,
    Field40$outboundSchema,
    Field41$outboundSchema,
    Field42$outboundSchema,
    Field43$outboundSchema,
    Field44$outboundSchema,
    Field45$outboundSchema,
    Field46$outboundSchema,
    Field47$outboundSchema,
    Field48$outboundSchema,
    Field49$outboundSchema,
    Field50$outboundSchema,
    Field51$outboundSchema,
    Field52$outboundSchema,
    Field53$outboundSchema,
    Field54$outboundSchema,
    Field55$outboundSchema,
    Field56$outboundSchema,
    Field57$outboundSchema,
    Field58$outboundSchema,
    Field59$outboundSchema,
    Field60$outboundSchema,
    Field61$outboundSchema,
    Field62$outboundSchema,
    Field63$outboundSchema,
    Field64$outboundSchema,
    Field65$outboundSchema,
    Field66$outboundSchema,
    Field67$outboundSchema,
    Field68$outboundSchema,
    Field69$outboundSchema,
    Field70$outboundSchema,
    SeventyOne$outboundSchema,
    SeventyTwo$outboundSchema,
    SeventyThree$outboundSchema,
    SeventyFour$outboundSchema,
    SeventyFive$outboundSchema,
    SeventySix$outboundSchema,
    SeventySeven$outboundSchema,
    SeventyEight$outboundSchema,
    SeventyNine$outboundSchema,
    Eighty$outboundSchema,
    EightyOne$outboundSchema,
    EightyTwo$outboundSchema,
    EightyThree$outboundSchema,
    EightyFour$outboundSchema,
    EightyFive$outboundSchema,
    EightySix$outboundSchema,
    EightySeven$outboundSchema,
    EightyEight$outboundSchema,
    EightyNine$outboundSchema,
    Ninety$outboundSchema,
    NinetyOne$outboundSchema,
    NinetyTwo$outboundSchema,
    NinetyThree$outboundSchema,
    NinetyFour$outboundSchema,
    NinetyFive$outboundSchema,
    NinetySix$outboundSchema,
    NinetySeven$outboundSchema,
    NinetyEight$outboundSchema,
    NinetyNine$outboundSchema,
    OneHundred$outboundSchema,
    OneHundredAndOne$outboundSchema,
    OneHundredAndTwo$outboundSchema,
    OneHundredAndThree$outboundSchema,
    OneHundredAndFour$outboundSchema,
    OneHundredAndFive$outboundSchema,
    OneHundredAndSix$outboundSchema,
    OneHundredAndSeven$outboundSchema,
    OneHundredAndEight$outboundSchema,
    OneHundredAndNine$outboundSchema,
    OneHundredAndTen$outboundSchema,
    OneHundredAndEleven$outboundSchema,
    OneHundredAndTwelve$outboundSchema,
    OneHundredAndThirteen$outboundSchema,
    OneHundredAndFourteen$outboundSchema,
    OneHundredAndFifteen$outboundSchema,
    OneHundredAndSixteen$outboundSchema,
    OneHundredAndSeventeen$outboundSchema,
    OneHundredAndEighteen$outboundSchema,
    OneHundredAndNineteen$outboundSchema,
    OneHundredAndTwenty$outboundSchema,
    OneHundredAndTwentyOne$outboundSchema,
    OneHundredAndTwentyTwo$outboundSchema,
    OneHundredAndTwentyThree$outboundSchema,
    OneHundredAndTwentyFour$outboundSchema,
    OneHundredAndTwentyFive$outboundSchema,
    OneHundredAndTwentySix$outboundSchema,
    OneHundredAndTwentySeven$outboundSchema,
    OneHundredAndTwentyEight$outboundSchema,
    OneHundredAndTwentyNine$outboundSchema,
    OneHundredAndThirty$outboundSchema,
    OneHundredAndThirtyOne$outboundSchema,
    OneHundredAndThirtyTwo$outboundSchema,
    OneHundredAndThirtyThree$outboundSchema,
    OneHundredAndThirtyFour$outboundSchema,
    OneHundredAndThirtyFive$outboundSchema,
    OneHundredAndThirtySix$outboundSchema,
    OneHundredAndThirtySeven$outboundSchema,
    OneHundredAndThirtyEight$outboundSchema,
    OneHundredAndThirtyNine$outboundSchema,
    OneHundredAndForty$outboundSchema,
    OneHundredAndFortyOne$outboundSchema,
    OneHundredAndFortyTwo$outboundSchema,
    OneHundredAndFortyThree$outboundSchema,
    OneHundredAndFortyFour$outboundSchema,
    OneHundredAndFortyFive$outboundSchema,
    OneHundredAndFortySix$outboundSchema,
    OneHundredAndFortySeven$outboundSchema,
    OneHundredAndFortyEight$outboundSchema,
    OneHundredAndFortyNine$outboundSchema,
    OneHundredAndFifty$outboundSchema,
    OneHundredAndFiftyOne$outboundSchema,
    OneHundredAndFiftyTwo$outboundSchema,
    OneHundredAndFiftyThree$outboundSchema,
    OneHundredAndFiftyFour$outboundSchema,
    OneHundredAndFiftyFive$outboundSchema,
    OneHundredAndFiftySix$outboundSchema,
    OneHundredAndFiftySeven$outboundSchema,
    OneHundredAndFiftyEight$outboundSchema,
    OneHundredAndFiftyNine$outboundSchema,
    OneHundredAndSixty$outboundSchema,
    OneHundredAndSixtyOne$outboundSchema,
    OneHundredAndSixtyTwo$outboundSchema,
    OneHundredAndSixtyThree$outboundSchema,
    OneHundredAndSixtyFour$outboundSchema,
    OneHundredAndSixtyFive$outboundSchema,
    OneHundredAndSixtySix$outboundSchema,
    OneHundredAndSixtySeven$outboundSchema,
    OneHundredAndSixtyEight$outboundSchema,
    OneHundredAndSixtyNine$outboundSchema,
    OneHundredAndSeventy$outboundSchema,
    OneHundredAndSeventyOne$outboundSchema,
    OneHundredAndSeventyTwo$outboundSchema,
    OneHundredAndSeventyThree$outboundSchema,
    OneHundredAndSeventyFour$outboundSchema,
    OneHundredAndSeventyFive$outboundSchema,
    OneHundredAndSeventySix$outboundSchema,
    OneHundredAndSeventySeven$outboundSchema,
    OneHundredAndSeventyEight$outboundSchema,
    OneHundredAndSeventyNine$outboundSchema,
    OneHundredAndEighty$outboundSchema,
    OneHundredAndEightyOne$outboundSchema,
    OneHundredAndEightyTwo$outboundSchema,
    OneHundredAndEightyThree$outboundSchema,
    OneHundredAndEightyFour$outboundSchema,
    OneHundredAndEightyFive$outboundSchema,
    OneHundredAndEightySix$outboundSchema,
    OneHundredAndEightySeven$outboundSchema,
    OneHundredAndEightyEight$outboundSchema,
    OneHundredAndEightyNine$outboundSchema,
    OneHundredAndNinety$outboundSchema,
    OneHundredAndNinetyOne$outboundSchema,
    OneHundredAndNinetyTwo$outboundSchema,
    OneHundredAndNinetyThree$outboundSchema,
    OneHundredAndNinetyFour$outboundSchema,
    OneHundredAndNinetyFive$outboundSchema,
    OneHundredAndNinetySix$outboundSchema,
    OneHundredAndNinetySeven$outboundSchema,
    OneHundredAndNinetyEight$outboundSchema,
    OneHundredAndNinetyNine$outboundSchema,
    TwoHundred$outboundSchema,
    TwoHundredAndOne$outboundSchema,
    TwoHundredAndTwo$outboundSchema,
    TwoHundredAndThree$outboundSchema,
    TwoHundredAndFour$outboundSchema,
    TwoHundredAndFive$outboundSchema,
    TwoHundredAndSix$outboundSchema,
    TwoHundredAndSeven$outboundSchema,
    TwoHundredAndEight$outboundSchema,
    TwoHundredAndNine$outboundSchema,
    TwoHundredAndTen$outboundSchema,
    TwoHundredAndEleven$outboundSchema,
    TwoHundredAndTwelve$outboundSchema,
    TwoHundredAndThirteen$outboundSchema,
    TwoHundredAndFourteen$outboundSchema,
    TwoHundredAndFifteen$outboundSchema,
    TwoHundredAndSixteen$outboundSchema,
    TwoHundredAndSeventeen$outboundSchema,
    TwoHundredAndEighteen$outboundSchema,
    TwoHundredAndNineteen$outboundSchema,
    TwoHundredAndTwenty$outboundSchema,
    TwoHundredAndTwentyOne$outboundSchema,
    TwoHundredAndTwentyTwo$outboundSchema,
    TwoHundredAndTwentyThree$outboundSchema,
    TwoHundredAndTwentyFour$outboundSchema,
    TwoHundredAndTwentyFive$outboundSchema,
    TwoHundredAndTwentySix$outboundSchema,
    TwoHundredAndTwentySeven$outboundSchema,
    TwoHundredAndTwentyEight$outboundSchema,
    TwoHundredAndTwentyNine$outboundSchema,
    TwoHundredAndThirty$outboundSchema,
    TwoHundredAndThirtyOne$outboundSchema,
    TwoHundredAndThirtyTwo$outboundSchema,
    TwoHundredAndThirtyThree$outboundSchema,
    TwoHundredAndThirtyFour$outboundSchema,
    TwoHundredAndThirtyFive$outboundSchema,
    TwoHundredAndThirtySix$outboundSchema,
    TwoHundredAndThirtySeven$outboundSchema,
    TwoHundredAndThirtyEight$outboundSchema,
    TwoHundredAndThirtyNine$outboundSchema,
    TwoHundredAndForty$outboundSchema,
    TwoHundredAndFortyOne$outboundSchema,
    TwoHundredAndFortyTwo$outboundSchema,
    TwoHundredAndFortyThree$outboundSchema,
    TwoHundredAndFortyFour$outboundSchema,
    TwoHundredAndFortyFive$outboundSchema,
    TwoHundredAndFortySix$outboundSchema,
    TwoHundredAndFortySeven$outboundSchema,
    TwoHundredAndFortyEight$outboundSchema,
    TwoHundredAndFortyNine$outboundSchema,
    TwoHundredAndFifty$outboundSchema,
    TwoHundredAndFiftyOne$outboundSchema,
    TwoHundredAndFiftyTwo$outboundSchema,
    TwoHundredAndFiftyThree$outboundSchema,
    TwoHundredAndFiftyFour$outboundSchema,
    TwoHundredAndFiftyFive$outboundSchema,
    TwoHundredAndFiftySix$outboundSchema,
    TwoHundredAndFiftySeven$outboundSchema,
    TwoHundredAndFiftyEight$outboundSchema,
    TwoHundredAndFiftyNine$outboundSchema,
    TwoHundredAndSixty$outboundSchema,
    TwoHundredAndSixtyOne$outboundSchema,
    TwoHundredAndSixtyTwo$outboundSchema,
    TwoHundredAndSixtyThree$outboundSchema,
    TwoHundredAndSixtyFour$outboundSchema,
    TwoHundredAndSixtyFive$outboundSchema,
    TwoHundredAndSixtySix$outboundSchema,
    TwoHundredAndSixtySeven$outboundSchema,
    TwoHundredAndSixtyEight$outboundSchema,
    TwoHundredAndSixtyNine$outboundSchema,
    TwoHundredAndSeventy$outboundSchema,
    TwoHundredAndSeventyOne$outboundSchema,
    TwoHundredAndSeventyTwo$outboundSchema,
    TwoHundredAndSeventyThree$outboundSchema,
    TwoHundredAndSeventyFour$outboundSchema,
    TwoHundredAndSeventyFive$outboundSchema,
    TwoHundredAndSeventySix$outboundSchema,
    TwoHundredAndSeventySeven$outboundSchema,
    TwoHundredAndSeventyEight$outboundSchema,
    TwoHundredAndSeventyNine$outboundSchema,
    TwoHundredAndEighty$outboundSchema,
    TwoHundredAndEightyOne$outboundSchema,
    TwoHundredAndEightyTwo$outboundSchema,
    TwoHundredAndEightyThree$outboundSchema,
    TwoHundredAndEightyFour$outboundSchema,
    TwoHundredAndEightyFive$outboundSchema,
    TwoHundredAndEightySix$outboundSchema,
    TwoHundredAndEightySeven$outboundSchema,
    TwoHundredAndEightyEight$outboundSchema,
    TwoHundredAndEightyNine$outboundSchema,
    TwoHundredAndNinety$outboundSchema,
    TwoHundredAndNinetyOne$outboundSchema,
    TwoHundredAndNinetyTwo$outboundSchema,
    TwoHundredAndNinetyThree$outboundSchema,
    TwoHundredAndNinetyFour$outboundSchema,
    TwoHundredAndNinetyFive$outboundSchema,
    TwoHundredAndNinetySix$outboundSchema,
    TwoHundredAndNinetySeven$outboundSchema,
    TwoHundredAndNinetyEight$outboundSchema,
    TwoHundredAndNinetyNine$outboundSchema,
    ThreeHundred$outboundSchema,
    ThreeHundredAndOne$outboundSchema,
    ThreeHundredAndTwo$outboundSchema,
    ThreeHundredAndThree$outboundSchema,
    ThreeHundredAndFour$outboundSchema,
    ThreeHundredAndFive$outboundSchema,
    ThreeHundredAndSix$outboundSchema,
    ThreeHundredAndSeven$outboundSchema,
    ThreeHundredAndEight$outboundSchema,
    ThreeHundredAndNine$outboundSchema,
    ThreeHundredAndTen$outboundSchema,
  ]),
  direction: z.union([
    QueryTableDirection1$outboundSchema,
    QueryTableDirection2$outboundSchema,
  ]),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableOrderBy$ {
  /** @deprecated use `QueryTableOrderBy$inboundSchema` instead. */
  export const inboundSchema = QueryTableOrderBy$inboundSchema;
  /** @deprecated use `QueryTableOrderBy$outboundSchema` instead. */
  export const outboundSchema = QueryTableOrderBy$outboundSchema;
  /** @deprecated use `QueryTableOrderBy$Outbound` instead. */
  export type Outbound = QueryTableOrderBy$Outbound;
}

export function queryTableOrderByToJSON(
  queryTableOrderBy: QueryTableOrderBy,
): string {
  return JSON.stringify(
    QueryTableOrderBy$outboundSchema.parse(queryTableOrderBy),
  );
}

export function queryTableOrderByFromJSON(
  jsonString: string,
): SafeParseResult<QueryTableOrderBy, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => QueryTableOrderBy$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'QueryTableOrderBy' from JSON`,
  );
}

/** @internal */
export const QueryTableRequestBody$inboundSchema: z.ZodType<
  QueryTableRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  select: z.array(
    z.union([
      components.SimpleFieldSelection$inboundSchema.and(
        z.object({ type: z.literal("field") }).transform((v) => ({
          type: v.type,
        })),
      ),
      components.AggregationSelection$inboundSchema.and(
        z.object({ type: z.literal("aggregation") }).transform((v) => ({
          type: v.type,
        })),
      ),
      components.TimeBasedGroupBySelection$inboundSchema.and(
        z.object({ type: z.literal("time") }).transform((v) => ({
          type: v.type,
        })),
      ),
    ]),
  ).optional(),
  groupBy: z.array(z.lazy(() => QueryTableGroupBy$inboundSchema)).optional(),
  where: components.SemanticThreadFilter$inboundSchema.optional(),
  orderBy: z.array(z.lazy(() => QueryTableOrderBy$inboundSchema)).optional(),
});

/** @internal */
export type QueryTableRequestBody$Outbound = {
  select?:
    | Array<
      | (components.SimpleFieldSelection$Outbound & { type: "field" })
      | (components.AggregationSelection$Outbound & { type: "aggregation" })
      | (components.TimeBasedGroupBySelection$Outbound & { type: "time" })
    >
    | undefined;
  groupBy?: Array<QueryTableGroupBy$Outbound> | undefined;
  where?: components.SemanticThreadFilter$Outbound | undefined;
  orderBy?: Array<QueryTableOrderBy$Outbound> | undefined;
};

/** @internal */
export const QueryTableRequestBody$outboundSchema: z.ZodType<
  QueryTableRequestBody$Outbound,
  z.ZodTypeDef,
  QueryTableRequestBody
> = z.object({
  select: z.array(
    z.union([
      components.SimpleFieldSelection$outboundSchema.and(
        z.object({ type: z.literal("field") }).transform((v) => ({
          type: v.type,
        })),
      ),
      components.AggregationSelection$outboundSchema.and(
        z.object({ type: z.literal("aggregation") }).transform((v) => ({
          type: v.type,
        })),
      ),
      components.TimeBasedGroupBySelection$outboundSchema.and(
        z.object({ type: z.literal("time") }).transform((v) => ({
          type: v.type,
        })),
      ),
    ]),
  ).optional(),
  groupBy: z.array(z.lazy(() => QueryTableGroupBy$outboundSchema)).optional(),
  where: components.SemanticThreadFilter$outboundSchema.optional(),
  orderBy: z.array(z.lazy(() => QueryTableOrderBy$outboundSchema)).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableRequestBody$ {
  /** @deprecated use `QueryTableRequestBody$inboundSchema` instead. */
  export const inboundSchema = QueryTableRequestBody$inboundSchema;
  /** @deprecated use `QueryTableRequestBody$outboundSchema` instead. */
  export const outboundSchema = QueryTableRequestBody$outboundSchema;
  /** @deprecated use `QueryTableRequestBody$Outbound` instead. */
  export type Outbound = QueryTableRequestBody$Outbound;
}

export function queryTableRequestBodyToJSON(
  queryTableRequestBody: QueryTableRequestBody,
): string {
  return JSON.stringify(
    QueryTableRequestBody$outboundSchema.parse(queryTableRequestBody),
  );
}

export function queryTableRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<QueryTableRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => QueryTableRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'QueryTableRequestBody' from JSON`,
  );
}

/** @internal */
export const QueryTableRequest$inboundSchema: z.ZodType<
  QueryTableRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  table: z.string(),
  RequestBody: z.lazy(() => QueryTableRequestBody$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type QueryTableRequest$Outbound = {
  table: string;
  RequestBody: QueryTableRequestBody$Outbound;
};

/** @internal */
export const QueryTableRequest$outboundSchema: z.ZodType<
  QueryTableRequest$Outbound,
  z.ZodTypeDef,
  QueryTableRequest
> = z.object({
  table: z.string(),
  requestBody: z.lazy(() => QueryTableRequestBody$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableRequest$ {
  /** @deprecated use `QueryTableRequest$inboundSchema` instead. */
  export const inboundSchema = QueryTableRequest$inboundSchema;
  /** @deprecated use `QueryTableRequest$outboundSchema` instead. */
  export const outboundSchema = QueryTableRequest$outboundSchema;
  /** @deprecated use `QueryTableRequest$Outbound` instead. */
  export type Outbound = QueryTableRequest$Outbound;
}

export function queryTableRequestToJSON(
  queryTableRequest: QueryTableRequest,
): string {
  return JSON.stringify(
    QueryTableRequest$outboundSchema.parse(queryTableRequest),
  );
}

export function queryTableRequestFromJSON(
  jsonString: string,
): SafeParseResult<QueryTableRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => QueryTableRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'QueryTableRequest' from JSON`,
  );
}

/** @internal */
export const Status$inboundSchema: z.ZodNativeEnum<typeof Status> = z
  .nativeEnum(Status);

/** @internal */
export const Status$outboundSchema: z.ZodNativeEnum<typeof Status> =
  Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Status$ {
  /** @deprecated use `Status$inboundSchema` instead. */
  export const inboundSchema = Status$inboundSchema;
  /** @deprecated use `Status$outboundSchema` instead. */
  export const outboundSchema = Status$outboundSchema;
}

/** @internal */
export const Result$inboundSchema: z.ZodType<Result, z.ZodTypeDef, unknown> = z
  .object({
    id: z.string().optional(),
    messageIds: z.any().optional(),
    messagesCount: z.any().optional(),
    organizationId: z.string().optional(),
    question: z.string().optional(),
    questionLength: z.any().optional(),
    answer: z.string().optional(),
    isOnTopic: z.any().optional(),
    isClear: z.any().optional(),
    isDocumented: z.any().optional(),
    isFeatureSupported: z.any().optional(),
    isAnswerConfident: z.any().optional(),
    gapSummary: z.any().optional(),
    subject: z.any().optional(),
    category: z.any().optional(),
    languages: z.any().optional(),
    firstPartyEntities: z.any().optional(),
    thirdPartyEntities: z.any().optional(),
    emotion: z.any().optional(),
    sentiment: z.any().optional(),
    questionType: z.any().optional(),
    projectId: z.string().optional(),
    integrationId: z.string().optional(),
    firstMessageTime: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    lastMessageTime: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    lastUpdated: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
    hasPositiveFeedback: z.boolean().optional(),
    hasNegativeFeedback: z.boolean().optional(),
    conversationIds: z.array(z.string()).optional(),
    areAIAnnotationsVerified: z.any().optional(),
    isInitialQuestionAnswer: z.boolean().optional(),
    sum: z.number().optional(),
    count: z.number().optional(),
    avg: z.number().optional(),
    min: z.number().optional(),
    max: z.number().optional(),
    id_hour: z.string().optional(),
    id_day: z.string().optional(),
    id_week: z.string().optional(),
    id_month: z.string().optional(),
    messageIds_hour: z.string().optional(),
    messageIds_day: z.string().optional(),
    messageIds_week: z.string().optional(),
    messageIds_month: z.string().optional(),
    messagesCount_hour: z.string().optional(),
    messagesCount_day: z.string().optional(),
    messagesCount_week: z.string().optional(),
    messagesCount_month: z.string().optional(),
    organizationId_hour: z.string().optional(),
    organizationId_day: z.string().optional(),
    organizationId_week: z.string().optional(),
    organizationId_month: z.string().optional(),
    question_hour: z.string().optional(),
    question_day: z.string().optional(),
    question_week: z.string().optional(),
    question_month: z.string().optional(),
    questionLength_hour: z.string().optional(),
    questionLength_day: z.string().optional(),
    questionLength_week: z.string().optional(),
    questionLength_month: z.string().optional(),
    answer_hour: z.string().optional(),
    answer_day: z.string().optional(),
    answer_week: z.string().optional(),
    answer_month: z.string().optional(),
    isOnTopic_hour: z.string().optional(),
    isOnTopic_day: z.string().optional(),
    isOnTopic_week: z.string().optional(),
    isOnTopic_month: z.string().optional(),
    isClear_hour: z.string().optional(),
    isClear_day: z.string().optional(),
    isClear_week: z.string().optional(),
    isClear_month: z.string().optional(),
    isDocumented_hour: z.string().optional(),
    isDocumented_day: z.string().optional(),
    isDocumented_week: z.string().optional(),
    isDocumented_month: z.string().optional(),
    isFeatureSupported_hour: z.string().optional(),
    isFeatureSupported_day: z.string().optional(),
    isFeatureSupported_week: z.string().optional(),
    isFeatureSupported_month: z.string().optional(),
    isAnswerConfident_hour: z.string().optional(),
    isAnswerConfident_day: z.string().optional(),
    isAnswerConfident_week: z.string().optional(),
    isAnswerConfident_month: z.string().optional(),
    gapSummary_hour: z.string().optional(),
    gapSummary_day: z.string().optional(),
    gapSummary_week: z.string().optional(),
    gapSummary_month: z.string().optional(),
    subject_hour: z.string().optional(),
    subject_day: z.string().optional(),
    subject_week: z.string().optional(),
    subject_month: z.string().optional(),
    category_hour: z.string().optional(),
    category_day: z.string().optional(),
    category_week: z.string().optional(),
    category_month: z.string().optional(),
    languages_hour: z.string().optional(),
    languages_day: z.string().optional(),
    languages_week: z.string().optional(),
    languages_month: z.string().optional(),
    firstPartyEntities_hour: z.string().optional(),
    firstPartyEntities_day: z.string().optional(),
    firstPartyEntities_week: z.string().optional(),
    firstPartyEntities_month: z.string().optional(),
    thirdPartyEntities_hour: z.string().optional(),
    thirdPartyEntities_day: z.string().optional(),
    thirdPartyEntities_week: z.string().optional(),
    thirdPartyEntities_month: z.string().optional(),
    emotion_hour: z.string().optional(),
    emotion_day: z.string().optional(),
    emotion_week: z.string().optional(),
    emotion_month: z.string().optional(),
    sentiment_hour: z.string().optional(),
    sentiment_day: z.string().optional(),
    sentiment_week: z.string().optional(),
    sentiment_month: z.string().optional(),
    questionType_hour: z.string().optional(),
    questionType_day: z.string().optional(),
    questionType_week: z.string().optional(),
    questionType_month: z.string().optional(),
    projectId_hour: z.string().optional(),
    projectId_day: z.string().optional(),
    projectId_week: z.string().optional(),
    projectId_month: z.string().optional(),
    integrationId_hour: z.string().optional(),
    integrationId_day: z.string().optional(),
    integrationId_week: z.string().optional(),
    integrationId_month: z.string().optional(),
    firstMessageTime_hour: z.string().optional(),
    firstMessageTime_day: z.string().optional(),
    firstMessageTime_week: z.string().optional(),
    firstMessageTime_month: z.string().optional(),
    lastMessageTime_hour: z.string().optional(),
    lastMessageTime_day: z.string().optional(),
    lastMessageTime_week: z.string().optional(),
    lastMessageTime_month: z.string().optional(),
    lastUpdated_hour: z.string().optional(),
    lastUpdated_day: z.string().optional(),
    lastUpdated_week: z.string().optional(),
    lastUpdated_month: z.string().optional(),
    hasPositiveFeedback_hour: z.string().optional(),
    hasPositiveFeedback_day: z.string().optional(),
    hasPositiveFeedback_week: z.string().optional(),
    hasPositiveFeedback_month: z.string().optional(),
    hasNegativeFeedback_hour: z.string().optional(),
    hasNegativeFeedback_day: z.string().optional(),
    hasNegativeFeedback_week: z.string().optional(),
    hasNegativeFeedback_month: z.string().optional(),
    conversationIds_hour: z.string().optional(),
    conversationIds_day: z.string().optional(),
    conversationIds_week: z.string().optional(),
    conversationIds_month: z.string().optional(),
    areAIAnnotationsVerified_hour: z.string().optional(),
    areAIAnnotationsVerified_day: z.string().optional(),
    areAIAnnotationsVerified_week: z.string().optional(),
    areAIAnnotationsVerified_month: z.string().optional(),
    isInitialQuestionAnswer_hour: z.string().optional(),
    isInitialQuestionAnswer_day: z.string().optional(),
    isInitialQuestionAnswer_week: z.string().optional(),
    isInitialQuestionAnswer_month: z.string().optional(),
    sum_id: z.number().optional(),
    count_id: z.number().optional(),
    avg_id: z.number().optional(),
    min_id: z.number().optional(),
    max_id: z.number().optional(),
    sum_messageIds: z.number().optional(),
    count_messageIds: z.number().optional(),
    avg_messageIds: z.number().optional(),
    min_messageIds: z.number().optional(),
    max_messageIds: z.number().optional(),
    sum_messagesCount: z.number().optional(),
    count_messagesCount: z.number().optional(),
    avg_messagesCount: z.number().optional(),
    min_messagesCount: z.number().optional(),
    max_messagesCount: z.number().optional(),
    sum_organizationId: z.number().optional(),
    count_organizationId: z.number().optional(),
    avg_organizationId: z.number().optional(),
    min_organizationId: z.number().optional(),
    max_organizationId: z.number().optional(),
    sum_question: z.number().optional(),
    count_question: z.number().optional(),
    avg_question: z.number().optional(),
    min_question: z.number().optional(),
    max_question: z.number().optional(),
    sum_questionLength: z.number().optional(),
    count_questionLength: z.number().optional(),
    avg_questionLength: z.number().optional(),
    min_questionLength: z.number().optional(),
    max_questionLength: z.number().optional(),
    sum_answer: z.number().optional(),
    count_answer: z.number().optional(),
    avg_answer: z.number().optional(),
    min_answer: z.number().optional(),
    max_answer: z.number().optional(),
    sum_isOnTopic: z.number().optional(),
    count_isOnTopic: z.number().optional(),
    avg_isOnTopic: z.number().optional(),
    min_isOnTopic: z.number().optional(),
    max_isOnTopic: z.number().optional(),
    sum_isClear: z.number().optional(),
    count_isClear: z.number().optional(),
    avg_isClear: z.number().optional(),
    min_isClear: z.number().optional(),
    max_isClear: z.number().optional(),
    sum_isDocumented: z.number().optional(),
    count_isDocumented: z.number().optional(),
    avg_isDocumented: z.number().optional(),
    min_isDocumented: z.number().optional(),
    max_isDocumented: z.number().optional(),
    sum_isFeatureSupported: z.number().optional(),
    count_isFeatureSupported: z.number().optional(),
    avg_isFeatureSupported: z.number().optional(),
    min_isFeatureSupported: z.number().optional(),
    max_isFeatureSupported: z.number().optional(),
    sum_isAnswerConfident: z.number().optional(),
    count_isAnswerConfident: z.number().optional(),
    avg_isAnswerConfident: z.number().optional(),
    min_isAnswerConfident: z.number().optional(),
    max_isAnswerConfident: z.number().optional(),
    sum_gapSummary: z.number().optional(),
    count_gapSummary: z.number().optional(),
    avg_gapSummary: z.number().optional(),
    min_gapSummary: z.number().optional(),
    max_gapSummary: z.number().optional(),
    sum_subject: z.number().optional(),
    count_subject: z.number().optional(),
    avg_subject: z.number().optional(),
    min_subject: z.number().optional(),
    max_subject: z.number().optional(),
    sum_category: z.number().optional(),
    count_category: z.number().optional(),
    avg_category: z.number().optional(),
    min_category: z.number().optional(),
    max_category: z.number().optional(),
    sum_languages: z.number().optional(),
    count_languages: z.number().optional(),
    avg_languages: z.number().optional(),
    min_languages: z.number().optional(),
    max_languages: z.number().optional(),
    sum_firstPartyEntities: z.number().optional(),
    count_firstPartyEntities: z.number().optional(),
    avg_firstPartyEntities: z.number().optional(),
    min_firstPartyEntities: z.number().optional(),
    max_firstPartyEntities: z.number().optional(),
    sum_thirdPartyEntities: z.number().optional(),
    count_thirdPartyEntities: z.number().optional(),
    avg_thirdPartyEntities: z.number().optional(),
    min_thirdPartyEntities: z.number().optional(),
    max_thirdPartyEntities: z.number().optional(),
    sum_emotion: z.number().optional(),
    count_emotion: z.number().optional(),
    avg_emotion: z.number().optional(),
    min_emotion: z.number().optional(),
    max_emotion: z.number().optional(),
    sum_sentiment: z.number().optional(),
    count_sentiment: z.number().optional(),
    avg_sentiment: z.number().optional(),
    min_sentiment: z.number().optional(),
    max_sentiment: z.number().optional(),
    sum_questionType: z.number().optional(),
    count_questionType: z.number().optional(),
    avg_questionType: z.number().optional(),
    min_questionType: z.number().optional(),
    max_questionType: z.number().optional(),
    sum_projectId: z.number().optional(),
    count_projectId: z.number().optional(),
    avg_projectId: z.number().optional(),
    min_projectId: z.number().optional(),
    max_projectId: z.number().optional(),
    sum_integrationId: z.number().optional(),
    count_integrationId: z.number().optional(),
    avg_integrationId: z.number().optional(),
    min_integrationId: z.number().optional(),
    max_integrationId: z.number().optional(),
    sum_firstMessageTime: z.number().optional(),
    count_firstMessageTime: z.number().optional(),
    avg_firstMessageTime: z.number().optional(),
    min_firstMessageTime: z.number().optional(),
    max_firstMessageTime: z.number().optional(),
    sum_lastMessageTime: z.number().optional(),
    count_lastMessageTime: z.number().optional(),
    avg_lastMessageTime: z.number().optional(),
    min_lastMessageTime: z.number().optional(),
    max_lastMessageTime: z.number().optional(),
    sum_lastUpdated: z.number().optional(),
    count_lastUpdated: z.number().optional(),
    avg_lastUpdated: z.number().optional(),
    min_lastUpdated: z.number().optional(),
    max_lastUpdated: z.number().optional(),
    sum_hasPositiveFeedback: z.number().optional(),
    count_hasPositiveFeedback: z.number().optional(),
    avg_hasPositiveFeedback: z.number().optional(),
    min_hasPositiveFeedback: z.number().optional(),
    max_hasPositiveFeedback: z.number().optional(),
    sum_hasNegativeFeedback: z.number().optional(),
    count_hasNegativeFeedback: z.number().optional(),
    avg_hasNegativeFeedback: z.number().optional(),
    min_hasNegativeFeedback: z.number().optional(),
    max_hasNegativeFeedback: z.number().optional(),
    sum_conversationIds: z.number().optional(),
    count_conversationIds: z.number().optional(),
    avg_conversationIds: z.number().optional(),
    min_conversationIds: z.number().optional(),
    max_conversationIds: z.number().optional(),
    sum_areAIAnnotationsVerified: z.number().optional(),
    count_areAIAnnotationsVerified: z.number().optional(),
    avg_areAIAnnotationsVerified: z.number().optional(),
    min_areAIAnnotationsVerified: z.number().optional(),
    max_areAIAnnotationsVerified: z.number().optional(),
    sum_isInitialQuestionAnswer: z.number().optional(),
    count_isInitialQuestionAnswer: z.number().optional(),
    avg_isInitialQuestionAnswer: z.number().optional(),
    min_isInitialQuestionAnswer: z.number().optional(),
    max_isInitialQuestionAnswer: z.number().optional(),
  }).transform((v) => {
    return remap$(v, {
      "id_hour": "idHour",
      "id_day": "idDay",
      "id_week": "idWeek",
      "id_month": "idMonth",
      "messageIds_hour": "messageIdsHour",
      "messageIds_day": "messageIdsDay",
      "messageIds_week": "messageIdsWeek",
      "messageIds_month": "messageIdsMonth",
      "messagesCount_hour": "messagesCountHour",
      "messagesCount_day": "messagesCountDay",
      "messagesCount_week": "messagesCountWeek",
      "messagesCount_month": "messagesCountMonth",
      "organizationId_hour": "organizationIdHour",
      "organizationId_day": "organizationIdDay",
      "organizationId_week": "organizationIdWeek",
      "organizationId_month": "organizationIdMonth",
      "question_hour": "questionHour",
      "question_day": "questionDay",
      "question_week": "questionWeek",
      "question_month": "questionMonth",
      "questionLength_hour": "questionLengthHour",
      "questionLength_day": "questionLengthDay",
      "questionLength_week": "questionLengthWeek",
      "questionLength_month": "questionLengthMonth",
      "answer_hour": "answerHour",
      "answer_day": "answerDay",
      "answer_week": "answerWeek",
      "answer_month": "answerMonth",
      "isOnTopic_hour": "isOnTopicHour",
      "isOnTopic_day": "isOnTopicDay",
      "isOnTopic_week": "isOnTopicWeek",
      "isOnTopic_month": "isOnTopicMonth",
      "isClear_hour": "isClearHour",
      "isClear_day": "isClearDay",
      "isClear_week": "isClearWeek",
      "isClear_month": "isClearMonth",
      "isDocumented_hour": "isDocumentedHour",
      "isDocumented_day": "isDocumentedDay",
      "isDocumented_week": "isDocumentedWeek",
      "isDocumented_month": "isDocumentedMonth",
      "isFeatureSupported_hour": "isFeatureSupportedHour",
      "isFeatureSupported_day": "isFeatureSupportedDay",
      "isFeatureSupported_week": "isFeatureSupportedWeek",
      "isFeatureSupported_month": "isFeatureSupportedMonth",
      "isAnswerConfident_hour": "isAnswerConfidentHour",
      "isAnswerConfident_day": "isAnswerConfidentDay",
      "isAnswerConfident_week": "isAnswerConfidentWeek",
      "isAnswerConfident_month": "isAnswerConfidentMonth",
      "gapSummary_hour": "gapSummaryHour",
      "gapSummary_day": "gapSummaryDay",
      "gapSummary_week": "gapSummaryWeek",
      "gapSummary_month": "gapSummaryMonth",
      "subject_hour": "subjectHour",
      "subject_day": "subjectDay",
      "subject_week": "subjectWeek",
      "subject_month": "subjectMonth",
      "category_hour": "categoryHour",
      "category_day": "categoryDay",
      "category_week": "categoryWeek",
      "category_month": "categoryMonth",
      "languages_hour": "languagesHour",
      "languages_day": "languagesDay",
      "languages_week": "languagesWeek",
      "languages_month": "languagesMonth",
      "firstPartyEntities_hour": "firstPartyEntitiesHour",
      "firstPartyEntities_day": "firstPartyEntitiesDay",
      "firstPartyEntities_week": "firstPartyEntitiesWeek",
      "firstPartyEntities_month": "firstPartyEntitiesMonth",
      "thirdPartyEntities_hour": "thirdPartyEntitiesHour",
      "thirdPartyEntities_day": "thirdPartyEntitiesDay",
      "thirdPartyEntities_week": "thirdPartyEntitiesWeek",
      "thirdPartyEntities_month": "thirdPartyEntitiesMonth",
      "emotion_hour": "emotionHour",
      "emotion_day": "emotionDay",
      "emotion_week": "emotionWeek",
      "emotion_month": "emotionMonth",
      "sentiment_hour": "sentimentHour",
      "sentiment_day": "sentimentDay",
      "sentiment_week": "sentimentWeek",
      "sentiment_month": "sentimentMonth",
      "questionType_hour": "questionTypeHour",
      "questionType_day": "questionTypeDay",
      "questionType_week": "questionTypeWeek",
      "questionType_month": "questionTypeMonth",
      "projectId_hour": "projectIdHour",
      "projectId_day": "projectIdDay",
      "projectId_week": "projectIdWeek",
      "projectId_month": "projectIdMonth",
      "integrationId_hour": "integrationIdHour",
      "integrationId_day": "integrationIdDay",
      "integrationId_week": "integrationIdWeek",
      "integrationId_month": "integrationIdMonth",
      "firstMessageTime_hour": "firstMessageTimeHour",
      "firstMessageTime_day": "firstMessageTimeDay",
      "firstMessageTime_week": "firstMessageTimeWeek",
      "firstMessageTime_month": "firstMessageTimeMonth",
      "lastMessageTime_hour": "lastMessageTimeHour",
      "lastMessageTime_day": "lastMessageTimeDay",
      "lastMessageTime_week": "lastMessageTimeWeek",
      "lastMessageTime_month": "lastMessageTimeMonth",
      "lastUpdated_hour": "lastUpdatedHour",
      "lastUpdated_day": "lastUpdatedDay",
      "lastUpdated_week": "lastUpdatedWeek",
      "lastUpdated_month": "lastUpdatedMonth",
      "hasPositiveFeedback_hour": "hasPositiveFeedbackHour",
      "hasPositiveFeedback_day": "hasPositiveFeedbackDay",
      "hasPositiveFeedback_week": "hasPositiveFeedbackWeek",
      "hasPositiveFeedback_month": "hasPositiveFeedbackMonth",
      "hasNegativeFeedback_hour": "hasNegativeFeedbackHour",
      "hasNegativeFeedback_day": "hasNegativeFeedbackDay",
      "hasNegativeFeedback_week": "hasNegativeFeedbackWeek",
      "hasNegativeFeedback_month": "hasNegativeFeedbackMonth",
      "conversationIds_hour": "conversationIdsHour",
      "conversationIds_day": "conversationIdsDay",
      "conversationIds_week": "conversationIdsWeek",
      "conversationIds_month": "conversationIdsMonth",
      "areAIAnnotationsVerified_hour": "areAIAnnotationsVerifiedHour",
      "areAIAnnotationsVerified_day": "areAIAnnotationsVerifiedDay",
      "areAIAnnotationsVerified_week": "areAIAnnotationsVerifiedWeek",
      "areAIAnnotationsVerified_month": "areAIAnnotationsVerifiedMonth",
      "isInitialQuestionAnswer_hour": "isInitialQuestionAnswerHour",
      "isInitialQuestionAnswer_day": "isInitialQuestionAnswerDay",
      "isInitialQuestionAnswer_week": "isInitialQuestionAnswerWeek",
      "isInitialQuestionAnswer_month": "isInitialQuestionAnswerMonth",
      "sum_id": "sumId",
      "count_id": "countId",
      "avg_id": "avgId",
      "min_id": "minId",
      "max_id": "maxId",
      "sum_messageIds": "sumMessageIds",
      "count_messageIds": "countMessageIds",
      "avg_messageIds": "avgMessageIds",
      "min_messageIds": "minMessageIds",
      "max_messageIds": "maxMessageIds",
      "sum_messagesCount": "sumMessagesCount",
      "count_messagesCount": "countMessagesCount",
      "avg_messagesCount": "avgMessagesCount",
      "min_messagesCount": "minMessagesCount",
      "max_messagesCount": "maxMessagesCount",
      "sum_organizationId": "sumOrganizationId",
      "count_organizationId": "countOrganizationId",
      "avg_organizationId": "avgOrganizationId",
      "min_organizationId": "minOrganizationId",
      "max_organizationId": "maxOrganizationId",
      "sum_question": "sumQuestion",
      "count_question": "countQuestion",
      "avg_question": "avgQuestion",
      "min_question": "minQuestion",
      "max_question": "maxQuestion",
      "sum_questionLength": "sumQuestionLength",
      "count_questionLength": "countQuestionLength",
      "avg_questionLength": "avgQuestionLength",
      "min_questionLength": "minQuestionLength",
      "max_questionLength": "maxQuestionLength",
      "sum_answer": "sumAnswer",
      "count_answer": "countAnswer",
      "avg_answer": "avgAnswer",
      "min_answer": "minAnswer",
      "max_answer": "maxAnswer",
      "sum_isOnTopic": "sumIsOnTopic",
      "count_isOnTopic": "countIsOnTopic",
      "avg_isOnTopic": "avgIsOnTopic",
      "min_isOnTopic": "minIsOnTopic",
      "max_isOnTopic": "maxIsOnTopic",
      "sum_isClear": "sumIsClear",
      "count_isClear": "countIsClear",
      "avg_isClear": "avgIsClear",
      "min_isClear": "minIsClear",
      "max_isClear": "maxIsClear",
      "sum_isDocumented": "sumIsDocumented",
      "count_isDocumented": "countIsDocumented",
      "avg_isDocumented": "avgIsDocumented",
      "min_isDocumented": "minIsDocumented",
      "max_isDocumented": "maxIsDocumented",
      "sum_isFeatureSupported": "sumIsFeatureSupported",
      "count_isFeatureSupported": "countIsFeatureSupported",
      "avg_isFeatureSupported": "avgIsFeatureSupported",
      "min_isFeatureSupported": "minIsFeatureSupported",
      "max_isFeatureSupported": "maxIsFeatureSupported",
      "sum_isAnswerConfident": "sumIsAnswerConfident",
      "count_isAnswerConfident": "countIsAnswerConfident",
      "avg_isAnswerConfident": "avgIsAnswerConfident",
      "min_isAnswerConfident": "minIsAnswerConfident",
      "max_isAnswerConfident": "maxIsAnswerConfident",
      "sum_gapSummary": "sumGapSummary",
      "count_gapSummary": "countGapSummary",
      "avg_gapSummary": "avgGapSummary",
      "min_gapSummary": "minGapSummary",
      "max_gapSummary": "maxGapSummary",
      "sum_subject": "sumSubject",
      "count_subject": "countSubject",
      "avg_subject": "avgSubject",
      "min_subject": "minSubject",
      "max_subject": "maxSubject",
      "sum_category": "sumCategory",
      "count_category": "countCategory",
      "avg_category": "avgCategory",
      "min_category": "minCategory",
      "max_category": "maxCategory",
      "sum_languages": "sumLanguages",
      "count_languages": "countLanguages",
      "avg_languages": "avgLanguages",
      "min_languages": "minLanguages",
      "max_languages": "maxLanguages",
      "sum_firstPartyEntities": "sumFirstPartyEntities",
      "count_firstPartyEntities": "countFirstPartyEntities",
      "avg_firstPartyEntities": "avgFirstPartyEntities",
      "min_firstPartyEntities": "minFirstPartyEntities",
      "max_firstPartyEntities": "maxFirstPartyEntities",
      "sum_thirdPartyEntities": "sumThirdPartyEntities",
      "count_thirdPartyEntities": "countThirdPartyEntities",
      "avg_thirdPartyEntities": "avgThirdPartyEntities",
      "min_thirdPartyEntities": "minThirdPartyEntities",
      "max_thirdPartyEntities": "maxThirdPartyEntities",
      "sum_emotion": "sumEmotion",
      "count_emotion": "countEmotion",
      "avg_emotion": "avgEmotion",
      "min_emotion": "minEmotion",
      "max_emotion": "maxEmotion",
      "sum_sentiment": "sumSentiment",
      "count_sentiment": "countSentiment",
      "avg_sentiment": "avgSentiment",
      "min_sentiment": "minSentiment",
      "max_sentiment": "maxSentiment",
      "sum_questionType": "sumQuestionType",
      "count_questionType": "countQuestionType",
      "avg_questionType": "avgQuestionType",
      "min_questionType": "minQuestionType",
      "max_questionType": "maxQuestionType",
      "sum_projectId": "sumProjectId",
      "count_projectId": "countProjectId",
      "avg_projectId": "avgProjectId",
      "min_projectId": "minProjectId",
      "max_projectId": "maxProjectId",
      "sum_integrationId": "sumIntegrationId",
      "count_integrationId": "countIntegrationId",
      "avg_integrationId": "avgIntegrationId",
      "min_integrationId": "minIntegrationId",
      "max_integrationId": "maxIntegrationId",
      "sum_firstMessageTime": "sumFirstMessageTime",
      "count_firstMessageTime": "countFirstMessageTime",
      "avg_firstMessageTime": "avgFirstMessageTime",
      "min_firstMessageTime": "minFirstMessageTime",
      "max_firstMessageTime": "maxFirstMessageTime",
      "sum_lastMessageTime": "sumLastMessageTime",
      "count_lastMessageTime": "countLastMessageTime",
      "avg_lastMessageTime": "avgLastMessageTime",
      "min_lastMessageTime": "minLastMessageTime",
      "max_lastMessageTime": "maxLastMessageTime",
      "sum_lastUpdated": "sumLastUpdated",
      "count_lastUpdated": "countLastUpdated",
      "avg_lastUpdated": "avgLastUpdated",
      "min_lastUpdated": "minLastUpdated",
      "max_lastUpdated": "maxLastUpdated",
      "sum_hasPositiveFeedback": "sumHasPositiveFeedback",
      "count_hasPositiveFeedback": "countHasPositiveFeedback",
      "avg_hasPositiveFeedback": "avgHasPositiveFeedback",
      "min_hasPositiveFeedback": "minHasPositiveFeedback",
      "max_hasPositiveFeedback": "maxHasPositiveFeedback",
      "sum_hasNegativeFeedback": "sumHasNegativeFeedback",
      "count_hasNegativeFeedback": "countHasNegativeFeedback",
      "avg_hasNegativeFeedback": "avgHasNegativeFeedback",
      "min_hasNegativeFeedback": "minHasNegativeFeedback",
      "max_hasNegativeFeedback": "maxHasNegativeFeedback",
      "sum_conversationIds": "sumConversationIds",
      "count_conversationIds": "countConversationIds",
      "avg_conversationIds": "avgConversationIds",
      "min_conversationIds": "minConversationIds",
      "max_conversationIds": "maxConversationIds",
      "sum_areAIAnnotationsVerified": "sumAreAIAnnotationsVerified",
      "count_areAIAnnotationsVerified": "countAreAIAnnotationsVerified",
      "avg_areAIAnnotationsVerified": "avgAreAIAnnotationsVerified",
      "min_areAIAnnotationsVerified": "minAreAIAnnotationsVerified",
      "max_areAIAnnotationsVerified": "maxAreAIAnnotationsVerified",
      "sum_isInitialQuestionAnswer": "sumIsInitialQuestionAnswer",
      "count_isInitialQuestionAnswer": "countIsInitialQuestionAnswer",
      "avg_isInitialQuestionAnswer": "avgIsInitialQuestionAnswer",
      "min_isInitialQuestionAnswer": "minIsInitialQuestionAnswer",
      "max_isInitialQuestionAnswer": "maxIsInitialQuestionAnswer",
    });
  });

/** @internal */
export type Result$Outbound = {
  id?: string | undefined;
  messageIds?: any | undefined;
  messagesCount?: any | undefined;
  organizationId?: string | undefined;
  question?: string | undefined;
  questionLength?: any | undefined;
  answer?: string | undefined;
  isOnTopic?: any | undefined;
  isClear?: any | undefined;
  isDocumented?: any | undefined;
  isFeatureSupported?: any | undefined;
  isAnswerConfident?: any | undefined;
  gapSummary?: any | undefined;
  subject?: any | undefined;
  category?: any | undefined;
  languages?: any | undefined;
  firstPartyEntities?: any | undefined;
  thirdPartyEntities?: any | undefined;
  emotion?: any | undefined;
  sentiment?: any | undefined;
  questionType?: any | undefined;
  projectId?: string | undefined;
  integrationId?: string | undefined;
  firstMessageTime?: string | undefined;
  lastMessageTime?: string | undefined;
  lastUpdated?: string | undefined;
  hasPositiveFeedback?: boolean | undefined;
  hasNegativeFeedback?: boolean | undefined;
  conversationIds?: Array<string> | undefined;
  areAIAnnotationsVerified?: any | undefined;
  isInitialQuestionAnswer?: boolean | undefined;
  sum?: number | undefined;
  count?: number | undefined;
  avg?: number | undefined;
  min?: number | undefined;
  max?: number | undefined;
  id_hour?: string | undefined;
  id_day?: string | undefined;
  id_week?: string | undefined;
  id_month?: string | undefined;
  messageIds_hour?: string | undefined;
  messageIds_day?: string | undefined;
  messageIds_week?: string | undefined;
  messageIds_month?: string | undefined;
  messagesCount_hour?: string | undefined;
  messagesCount_day?: string | undefined;
  messagesCount_week?: string | undefined;
  messagesCount_month?: string | undefined;
  organizationId_hour?: string | undefined;
  organizationId_day?: string | undefined;
  organizationId_week?: string | undefined;
  organizationId_month?: string | undefined;
  question_hour?: string | undefined;
  question_day?: string | undefined;
  question_week?: string | undefined;
  question_month?: string | undefined;
  questionLength_hour?: string | undefined;
  questionLength_day?: string | undefined;
  questionLength_week?: string | undefined;
  questionLength_month?: string | undefined;
  answer_hour?: string | undefined;
  answer_day?: string | undefined;
  answer_week?: string | undefined;
  answer_month?: string | undefined;
  isOnTopic_hour?: string | undefined;
  isOnTopic_day?: string | undefined;
  isOnTopic_week?: string | undefined;
  isOnTopic_month?: string | undefined;
  isClear_hour?: string | undefined;
  isClear_day?: string | undefined;
  isClear_week?: string | undefined;
  isClear_month?: string | undefined;
  isDocumented_hour?: string | undefined;
  isDocumented_day?: string | undefined;
  isDocumented_week?: string | undefined;
  isDocumented_month?: string | undefined;
  isFeatureSupported_hour?: string | undefined;
  isFeatureSupported_day?: string | undefined;
  isFeatureSupported_week?: string | undefined;
  isFeatureSupported_month?: string | undefined;
  isAnswerConfident_hour?: string | undefined;
  isAnswerConfident_day?: string | undefined;
  isAnswerConfident_week?: string | undefined;
  isAnswerConfident_month?: string | undefined;
  gapSummary_hour?: string | undefined;
  gapSummary_day?: string | undefined;
  gapSummary_week?: string | undefined;
  gapSummary_month?: string | undefined;
  subject_hour?: string | undefined;
  subject_day?: string | undefined;
  subject_week?: string | undefined;
  subject_month?: string | undefined;
  category_hour?: string | undefined;
  category_day?: string | undefined;
  category_week?: string | undefined;
  category_month?: string | undefined;
  languages_hour?: string | undefined;
  languages_day?: string | undefined;
  languages_week?: string | undefined;
  languages_month?: string | undefined;
  firstPartyEntities_hour?: string | undefined;
  firstPartyEntities_day?: string | undefined;
  firstPartyEntities_week?: string | undefined;
  firstPartyEntities_month?: string | undefined;
  thirdPartyEntities_hour?: string | undefined;
  thirdPartyEntities_day?: string | undefined;
  thirdPartyEntities_week?: string | undefined;
  thirdPartyEntities_month?: string | undefined;
  emotion_hour?: string | undefined;
  emotion_day?: string | undefined;
  emotion_week?: string | undefined;
  emotion_month?: string | undefined;
  sentiment_hour?: string | undefined;
  sentiment_day?: string | undefined;
  sentiment_week?: string | undefined;
  sentiment_month?: string | undefined;
  questionType_hour?: string | undefined;
  questionType_day?: string | undefined;
  questionType_week?: string | undefined;
  questionType_month?: string | undefined;
  projectId_hour?: string | undefined;
  projectId_day?: string | undefined;
  projectId_week?: string | undefined;
  projectId_month?: string | undefined;
  integrationId_hour?: string | undefined;
  integrationId_day?: string | undefined;
  integrationId_week?: string | undefined;
  integrationId_month?: string | undefined;
  firstMessageTime_hour?: string | undefined;
  firstMessageTime_day?: string | undefined;
  firstMessageTime_week?: string | undefined;
  firstMessageTime_month?: string | undefined;
  lastMessageTime_hour?: string | undefined;
  lastMessageTime_day?: string | undefined;
  lastMessageTime_week?: string | undefined;
  lastMessageTime_month?: string | undefined;
  lastUpdated_hour?: string | undefined;
  lastUpdated_day?: string | undefined;
  lastUpdated_week?: string | undefined;
  lastUpdated_month?: string | undefined;
  hasPositiveFeedback_hour?: string | undefined;
  hasPositiveFeedback_day?: string | undefined;
  hasPositiveFeedback_week?: string | undefined;
  hasPositiveFeedback_month?: string | undefined;
  hasNegativeFeedback_hour?: string | undefined;
  hasNegativeFeedback_day?: string | undefined;
  hasNegativeFeedback_week?: string | undefined;
  hasNegativeFeedback_month?: string | undefined;
  conversationIds_hour?: string | undefined;
  conversationIds_day?: string | undefined;
  conversationIds_week?: string | undefined;
  conversationIds_month?: string | undefined;
  areAIAnnotationsVerified_hour?: string | undefined;
  areAIAnnotationsVerified_day?: string | undefined;
  areAIAnnotationsVerified_week?: string | undefined;
  areAIAnnotationsVerified_month?: string | undefined;
  isInitialQuestionAnswer_hour?: string | undefined;
  isInitialQuestionAnswer_day?: string | undefined;
  isInitialQuestionAnswer_week?: string | undefined;
  isInitialQuestionAnswer_month?: string | undefined;
  sum_id?: number | undefined;
  count_id?: number | undefined;
  avg_id?: number | undefined;
  min_id?: number | undefined;
  max_id?: number | undefined;
  sum_messageIds?: number | undefined;
  count_messageIds?: number | undefined;
  avg_messageIds?: number | undefined;
  min_messageIds?: number | undefined;
  max_messageIds?: number | undefined;
  sum_messagesCount?: number | undefined;
  count_messagesCount?: number | undefined;
  avg_messagesCount?: number | undefined;
  min_messagesCount?: number | undefined;
  max_messagesCount?: number | undefined;
  sum_organizationId?: number | undefined;
  count_organizationId?: number | undefined;
  avg_organizationId?: number | undefined;
  min_organizationId?: number | undefined;
  max_organizationId?: number | undefined;
  sum_question?: number | undefined;
  count_question?: number | undefined;
  avg_question?: number | undefined;
  min_question?: number | undefined;
  max_question?: number | undefined;
  sum_questionLength?: number | undefined;
  count_questionLength?: number | undefined;
  avg_questionLength?: number | undefined;
  min_questionLength?: number | undefined;
  max_questionLength?: number | undefined;
  sum_answer?: number | undefined;
  count_answer?: number | undefined;
  avg_answer?: number | undefined;
  min_answer?: number | undefined;
  max_answer?: number | undefined;
  sum_isOnTopic?: number | undefined;
  count_isOnTopic?: number | undefined;
  avg_isOnTopic?: number | undefined;
  min_isOnTopic?: number | undefined;
  max_isOnTopic?: number | undefined;
  sum_isClear?: number | undefined;
  count_isClear?: number | undefined;
  avg_isClear?: number | undefined;
  min_isClear?: number | undefined;
  max_isClear?: number | undefined;
  sum_isDocumented?: number | undefined;
  count_isDocumented?: number | undefined;
  avg_isDocumented?: number | undefined;
  min_isDocumented?: number | undefined;
  max_isDocumented?: number | undefined;
  sum_isFeatureSupported?: number | undefined;
  count_isFeatureSupported?: number | undefined;
  avg_isFeatureSupported?: number | undefined;
  min_isFeatureSupported?: number | undefined;
  max_isFeatureSupported?: number | undefined;
  sum_isAnswerConfident?: number | undefined;
  count_isAnswerConfident?: number | undefined;
  avg_isAnswerConfident?: number | undefined;
  min_isAnswerConfident?: number | undefined;
  max_isAnswerConfident?: number | undefined;
  sum_gapSummary?: number | undefined;
  count_gapSummary?: number | undefined;
  avg_gapSummary?: number | undefined;
  min_gapSummary?: number | undefined;
  max_gapSummary?: number | undefined;
  sum_subject?: number | undefined;
  count_subject?: number | undefined;
  avg_subject?: number | undefined;
  min_subject?: number | undefined;
  max_subject?: number | undefined;
  sum_category?: number | undefined;
  count_category?: number | undefined;
  avg_category?: number | undefined;
  min_category?: number | undefined;
  max_category?: number | undefined;
  sum_languages?: number | undefined;
  count_languages?: number | undefined;
  avg_languages?: number | undefined;
  min_languages?: number | undefined;
  max_languages?: number | undefined;
  sum_firstPartyEntities?: number | undefined;
  count_firstPartyEntities?: number | undefined;
  avg_firstPartyEntities?: number | undefined;
  min_firstPartyEntities?: number | undefined;
  max_firstPartyEntities?: number | undefined;
  sum_thirdPartyEntities?: number | undefined;
  count_thirdPartyEntities?: number | undefined;
  avg_thirdPartyEntities?: number | undefined;
  min_thirdPartyEntities?: number | undefined;
  max_thirdPartyEntities?: number | undefined;
  sum_emotion?: number | undefined;
  count_emotion?: number | undefined;
  avg_emotion?: number | undefined;
  min_emotion?: number | undefined;
  max_emotion?: number | undefined;
  sum_sentiment?: number | undefined;
  count_sentiment?: number | undefined;
  avg_sentiment?: number | undefined;
  min_sentiment?: number | undefined;
  max_sentiment?: number | undefined;
  sum_questionType?: number | undefined;
  count_questionType?: number | undefined;
  avg_questionType?: number | undefined;
  min_questionType?: number | undefined;
  max_questionType?: number | undefined;
  sum_projectId?: number | undefined;
  count_projectId?: number | undefined;
  avg_projectId?: number | undefined;
  min_projectId?: number | undefined;
  max_projectId?: number | undefined;
  sum_integrationId?: number | undefined;
  count_integrationId?: number | undefined;
  avg_integrationId?: number | undefined;
  min_integrationId?: number | undefined;
  max_integrationId?: number | undefined;
  sum_firstMessageTime?: number | undefined;
  count_firstMessageTime?: number | undefined;
  avg_firstMessageTime?: number | undefined;
  min_firstMessageTime?: number | undefined;
  max_firstMessageTime?: number | undefined;
  sum_lastMessageTime?: number | undefined;
  count_lastMessageTime?: number | undefined;
  avg_lastMessageTime?: number | undefined;
  min_lastMessageTime?: number | undefined;
  max_lastMessageTime?: number | undefined;
  sum_lastUpdated?: number | undefined;
  count_lastUpdated?: number | undefined;
  avg_lastUpdated?: number | undefined;
  min_lastUpdated?: number | undefined;
  max_lastUpdated?: number | undefined;
  sum_hasPositiveFeedback?: number | undefined;
  count_hasPositiveFeedback?: number | undefined;
  avg_hasPositiveFeedback?: number | undefined;
  min_hasPositiveFeedback?: number | undefined;
  max_hasPositiveFeedback?: number | undefined;
  sum_hasNegativeFeedback?: number | undefined;
  count_hasNegativeFeedback?: number | undefined;
  avg_hasNegativeFeedback?: number | undefined;
  min_hasNegativeFeedback?: number | undefined;
  max_hasNegativeFeedback?: number | undefined;
  sum_conversationIds?: number | undefined;
  count_conversationIds?: number | undefined;
  avg_conversationIds?: number | undefined;
  min_conversationIds?: number | undefined;
  max_conversationIds?: number | undefined;
  sum_areAIAnnotationsVerified?: number | undefined;
  count_areAIAnnotationsVerified?: number | undefined;
  avg_areAIAnnotationsVerified?: number | undefined;
  min_areAIAnnotationsVerified?: number | undefined;
  max_areAIAnnotationsVerified?: number | undefined;
  sum_isInitialQuestionAnswer?: number | undefined;
  count_isInitialQuestionAnswer?: number | undefined;
  avg_isInitialQuestionAnswer?: number | undefined;
  min_isInitialQuestionAnswer?: number | undefined;
  max_isInitialQuestionAnswer?: number | undefined;
};

/** @internal */
export const Result$outboundSchema: z.ZodType<
  Result$Outbound,
  z.ZodTypeDef,
  Result
> = z.object({
  id: z.string().optional(),
  messageIds: z.any().optional(),
  messagesCount: z.any().optional(),
  organizationId: z.string().optional(),
  question: z.string().optional(),
  questionLength: z.any().optional(),
  answer: z.string().optional(),
  isOnTopic: z.any().optional(),
  isClear: z.any().optional(),
  isDocumented: z.any().optional(),
  isFeatureSupported: z.any().optional(),
  isAnswerConfident: z.any().optional(),
  gapSummary: z.any().optional(),
  subject: z.any().optional(),
  category: z.any().optional(),
  languages: z.any().optional(),
  firstPartyEntities: z.any().optional(),
  thirdPartyEntities: z.any().optional(),
  emotion: z.any().optional(),
  sentiment: z.any().optional(),
  questionType: z.any().optional(),
  projectId: z.string().optional(),
  integrationId: z.string().optional(),
  firstMessageTime: z.date().transform(v => v.toISOString()).optional(),
  lastMessageTime: z.date().transform(v => v.toISOString()).optional(),
  lastUpdated: z.date().transform(v => v.toISOString()).optional(),
  hasPositiveFeedback: z.boolean().optional(),
  hasNegativeFeedback: z.boolean().optional(),
  conversationIds: z.array(z.string()).optional(),
  areAIAnnotationsVerified: z.any().optional(),
  isInitialQuestionAnswer: z.boolean().optional(),
  sum: z.number().optional(),
  count: z.number().optional(),
  avg: z.number().optional(),
  min: z.number().optional(),
  max: z.number().optional(),
  idHour: z.string().optional(),
  idDay: z.string().optional(),
  idWeek: z.string().optional(),
  idMonth: z.string().optional(),
  messageIdsHour: z.string().optional(),
  messageIdsDay: z.string().optional(),
  messageIdsWeek: z.string().optional(),
  messageIdsMonth: z.string().optional(),
  messagesCountHour: z.string().optional(),
  messagesCountDay: z.string().optional(),
  messagesCountWeek: z.string().optional(),
  messagesCountMonth: z.string().optional(),
  organizationIdHour: z.string().optional(),
  organizationIdDay: z.string().optional(),
  organizationIdWeek: z.string().optional(),
  organizationIdMonth: z.string().optional(),
  questionHour: z.string().optional(),
  questionDay: z.string().optional(),
  questionWeek: z.string().optional(),
  questionMonth: z.string().optional(),
  questionLengthHour: z.string().optional(),
  questionLengthDay: z.string().optional(),
  questionLengthWeek: z.string().optional(),
  questionLengthMonth: z.string().optional(),
  answerHour: z.string().optional(),
  answerDay: z.string().optional(),
  answerWeek: z.string().optional(),
  answerMonth: z.string().optional(),
  isOnTopicHour: z.string().optional(),
  isOnTopicDay: z.string().optional(),
  isOnTopicWeek: z.string().optional(),
  isOnTopicMonth: z.string().optional(),
  isClearHour: z.string().optional(),
  isClearDay: z.string().optional(),
  isClearWeek: z.string().optional(),
  isClearMonth: z.string().optional(),
  isDocumentedHour: z.string().optional(),
  isDocumentedDay: z.string().optional(),
  isDocumentedWeek: z.string().optional(),
  isDocumentedMonth: z.string().optional(),
  isFeatureSupportedHour: z.string().optional(),
  isFeatureSupportedDay: z.string().optional(),
  isFeatureSupportedWeek: z.string().optional(),
  isFeatureSupportedMonth: z.string().optional(),
  isAnswerConfidentHour: z.string().optional(),
  isAnswerConfidentDay: z.string().optional(),
  isAnswerConfidentWeek: z.string().optional(),
  isAnswerConfidentMonth: z.string().optional(),
  gapSummaryHour: z.string().optional(),
  gapSummaryDay: z.string().optional(),
  gapSummaryWeek: z.string().optional(),
  gapSummaryMonth: z.string().optional(),
  subjectHour: z.string().optional(),
  subjectDay: z.string().optional(),
  subjectWeek: z.string().optional(),
  subjectMonth: z.string().optional(),
  categoryHour: z.string().optional(),
  categoryDay: z.string().optional(),
  categoryWeek: z.string().optional(),
  categoryMonth: z.string().optional(),
  languagesHour: z.string().optional(),
  languagesDay: z.string().optional(),
  languagesWeek: z.string().optional(),
  languagesMonth: z.string().optional(),
  firstPartyEntitiesHour: z.string().optional(),
  firstPartyEntitiesDay: z.string().optional(),
  firstPartyEntitiesWeek: z.string().optional(),
  firstPartyEntitiesMonth: z.string().optional(),
  thirdPartyEntitiesHour: z.string().optional(),
  thirdPartyEntitiesDay: z.string().optional(),
  thirdPartyEntitiesWeek: z.string().optional(),
  thirdPartyEntitiesMonth: z.string().optional(),
  emotionHour: z.string().optional(),
  emotionDay: z.string().optional(),
  emotionWeek: z.string().optional(),
  emotionMonth: z.string().optional(),
  sentimentHour: z.string().optional(),
  sentimentDay: z.string().optional(),
  sentimentWeek: z.string().optional(),
  sentimentMonth: z.string().optional(),
  questionTypeHour: z.string().optional(),
  questionTypeDay: z.string().optional(),
  questionTypeWeek: z.string().optional(),
  questionTypeMonth: z.string().optional(),
  projectIdHour: z.string().optional(),
  projectIdDay: z.string().optional(),
  projectIdWeek: z.string().optional(),
  projectIdMonth: z.string().optional(),
  integrationIdHour: z.string().optional(),
  integrationIdDay: z.string().optional(),
  integrationIdWeek: z.string().optional(),
  integrationIdMonth: z.string().optional(),
  firstMessageTimeHour: z.string().optional(),
  firstMessageTimeDay: z.string().optional(),
  firstMessageTimeWeek: z.string().optional(),
  firstMessageTimeMonth: z.string().optional(),
  lastMessageTimeHour: z.string().optional(),
  lastMessageTimeDay: z.string().optional(),
  lastMessageTimeWeek: z.string().optional(),
  lastMessageTimeMonth: z.string().optional(),
  lastUpdatedHour: z.string().optional(),
  lastUpdatedDay: z.string().optional(),
  lastUpdatedWeek: z.string().optional(),
  lastUpdatedMonth: z.string().optional(),
  hasPositiveFeedbackHour: z.string().optional(),
  hasPositiveFeedbackDay: z.string().optional(),
  hasPositiveFeedbackWeek: z.string().optional(),
  hasPositiveFeedbackMonth: z.string().optional(),
  hasNegativeFeedbackHour: z.string().optional(),
  hasNegativeFeedbackDay: z.string().optional(),
  hasNegativeFeedbackWeek: z.string().optional(),
  hasNegativeFeedbackMonth: z.string().optional(),
  conversationIdsHour: z.string().optional(),
  conversationIdsDay: z.string().optional(),
  conversationIdsWeek: z.string().optional(),
  conversationIdsMonth: z.string().optional(),
  areAIAnnotationsVerifiedHour: z.string().optional(),
  areAIAnnotationsVerifiedDay: z.string().optional(),
  areAIAnnotationsVerifiedWeek: z.string().optional(),
  areAIAnnotationsVerifiedMonth: z.string().optional(),
  isInitialQuestionAnswerHour: z.string().optional(),
  isInitialQuestionAnswerDay: z.string().optional(),
  isInitialQuestionAnswerWeek: z.string().optional(),
  isInitialQuestionAnswerMonth: z.string().optional(),
  sumId: z.number().optional(),
  countId: z.number().optional(),
  avgId: z.number().optional(),
  minId: z.number().optional(),
  maxId: z.number().optional(),
  sumMessageIds: z.number().optional(),
  countMessageIds: z.number().optional(),
  avgMessageIds: z.number().optional(),
  minMessageIds: z.number().optional(),
  maxMessageIds: z.number().optional(),
  sumMessagesCount: z.number().optional(),
  countMessagesCount: z.number().optional(),
  avgMessagesCount: z.number().optional(),
  minMessagesCount: z.number().optional(),
  maxMessagesCount: z.number().optional(),
  sumOrganizationId: z.number().optional(),
  countOrganizationId: z.number().optional(),
  avgOrganizationId: z.number().optional(),
  minOrganizationId: z.number().optional(),
  maxOrganizationId: z.number().optional(),
  sumQuestion: z.number().optional(),
  countQuestion: z.number().optional(),
  avgQuestion: z.number().optional(),
  minQuestion: z.number().optional(),
  maxQuestion: z.number().optional(),
  sumQuestionLength: z.number().optional(),
  countQuestionLength: z.number().optional(),
  avgQuestionLength: z.number().optional(),
  minQuestionLength: z.number().optional(),
  maxQuestionLength: z.number().optional(),
  sumAnswer: z.number().optional(),
  countAnswer: z.number().optional(),
  avgAnswer: z.number().optional(),
  minAnswer: z.number().optional(),
  maxAnswer: z.number().optional(),
  sumIsOnTopic: z.number().optional(),
  countIsOnTopic: z.number().optional(),
  avgIsOnTopic: z.number().optional(),
  minIsOnTopic: z.number().optional(),
  maxIsOnTopic: z.number().optional(),
  sumIsClear: z.number().optional(),
  countIsClear: z.number().optional(),
  avgIsClear: z.number().optional(),
  minIsClear: z.number().optional(),
  maxIsClear: z.number().optional(),
  sumIsDocumented: z.number().optional(),
  countIsDocumented: z.number().optional(),
  avgIsDocumented: z.number().optional(),
  minIsDocumented: z.number().optional(),
  maxIsDocumented: z.number().optional(),
  sumIsFeatureSupported: z.number().optional(),
  countIsFeatureSupported: z.number().optional(),
  avgIsFeatureSupported: z.number().optional(),
  minIsFeatureSupported: z.number().optional(),
  maxIsFeatureSupported: z.number().optional(),
  sumIsAnswerConfident: z.number().optional(),
  countIsAnswerConfident: z.number().optional(),
  avgIsAnswerConfident: z.number().optional(),
  minIsAnswerConfident: z.number().optional(),
  maxIsAnswerConfident: z.number().optional(),
  sumGapSummary: z.number().optional(),
  countGapSummary: z.number().optional(),
  avgGapSummary: z.number().optional(),
  minGapSummary: z.number().optional(),
  maxGapSummary: z.number().optional(),
  sumSubject: z.number().optional(),
  countSubject: z.number().optional(),
  avgSubject: z.number().optional(),
  minSubject: z.number().optional(),
  maxSubject: z.number().optional(),
  sumCategory: z.number().optional(),
  countCategory: z.number().optional(),
  avgCategory: z.number().optional(),
  minCategory: z.number().optional(),
  maxCategory: z.number().optional(),
  sumLanguages: z.number().optional(),
  countLanguages: z.number().optional(),
  avgLanguages: z.number().optional(),
  minLanguages: z.number().optional(),
  maxLanguages: z.number().optional(),
  sumFirstPartyEntities: z.number().optional(),
  countFirstPartyEntities: z.number().optional(),
  avgFirstPartyEntities: z.number().optional(),
  minFirstPartyEntities: z.number().optional(),
  maxFirstPartyEntities: z.number().optional(),
  sumThirdPartyEntities: z.number().optional(),
  countThirdPartyEntities: z.number().optional(),
  avgThirdPartyEntities: z.number().optional(),
  minThirdPartyEntities: z.number().optional(),
  maxThirdPartyEntities: z.number().optional(),
  sumEmotion: z.number().optional(),
  countEmotion: z.number().optional(),
  avgEmotion: z.number().optional(),
  minEmotion: z.number().optional(),
  maxEmotion: z.number().optional(),
  sumSentiment: z.number().optional(),
  countSentiment: z.number().optional(),
  avgSentiment: z.number().optional(),
  minSentiment: z.number().optional(),
  maxSentiment: z.number().optional(),
  sumQuestionType: z.number().optional(),
  countQuestionType: z.number().optional(),
  avgQuestionType: z.number().optional(),
  minQuestionType: z.number().optional(),
  maxQuestionType: z.number().optional(),
  sumProjectId: z.number().optional(),
  countProjectId: z.number().optional(),
  avgProjectId: z.number().optional(),
  minProjectId: z.number().optional(),
  maxProjectId: z.number().optional(),
  sumIntegrationId: z.number().optional(),
  countIntegrationId: z.number().optional(),
  avgIntegrationId: z.number().optional(),
  minIntegrationId: z.number().optional(),
  maxIntegrationId: z.number().optional(),
  sumFirstMessageTime: z.number().optional(),
  countFirstMessageTime: z.number().optional(),
  avgFirstMessageTime: z.number().optional(),
  minFirstMessageTime: z.number().optional(),
  maxFirstMessageTime: z.number().optional(),
  sumLastMessageTime: z.number().optional(),
  countLastMessageTime: z.number().optional(),
  avgLastMessageTime: z.number().optional(),
  minLastMessageTime: z.number().optional(),
  maxLastMessageTime: z.number().optional(),
  sumLastUpdated: z.number().optional(),
  countLastUpdated: z.number().optional(),
  avgLastUpdated: z.number().optional(),
  minLastUpdated: z.number().optional(),
  maxLastUpdated: z.number().optional(),
  sumHasPositiveFeedback: z.number().optional(),
  countHasPositiveFeedback: z.number().optional(),
  avgHasPositiveFeedback: z.number().optional(),
  minHasPositiveFeedback: z.number().optional(),
  maxHasPositiveFeedback: z.number().optional(),
  sumHasNegativeFeedback: z.number().optional(),
  countHasNegativeFeedback: z.number().optional(),
  avgHasNegativeFeedback: z.number().optional(),
  minHasNegativeFeedback: z.number().optional(),
  maxHasNegativeFeedback: z.number().optional(),
  sumConversationIds: z.number().optional(),
  countConversationIds: z.number().optional(),
  avgConversationIds: z.number().optional(),
  minConversationIds: z.number().optional(),
  maxConversationIds: z.number().optional(),
  sumAreAIAnnotationsVerified: z.number().optional(),
  countAreAIAnnotationsVerified: z.number().optional(),
  avgAreAIAnnotationsVerified: z.number().optional(),
  minAreAIAnnotationsVerified: z.number().optional(),
  maxAreAIAnnotationsVerified: z.number().optional(),
  sumIsInitialQuestionAnswer: z.number().optional(),
  countIsInitialQuestionAnswer: z.number().optional(),
  avgIsInitialQuestionAnswer: z.number().optional(),
  minIsInitialQuestionAnswer: z.number().optional(),
  maxIsInitialQuestionAnswer: z.number().optional(),
}).transform((v) => {
  return remap$(v, {
    idHour: "id_hour",
    idDay: "id_day",
    idWeek: "id_week",
    idMonth: "id_month",
    messageIdsHour: "messageIds_hour",
    messageIdsDay: "messageIds_day",
    messageIdsWeek: "messageIds_week",
    messageIdsMonth: "messageIds_month",
    messagesCountHour: "messagesCount_hour",
    messagesCountDay: "messagesCount_day",
    messagesCountWeek: "messagesCount_week",
    messagesCountMonth: "messagesCount_month",
    organizationIdHour: "organizationId_hour",
    organizationIdDay: "organizationId_day",
    organizationIdWeek: "organizationId_week",
    organizationIdMonth: "organizationId_month",
    questionHour: "question_hour",
    questionDay: "question_day",
    questionWeek: "question_week",
    questionMonth: "question_month",
    questionLengthHour: "questionLength_hour",
    questionLengthDay: "questionLength_day",
    questionLengthWeek: "questionLength_week",
    questionLengthMonth: "questionLength_month",
    answerHour: "answer_hour",
    answerDay: "answer_day",
    answerWeek: "answer_week",
    answerMonth: "answer_month",
    isOnTopicHour: "isOnTopic_hour",
    isOnTopicDay: "isOnTopic_day",
    isOnTopicWeek: "isOnTopic_week",
    isOnTopicMonth: "isOnTopic_month",
    isClearHour: "isClear_hour",
    isClearDay: "isClear_day",
    isClearWeek: "isClear_week",
    isClearMonth: "isClear_month",
    isDocumentedHour: "isDocumented_hour",
    isDocumentedDay: "isDocumented_day",
    isDocumentedWeek: "isDocumented_week",
    isDocumentedMonth: "isDocumented_month",
    isFeatureSupportedHour: "isFeatureSupported_hour",
    isFeatureSupportedDay: "isFeatureSupported_day",
    isFeatureSupportedWeek: "isFeatureSupported_week",
    isFeatureSupportedMonth: "isFeatureSupported_month",
    isAnswerConfidentHour: "isAnswerConfident_hour",
    isAnswerConfidentDay: "isAnswerConfident_day",
    isAnswerConfidentWeek: "isAnswerConfident_week",
    isAnswerConfidentMonth: "isAnswerConfident_month",
    gapSummaryHour: "gapSummary_hour",
    gapSummaryDay: "gapSummary_day",
    gapSummaryWeek: "gapSummary_week",
    gapSummaryMonth: "gapSummary_month",
    subjectHour: "subject_hour",
    subjectDay: "subject_day",
    subjectWeek: "subject_week",
    subjectMonth: "subject_month",
    categoryHour: "category_hour",
    categoryDay: "category_day",
    categoryWeek: "category_week",
    categoryMonth: "category_month",
    languagesHour: "languages_hour",
    languagesDay: "languages_day",
    languagesWeek: "languages_week",
    languagesMonth: "languages_month",
    firstPartyEntitiesHour: "firstPartyEntities_hour",
    firstPartyEntitiesDay: "firstPartyEntities_day",
    firstPartyEntitiesWeek: "firstPartyEntities_week",
    firstPartyEntitiesMonth: "firstPartyEntities_month",
    thirdPartyEntitiesHour: "thirdPartyEntities_hour",
    thirdPartyEntitiesDay: "thirdPartyEntities_day",
    thirdPartyEntitiesWeek: "thirdPartyEntities_week",
    thirdPartyEntitiesMonth: "thirdPartyEntities_month",
    emotionHour: "emotion_hour",
    emotionDay: "emotion_day",
    emotionWeek: "emotion_week",
    emotionMonth: "emotion_month",
    sentimentHour: "sentiment_hour",
    sentimentDay: "sentiment_day",
    sentimentWeek: "sentiment_week",
    sentimentMonth: "sentiment_month",
    questionTypeHour: "questionType_hour",
    questionTypeDay: "questionType_day",
    questionTypeWeek: "questionType_week",
    questionTypeMonth: "questionType_month",
    projectIdHour: "projectId_hour",
    projectIdDay: "projectId_day",
    projectIdWeek: "projectId_week",
    projectIdMonth: "projectId_month",
    integrationIdHour: "integrationId_hour",
    integrationIdDay: "integrationId_day",
    integrationIdWeek: "integrationId_week",
    integrationIdMonth: "integrationId_month",
    firstMessageTimeHour: "firstMessageTime_hour",
    firstMessageTimeDay: "firstMessageTime_day",
    firstMessageTimeWeek: "firstMessageTime_week",
    firstMessageTimeMonth: "firstMessageTime_month",
    lastMessageTimeHour: "lastMessageTime_hour",
    lastMessageTimeDay: "lastMessageTime_day",
    lastMessageTimeWeek: "lastMessageTime_week",
    lastMessageTimeMonth: "lastMessageTime_month",
    lastUpdatedHour: "lastUpdated_hour",
    lastUpdatedDay: "lastUpdated_day",
    lastUpdatedWeek: "lastUpdated_week",
    lastUpdatedMonth: "lastUpdated_month",
    hasPositiveFeedbackHour: "hasPositiveFeedback_hour",
    hasPositiveFeedbackDay: "hasPositiveFeedback_day",
    hasPositiveFeedbackWeek: "hasPositiveFeedback_week",
    hasPositiveFeedbackMonth: "hasPositiveFeedback_month",
    hasNegativeFeedbackHour: "hasNegativeFeedback_hour",
    hasNegativeFeedbackDay: "hasNegativeFeedback_day",
    hasNegativeFeedbackWeek: "hasNegativeFeedback_week",
    hasNegativeFeedbackMonth: "hasNegativeFeedback_month",
    conversationIdsHour: "conversationIds_hour",
    conversationIdsDay: "conversationIds_day",
    conversationIdsWeek: "conversationIds_week",
    conversationIdsMonth: "conversationIds_month",
    areAIAnnotationsVerifiedHour: "areAIAnnotationsVerified_hour",
    areAIAnnotationsVerifiedDay: "areAIAnnotationsVerified_day",
    areAIAnnotationsVerifiedWeek: "areAIAnnotationsVerified_week",
    areAIAnnotationsVerifiedMonth: "areAIAnnotationsVerified_month",
    isInitialQuestionAnswerHour: "isInitialQuestionAnswer_hour",
    isInitialQuestionAnswerDay: "isInitialQuestionAnswer_day",
    isInitialQuestionAnswerWeek: "isInitialQuestionAnswer_week",
    isInitialQuestionAnswerMonth: "isInitialQuestionAnswer_month",
    sumId: "sum_id",
    countId: "count_id",
    avgId: "avg_id",
    minId: "min_id",
    maxId: "max_id",
    sumMessageIds: "sum_messageIds",
    countMessageIds: "count_messageIds",
    avgMessageIds: "avg_messageIds",
    minMessageIds: "min_messageIds",
    maxMessageIds: "max_messageIds",
    sumMessagesCount: "sum_messagesCount",
    countMessagesCount: "count_messagesCount",
    avgMessagesCount: "avg_messagesCount",
    minMessagesCount: "min_messagesCount",
    maxMessagesCount: "max_messagesCount",
    sumOrganizationId: "sum_organizationId",
    countOrganizationId: "count_organizationId",
    avgOrganizationId: "avg_organizationId",
    minOrganizationId: "min_organizationId",
    maxOrganizationId: "max_organizationId",
    sumQuestion: "sum_question",
    countQuestion: "count_question",
    avgQuestion: "avg_question",
    minQuestion: "min_question",
    maxQuestion: "max_question",
    sumQuestionLength: "sum_questionLength",
    countQuestionLength: "count_questionLength",
    avgQuestionLength: "avg_questionLength",
    minQuestionLength: "min_questionLength",
    maxQuestionLength: "max_questionLength",
    sumAnswer: "sum_answer",
    countAnswer: "count_answer",
    avgAnswer: "avg_answer",
    minAnswer: "min_answer",
    maxAnswer: "max_answer",
    sumIsOnTopic: "sum_isOnTopic",
    countIsOnTopic: "count_isOnTopic",
    avgIsOnTopic: "avg_isOnTopic",
    minIsOnTopic: "min_isOnTopic",
    maxIsOnTopic: "max_isOnTopic",
    sumIsClear: "sum_isClear",
    countIsClear: "count_isClear",
    avgIsClear: "avg_isClear",
    minIsClear: "min_isClear",
    maxIsClear: "max_isClear",
    sumIsDocumented: "sum_isDocumented",
    countIsDocumented: "count_isDocumented",
    avgIsDocumented: "avg_isDocumented",
    minIsDocumented: "min_isDocumented",
    maxIsDocumented: "max_isDocumented",
    sumIsFeatureSupported: "sum_isFeatureSupported",
    countIsFeatureSupported: "count_isFeatureSupported",
    avgIsFeatureSupported: "avg_isFeatureSupported",
    minIsFeatureSupported: "min_isFeatureSupported",
    maxIsFeatureSupported: "max_isFeatureSupported",
    sumIsAnswerConfident: "sum_isAnswerConfident",
    countIsAnswerConfident: "count_isAnswerConfident",
    avgIsAnswerConfident: "avg_isAnswerConfident",
    minIsAnswerConfident: "min_isAnswerConfident",
    maxIsAnswerConfident: "max_isAnswerConfident",
    sumGapSummary: "sum_gapSummary",
    countGapSummary: "count_gapSummary",
    avgGapSummary: "avg_gapSummary",
    minGapSummary: "min_gapSummary",
    maxGapSummary: "max_gapSummary",
    sumSubject: "sum_subject",
    countSubject: "count_subject",
    avgSubject: "avg_subject",
    minSubject: "min_subject",
    maxSubject: "max_subject",
    sumCategory: "sum_category",
    countCategory: "count_category",
    avgCategory: "avg_category",
    minCategory: "min_category",
    maxCategory: "max_category",
    sumLanguages: "sum_languages",
    countLanguages: "count_languages",
    avgLanguages: "avg_languages",
    minLanguages: "min_languages",
    maxLanguages: "max_languages",
    sumFirstPartyEntities: "sum_firstPartyEntities",
    countFirstPartyEntities: "count_firstPartyEntities",
    avgFirstPartyEntities: "avg_firstPartyEntities",
    minFirstPartyEntities: "min_firstPartyEntities",
    maxFirstPartyEntities: "max_firstPartyEntities",
    sumThirdPartyEntities: "sum_thirdPartyEntities",
    countThirdPartyEntities: "count_thirdPartyEntities",
    avgThirdPartyEntities: "avg_thirdPartyEntities",
    minThirdPartyEntities: "min_thirdPartyEntities",
    maxThirdPartyEntities: "max_thirdPartyEntities",
    sumEmotion: "sum_emotion",
    countEmotion: "count_emotion",
    avgEmotion: "avg_emotion",
    minEmotion: "min_emotion",
    maxEmotion: "max_emotion",
    sumSentiment: "sum_sentiment",
    countSentiment: "count_sentiment",
    avgSentiment: "avg_sentiment",
    minSentiment: "min_sentiment",
    maxSentiment: "max_sentiment",
    sumQuestionType: "sum_questionType",
    countQuestionType: "count_questionType",
    avgQuestionType: "avg_questionType",
    minQuestionType: "min_questionType",
    maxQuestionType: "max_questionType",
    sumProjectId: "sum_projectId",
    countProjectId: "count_projectId",
    avgProjectId: "avg_projectId",
    minProjectId: "min_projectId",
    maxProjectId: "max_projectId",
    sumIntegrationId: "sum_integrationId",
    countIntegrationId: "count_integrationId",
    avgIntegrationId: "avg_integrationId",
    minIntegrationId: "min_integrationId",
    maxIntegrationId: "max_integrationId",
    sumFirstMessageTime: "sum_firstMessageTime",
    countFirstMessageTime: "count_firstMessageTime",
    avgFirstMessageTime: "avg_firstMessageTime",
    minFirstMessageTime: "min_firstMessageTime",
    maxFirstMessageTime: "max_firstMessageTime",
    sumLastMessageTime: "sum_lastMessageTime",
    countLastMessageTime: "count_lastMessageTime",
    avgLastMessageTime: "avg_lastMessageTime",
    minLastMessageTime: "min_lastMessageTime",
    maxLastMessageTime: "max_lastMessageTime",
    sumLastUpdated: "sum_lastUpdated",
    countLastUpdated: "count_lastUpdated",
    avgLastUpdated: "avg_lastUpdated",
    minLastUpdated: "min_lastUpdated",
    maxLastUpdated: "max_lastUpdated",
    sumHasPositiveFeedback: "sum_hasPositiveFeedback",
    countHasPositiveFeedback: "count_hasPositiveFeedback",
    avgHasPositiveFeedback: "avg_hasPositiveFeedback",
    minHasPositiveFeedback: "min_hasPositiveFeedback",
    maxHasPositiveFeedback: "max_hasPositiveFeedback",
    sumHasNegativeFeedback: "sum_hasNegativeFeedback",
    countHasNegativeFeedback: "count_hasNegativeFeedback",
    avgHasNegativeFeedback: "avg_hasNegativeFeedback",
    minHasNegativeFeedback: "min_hasNegativeFeedback",
    maxHasNegativeFeedback: "max_hasNegativeFeedback",
    sumConversationIds: "sum_conversationIds",
    countConversationIds: "count_conversationIds",
    avgConversationIds: "avg_conversationIds",
    minConversationIds: "min_conversationIds",
    maxConversationIds: "max_conversationIds",
    sumAreAIAnnotationsVerified: "sum_areAIAnnotationsVerified",
    countAreAIAnnotationsVerified: "count_areAIAnnotationsVerified",
    avgAreAIAnnotationsVerified: "avg_areAIAnnotationsVerified",
    minAreAIAnnotationsVerified: "min_areAIAnnotationsVerified",
    maxAreAIAnnotationsVerified: "max_areAIAnnotationsVerified",
    sumIsInitialQuestionAnswer: "sum_isInitialQuestionAnswer",
    countIsInitialQuestionAnswer: "count_isInitialQuestionAnswer",
    avgIsInitialQuestionAnswer: "avg_isInitialQuestionAnswer",
    minIsInitialQuestionAnswer: "min_isInitialQuestionAnswer",
    maxIsInitialQuestionAnswer: "max_isInitialQuestionAnswer",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Result$ {
  /** @deprecated use `Result$inboundSchema` instead. */
  export const inboundSchema = Result$inboundSchema;
  /** @deprecated use `Result$outboundSchema` instead. */
  export const outboundSchema = Result$outboundSchema;
  /** @deprecated use `Result$Outbound` instead. */
  export type Outbound = Result$Outbound;
}

export function resultToJSON(result: Result): string {
  return JSON.stringify(Result$outboundSchema.parse(result));
}

export function resultFromJSON(
  jsonString: string,
): SafeParseResult<Result, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Result$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Result' from JSON`,
  );
}

/** @internal */
export const Data$inboundSchema: z.ZodType<Data, z.ZodTypeDef, unknown> = z
  .object({
    result: z.array(z.lazy(() => Result$inboundSchema)),
    total: z.number(),
    pageSize: z.number(),
    count: z.number(),
  });

/** @internal */
export type Data$Outbound = {
  result: Array<Result$Outbound>;
  total: number;
  pageSize: number;
  count: number;
};

/** @internal */
export const Data$outboundSchema: z.ZodType<Data$Outbound, z.ZodTypeDef, Data> =
  z.object({
    result: z.array(z.lazy(() => Result$outboundSchema)),
    total: z.number(),
    pageSize: z.number(),
    count: z.number(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Data$ {
  /** @deprecated use `Data$inboundSchema` instead. */
  export const inboundSchema = Data$inboundSchema;
  /** @deprecated use `Data$outboundSchema` instead. */
  export const outboundSchema = Data$outboundSchema;
  /** @deprecated use `Data$Outbound` instead. */
  export type Outbound = Data$Outbound;
}

export function dataToJSON(data: Data): string {
  return JSON.stringify(Data$outboundSchema.parse(data));
}

export function dataFromJSON(
  jsonString: string,
): SafeParseResult<Data, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Data$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Data' from JSON`,
  );
}

/** @internal */
export const QueryTableResponseBody$inboundSchema: z.ZodType<
  QueryTableResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: Status$inboundSchema,
  data: z.lazy(() => Data$inboundSchema),
});

/** @internal */
export type QueryTableResponseBody$Outbound = {
  status: string;
  data: Data$Outbound;
};

/** @internal */
export const QueryTableResponseBody$outboundSchema: z.ZodType<
  QueryTableResponseBody$Outbound,
  z.ZodTypeDef,
  QueryTableResponseBody
> = z.object({
  status: Status$outboundSchema,
  data: z.lazy(() => Data$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryTableResponseBody$ {
  /** @deprecated use `QueryTableResponseBody$inboundSchema` instead. */
  export const inboundSchema = QueryTableResponseBody$inboundSchema;
  /** @deprecated use `QueryTableResponseBody$outboundSchema` instead. */
  export const outboundSchema = QueryTableResponseBody$outboundSchema;
  /** @deprecated use `QueryTableResponseBody$Outbound` instead. */
  export type Outbound = QueryTableResponseBody$Outbound;
}

export function queryTableResponseBodyToJSON(
  queryTableResponseBody: QueryTableResponseBody,
): string {
  return JSON.stringify(
    QueryTableResponseBody$outboundSchema.parse(queryTableResponseBody),
  );
}

export function queryTableResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<QueryTableResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => QueryTableResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'QueryTableResponseBody' from JSON`,
  );
}
