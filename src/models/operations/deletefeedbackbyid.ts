/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteFeedbackByIdRequest = {
  id: string;
};

/**
 * Feedback deleted successfully
 */
export type DeleteFeedbackByIdResponseBody = {
  success: boolean;
  message: string;
};

/** @internal */
export const DeleteFeedbackByIdRequest$inboundSchema: z.ZodType<
  DeleteFeedbackByIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteFeedbackByIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const DeleteFeedbackByIdRequest$outboundSchema: z.ZodType<
  DeleteFeedbackByIdRequest$Outbound,
  z.ZodTypeDef,
  DeleteFeedbackByIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteFeedbackByIdRequest$ {
  /** @deprecated use `DeleteFeedbackByIdRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteFeedbackByIdRequest$inboundSchema;
  /** @deprecated use `DeleteFeedbackByIdRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteFeedbackByIdRequest$outboundSchema;
  /** @deprecated use `DeleteFeedbackByIdRequest$Outbound` instead. */
  export type Outbound = DeleteFeedbackByIdRequest$Outbound;
}

export function deleteFeedbackByIdRequestToJSON(
  deleteFeedbackByIdRequest: DeleteFeedbackByIdRequest,
): string {
  return JSON.stringify(
    DeleteFeedbackByIdRequest$outboundSchema.parse(deleteFeedbackByIdRequest),
  );
}

export function deleteFeedbackByIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteFeedbackByIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteFeedbackByIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteFeedbackByIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteFeedbackByIdResponseBody$inboundSchema: z.ZodType<
  DeleteFeedbackByIdResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  success: z.boolean(),
  message: z.string(),
});

/** @internal */
export type DeleteFeedbackByIdResponseBody$Outbound = {
  success: boolean;
  message: string;
};

/** @internal */
export const DeleteFeedbackByIdResponseBody$outboundSchema: z.ZodType<
  DeleteFeedbackByIdResponseBody$Outbound,
  z.ZodTypeDef,
  DeleteFeedbackByIdResponseBody
> = z.object({
  success: z.boolean(),
  message: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteFeedbackByIdResponseBody$ {
  /** @deprecated use `DeleteFeedbackByIdResponseBody$inboundSchema` instead. */
  export const inboundSchema = DeleteFeedbackByIdResponseBody$inboundSchema;
  /** @deprecated use `DeleteFeedbackByIdResponseBody$outboundSchema` instead. */
  export const outboundSchema = DeleteFeedbackByIdResponseBody$outboundSchema;
  /** @deprecated use `DeleteFeedbackByIdResponseBody$Outbound` instead. */
  export type Outbound = DeleteFeedbackByIdResponseBody$Outbound;
}

export function deleteFeedbackByIdResponseBodyToJSON(
  deleteFeedbackByIdResponseBody: DeleteFeedbackByIdResponseBody,
): string {
  return JSON.stringify(
    DeleteFeedbackByIdResponseBody$outboundSchema.parse(
      deleteFeedbackByIdResponseBody,
    ),
  );
}

export function deleteFeedbackByIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<DeleteFeedbackByIdResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteFeedbackByIdResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteFeedbackByIdResponseBody' from JSON`,
  );
}
