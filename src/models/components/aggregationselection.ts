/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const AggregationSelectionType = {
  Aggregation: "aggregation",
} as const;
export type AggregationSelectionType = ClosedEnum<
  typeof AggregationSelectionType
>;

export const Aggregation5 = {
  Max: "max",
} as const;
export type Aggregation5 = ClosedEnum<typeof Aggregation5>;

export const Aggregation4 = {
  Min: "min",
} as const;
export type Aggregation4 = ClosedEnum<typeof Aggregation4>;

export const Aggregation3 = {
  Avg: "avg",
} as const;
export type Aggregation3 = ClosedEnum<typeof Aggregation3>;

export const Aggregation2 = {
  Count: "count",
} as const;
export type Aggregation2 = ClosedEnum<typeof Aggregation2>;

export const Aggregation1 = {
  Sum: "sum",
} as const;
export type Aggregation1 = ClosedEnum<typeof Aggregation1>;

export type AggregationSelectionAggregation =
  | Aggregation1
  | Aggregation2
  | Aggregation3
  | Aggregation4
  | Aggregation5;

export const ThirtyOne = {
  IsInitialQuestionAnswer: "isInitialQuestionAnswer",
} as const;
export type ThirtyOne = ClosedEnum<typeof ThirtyOne>;

export const Thirty = {
  AreAIAnnotationsVerified: "areAIAnnotationsVerified",
} as const;
export type Thirty = ClosedEnum<typeof Thirty>;

export const TwentyNine = {
  ConversationIds: "conversationIds",
} as const;
export type TwentyNine = ClosedEnum<typeof TwentyNine>;

export const TwentyEight = {
  HasNegativeFeedback: "hasNegativeFeedback",
} as const;
export type TwentyEight = ClosedEnum<typeof TwentyEight>;

export const TwentySeven = {
  HasPositiveFeedback: "hasPositiveFeedback",
} as const;
export type TwentySeven = ClosedEnum<typeof TwentySeven>;

export const TwentySix = {
  LastUpdated: "lastUpdated",
} as const;
export type TwentySix = ClosedEnum<typeof TwentySix>;

export const TwentyFive = {
  LastMessageTime: "lastMessageTime",
} as const;
export type TwentyFive = ClosedEnum<typeof TwentyFive>;

export const TwentyFour = {
  FirstMessageTime: "firstMessageTime",
} as const;
export type TwentyFour = ClosedEnum<typeof TwentyFour>;

export const TwentyThree = {
  IntegrationId: "integrationId",
} as const;
export type TwentyThree = ClosedEnum<typeof TwentyThree>;

export const TwentyTwo = {
  ProjectId: "projectId",
} as const;
export type TwentyTwo = ClosedEnum<typeof TwentyTwo>;

export const TwentyOne = {
  QuestionType: "questionType",
} as const;
export type TwentyOne = ClosedEnum<typeof TwentyOne>;

export const Twenty = {
  Sentiment: "sentiment",
} as const;
export type Twenty = ClosedEnum<typeof Twenty>;

export const Nineteen = {
  Emotion: "emotion",
} as const;
export type Nineteen = ClosedEnum<typeof Nineteen>;

export const Eighteen = {
  ThirdPartyEntities: "thirdPartyEntities",
} as const;
export type Eighteen = ClosedEnum<typeof Eighteen>;

export const Seventeen = {
  FirstPartyEntities: "firstPartyEntities",
} as const;
export type Seventeen = ClosedEnum<typeof Seventeen>;

export const Sixteen = {
  Languages: "languages",
} as const;
export type Sixteen = ClosedEnum<typeof Sixteen>;

export const Fifteen = {
  Category: "category",
} as const;
export type Fifteen = ClosedEnum<typeof Fifteen>;

export const Fourteen = {
  Subject: "subject",
} as const;
export type Fourteen = ClosedEnum<typeof Fourteen>;

export const Thirteen = {
  GapSummary: "gapSummary",
} as const;
export type Thirteen = ClosedEnum<typeof Thirteen>;

export const Twelve = {
  IsAnswerConfident: "isAnswerConfident",
} as const;
export type Twelve = ClosedEnum<typeof Twelve>;

export const Eleven = {
  IsFeatureSupported: "isFeatureSupported",
} as const;
export type Eleven = ClosedEnum<typeof Eleven>;

export const Ten = {
  IsDocumented: "isDocumented",
} as const;
export type Ten = ClosedEnum<typeof Ten>;

export const Nine = {
  IsClear: "isClear",
} as const;
export type Nine = ClosedEnum<typeof Nine>;

export const Eight = {
  IsOnTopic: "isOnTopic",
} as const;
export type Eight = ClosedEnum<typeof Eight>;

export const AggregationSelectionField7 = {
  Answer: "answer",
} as const;
export type AggregationSelectionField7 = ClosedEnum<
  typeof AggregationSelectionField7
>;

export const AggregationSelectionField6 = {
  QuestionLength: "questionLength",
} as const;
export type AggregationSelectionField6 = ClosedEnum<
  typeof AggregationSelectionField6
>;

export const AggregationSelectionField5 = {
  Question: "question",
} as const;
export type AggregationSelectionField5 = ClosedEnum<
  typeof AggregationSelectionField5
>;

export const AggregationSelectionField4 = {
  OrganizationId: "organizationId",
} as const;
export type AggregationSelectionField4 = ClosedEnum<
  typeof AggregationSelectionField4
>;

export const AggregationSelectionField3 = {
  MessagesCount: "messagesCount",
} as const;
export type AggregationSelectionField3 = ClosedEnum<
  typeof AggregationSelectionField3
>;

export const AggregationSelectionField2 = {
  MessageIds: "messageIds",
} as const;
export type AggregationSelectionField2 = ClosedEnum<
  typeof AggregationSelectionField2
>;

export const AggregationSelectionField1 = {
  Id: "id",
} as const;
export type AggregationSelectionField1 = ClosedEnum<
  typeof AggregationSelectionField1
>;

export type AggregationSelectionField =
  | AggregationSelectionField1
  | AggregationSelectionField2
  | AggregationSelectionField3
  | AggregationSelectionField4
  | AggregationSelectionField5
  | AggregationSelectionField6
  | AggregationSelectionField7
  | Eight
  | Nine
  | Ten
  | Eleven
  | Twelve
  | Thirteen
  | Fourteen
  | Fifteen
  | Sixteen
  | Seventeen
  | Eighteen
  | Nineteen
  | Twenty
  | TwentyOne
  | TwentyTwo
  | TwentyThree
  | TwentyFour
  | TwentyFive
  | TwentySix
  | TwentySeven
  | TwentyEight
  | TwentyNine
  | Thirty
  | ThirtyOne;

export type AggregationSelection = {
  type: AggregationSelectionType;
  aggregation:
    | Aggregation1
    | Aggregation2
    | Aggregation3
    | Aggregation4
    | Aggregation5;
  field?:
    | AggregationSelectionField1
    | AggregationSelectionField2
    | AggregationSelectionField3
    | AggregationSelectionField4
    | AggregationSelectionField5
    | AggregationSelectionField6
    | AggregationSelectionField7
    | Eight
    | Nine
    | Ten
    | Eleven
    | Twelve
    | Thirteen
    | Fourteen
    | Fifteen
    | Sixteen
    | Seventeen
    | Eighteen
    | Nineteen
    | Twenty
    | TwentyOne
    | TwentyTwo
    | TwentyThree
    | TwentyFour
    | TwentyFive
    | TwentySix
    | TwentySeven
    | TwentyEight
    | TwentyNine
    | Thirty
    | ThirtyOne
    | undefined;
};

/** @internal */
export const AggregationSelectionType$inboundSchema: z.ZodNativeEnum<
  typeof AggregationSelectionType
> = z.nativeEnum(AggregationSelectionType);

/** @internal */
export const AggregationSelectionType$outboundSchema: z.ZodNativeEnum<
  typeof AggregationSelectionType
> = AggregationSelectionType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AggregationSelectionType$ {
  /** @deprecated use `AggregationSelectionType$inboundSchema` instead. */
  export const inboundSchema = AggregationSelectionType$inboundSchema;
  /** @deprecated use `AggregationSelectionType$outboundSchema` instead. */
  export const outboundSchema = AggregationSelectionType$outboundSchema;
}

/** @internal */
export const Aggregation5$inboundSchema: z.ZodNativeEnum<typeof Aggregation5> =
  z.nativeEnum(Aggregation5);

/** @internal */
export const Aggregation5$outboundSchema: z.ZodNativeEnum<typeof Aggregation5> =
  Aggregation5$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Aggregation5$ {
  /** @deprecated use `Aggregation5$inboundSchema` instead. */
  export const inboundSchema = Aggregation5$inboundSchema;
  /** @deprecated use `Aggregation5$outboundSchema` instead. */
  export const outboundSchema = Aggregation5$outboundSchema;
}

/** @internal */
export const Aggregation4$inboundSchema: z.ZodNativeEnum<typeof Aggregation4> =
  z.nativeEnum(Aggregation4);

/** @internal */
export const Aggregation4$outboundSchema: z.ZodNativeEnum<typeof Aggregation4> =
  Aggregation4$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Aggregation4$ {
  /** @deprecated use `Aggregation4$inboundSchema` instead. */
  export const inboundSchema = Aggregation4$inboundSchema;
  /** @deprecated use `Aggregation4$outboundSchema` instead. */
  export const outboundSchema = Aggregation4$outboundSchema;
}

/** @internal */
export const Aggregation3$inboundSchema: z.ZodNativeEnum<typeof Aggregation3> =
  z.nativeEnum(Aggregation3);

/** @internal */
export const Aggregation3$outboundSchema: z.ZodNativeEnum<typeof Aggregation3> =
  Aggregation3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Aggregation3$ {
  /** @deprecated use `Aggregation3$inboundSchema` instead. */
  export const inboundSchema = Aggregation3$inboundSchema;
  /** @deprecated use `Aggregation3$outboundSchema` instead. */
  export const outboundSchema = Aggregation3$outboundSchema;
}

/** @internal */
export const Aggregation2$inboundSchema: z.ZodNativeEnum<typeof Aggregation2> =
  z.nativeEnum(Aggregation2);

/** @internal */
export const Aggregation2$outboundSchema: z.ZodNativeEnum<typeof Aggregation2> =
  Aggregation2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Aggregation2$ {
  /** @deprecated use `Aggregation2$inboundSchema` instead. */
  export const inboundSchema = Aggregation2$inboundSchema;
  /** @deprecated use `Aggregation2$outboundSchema` instead. */
  export const outboundSchema = Aggregation2$outboundSchema;
}

/** @internal */
export const Aggregation1$inboundSchema: z.ZodNativeEnum<typeof Aggregation1> =
  z.nativeEnum(Aggregation1);

/** @internal */
export const Aggregation1$outboundSchema: z.ZodNativeEnum<typeof Aggregation1> =
  Aggregation1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Aggregation1$ {
  /** @deprecated use `Aggregation1$inboundSchema` instead. */
  export const inboundSchema = Aggregation1$inboundSchema;
  /** @deprecated use `Aggregation1$outboundSchema` instead. */
  export const outboundSchema = Aggregation1$outboundSchema;
}

/** @internal */
export const AggregationSelectionAggregation$inboundSchema: z.ZodType<
  AggregationSelectionAggregation,
  z.ZodTypeDef,
  unknown
> = z.union([
  Aggregation1$inboundSchema,
  Aggregation2$inboundSchema,
  Aggregation3$inboundSchema,
  Aggregation4$inboundSchema,
  Aggregation5$inboundSchema,
]);

/** @internal */
export type AggregationSelectionAggregation$Outbound =
  | string
  | string
  | string
  | string
  | string;

/** @internal */
export const AggregationSelectionAggregation$outboundSchema: z.ZodType<
  AggregationSelectionAggregation$Outbound,
  z.ZodTypeDef,
  AggregationSelectionAggregation
> = z.union([
  Aggregation1$outboundSchema,
  Aggregation2$outboundSchema,
  Aggregation3$outboundSchema,
  Aggregation4$outboundSchema,
  Aggregation5$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AggregationSelectionAggregation$ {
  /** @deprecated use `AggregationSelectionAggregation$inboundSchema` instead. */
  export const inboundSchema = AggregationSelectionAggregation$inboundSchema;
  /** @deprecated use `AggregationSelectionAggregation$outboundSchema` instead. */
  export const outboundSchema = AggregationSelectionAggregation$outboundSchema;
  /** @deprecated use `AggregationSelectionAggregation$Outbound` instead. */
  export type Outbound = AggregationSelectionAggregation$Outbound;
}

export function aggregationSelectionAggregationToJSON(
  aggregationSelectionAggregation: AggregationSelectionAggregation,
): string {
  return JSON.stringify(
    AggregationSelectionAggregation$outboundSchema.parse(
      aggregationSelectionAggregation,
    ),
  );
}

export function aggregationSelectionAggregationFromJSON(
  jsonString: string,
): SafeParseResult<AggregationSelectionAggregation, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AggregationSelectionAggregation$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AggregationSelectionAggregation' from JSON`,
  );
}

/** @internal */
export const ThirtyOne$inboundSchema: z.ZodNativeEnum<typeof ThirtyOne> = z
  .nativeEnum(ThirtyOne);

/** @internal */
export const ThirtyOne$outboundSchema: z.ZodNativeEnum<typeof ThirtyOne> =
  ThirtyOne$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ThirtyOne$ {
  /** @deprecated use `ThirtyOne$inboundSchema` instead. */
  export const inboundSchema = ThirtyOne$inboundSchema;
  /** @deprecated use `ThirtyOne$outboundSchema` instead. */
  export const outboundSchema = ThirtyOne$outboundSchema;
}

/** @internal */
export const Thirty$inboundSchema: z.ZodNativeEnum<typeof Thirty> = z
  .nativeEnum(Thirty);

/** @internal */
export const Thirty$outboundSchema: z.ZodNativeEnum<typeof Thirty> =
  Thirty$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Thirty$ {
  /** @deprecated use `Thirty$inboundSchema` instead. */
  export const inboundSchema = Thirty$inboundSchema;
  /** @deprecated use `Thirty$outboundSchema` instead. */
  export const outboundSchema = Thirty$outboundSchema;
}

/** @internal */
export const TwentyNine$inboundSchema: z.ZodNativeEnum<typeof TwentyNine> = z
  .nativeEnum(TwentyNine);

/** @internal */
export const TwentyNine$outboundSchema: z.ZodNativeEnum<typeof TwentyNine> =
  TwentyNine$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwentyNine$ {
  /** @deprecated use `TwentyNine$inboundSchema` instead. */
  export const inboundSchema = TwentyNine$inboundSchema;
  /** @deprecated use `TwentyNine$outboundSchema` instead. */
  export const outboundSchema = TwentyNine$outboundSchema;
}

/** @internal */
export const TwentyEight$inboundSchema: z.ZodNativeEnum<typeof TwentyEight> = z
  .nativeEnum(TwentyEight);

/** @internal */
export const TwentyEight$outboundSchema: z.ZodNativeEnum<typeof TwentyEight> =
  TwentyEight$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwentyEight$ {
  /** @deprecated use `TwentyEight$inboundSchema` instead. */
  export const inboundSchema = TwentyEight$inboundSchema;
  /** @deprecated use `TwentyEight$outboundSchema` instead. */
  export const outboundSchema = TwentyEight$outboundSchema;
}

/** @internal */
export const TwentySeven$inboundSchema: z.ZodNativeEnum<typeof TwentySeven> = z
  .nativeEnum(TwentySeven);

/** @internal */
export const TwentySeven$outboundSchema: z.ZodNativeEnum<typeof TwentySeven> =
  TwentySeven$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwentySeven$ {
  /** @deprecated use `TwentySeven$inboundSchema` instead. */
  export const inboundSchema = TwentySeven$inboundSchema;
  /** @deprecated use `TwentySeven$outboundSchema` instead. */
  export const outboundSchema = TwentySeven$outboundSchema;
}

/** @internal */
export const TwentySix$inboundSchema: z.ZodNativeEnum<typeof TwentySix> = z
  .nativeEnum(TwentySix);

/** @internal */
export const TwentySix$outboundSchema: z.ZodNativeEnum<typeof TwentySix> =
  TwentySix$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwentySix$ {
  /** @deprecated use `TwentySix$inboundSchema` instead. */
  export const inboundSchema = TwentySix$inboundSchema;
  /** @deprecated use `TwentySix$outboundSchema` instead. */
  export const outboundSchema = TwentySix$outboundSchema;
}

/** @internal */
export const TwentyFive$inboundSchema: z.ZodNativeEnum<typeof TwentyFive> = z
  .nativeEnum(TwentyFive);

/** @internal */
export const TwentyFive$outboundSchema: z.ZodNativeEnum<typeof TwentyFive> =
  TwentyFive$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwentyFive$ {
  /** @deprecated use `TwentyFive$inboundSchema` instead. */
  export const inboundSchema = TwentyFive$inboundSchema;
  /** @deprecated use `TwentyFive$outboundSchema` instead. */
  export const outboundSchema = TwentyFive$outboundSchema;
}

/** @internal */
export const TwentyFour$inboundSchema: z.ZodNativeEnum<typeof TwentyFour> = z
  .nativeEnum(TwentyFour);

/** @internal */
export const TwentyFour$outboundSchema: z.ZodNativeEnum<typeof TwentyFour> =
  TwentyFour$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwentyFour$ {
  /** @deprecated use `TwentyFour$inboundSchema` instead. */
  export const inboundSchema = TwentyFour$inboundSchema;
  /** @deprecated use `TwentyFour$outboundSchema` instead. */
  export const outboundSchema = TwentyFour$outboundSchema;
}

/** @internal */
export const TwentyThree$inboundSchema: z.ZodNativeEnum<typeof TwentyThree> = z
  .nativeEnum(TwentyThree);

/** @internal */
export const TwentyThree$outboundSchema: z.ZodNativeEnum<typeof TwentyThree> =
  TwentyThree$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwentyThree$ {
  /** @deprecated use `TwentyThree$inboundSchema` instead. */
  export const inboundSchema = TwentyThree$inboundSchema;
  /** @deprecated use `TwentyThree$outboundSchema` instead. */
  export const outboundSchema = TwentyThree$outboundSchema;
}

/** @internal */
export const TwentyTwo$inboundSchema: z.ZodNativeEnum<typeof TwentyTwo> = z
  .nativeEnum(TwentyTwo);

/** @internal */
export const TwentyTwo$outboundSchema: z.ZodNativeEnum<typeof TwentyTwo> =
  TwentyTwo$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwentyTwo$ {
  /** @deprecated use `TwentyTwo$inboundSchema` instead. */
  export const inboundSchema = TwentyTwo$inboundSchema;
  /** @deprecated use `TwentyTwo$outboundSchema` instead. */
  export const outboundSchema = TwentyTwo$outboundSchema;
}

/** @internal */
export const TwentyOne$inboundSchema: z.ZodNativeEnum<typeof TwentyOne> = z
  .nativeEnum(TwentyOne);

/** @internal */
export const TwentyOne$outboundSchema: z.ZodNativeEnum<typeof TwentyOne> =
  TwentyOne$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwentyOne$ {
  /** @deprecated use `TwentyOne$inboundSchema` instead. */
  export const inboundSchema = TwentyOne$inboundSchema;
  /** @deprecated use `TwentyOne$outboundSchema` instead. */
  export const outboundSchema = TwentyOne$outboundSchema;
}

/** @internal */
export const Twenty$inboundSchema: z.ZodNativeEnum<typeof Twenty> = z
  .nativeEnum(Twenty);

/** @internal */
export const Twenty$outboundSchema: z.ZodNativeEnum<typeof Twenty> =
  Twenty$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Twenty$ {
  /** @deprecated use `Twenty$inboundSchema` instead. */
  export const inboundSchema = Twenty$inboundSchema;
  /** @deprecated use `Twenty$outboundSchema` instead. */
  export const outboundSchema = Twenty$outboundSchema;
}

/** @internal */
export const Nineteen$inboundSchema: z.ZodNativeEnum<typeof Nineteen> = z
  .nativeEnum(Nineteen);

/** @internal */
export const Nineteen$outboundSchema: z.ZodNativeEnum<typeof Nineteen> =
  Nineteen$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Nineteen$ {
  /** @deprecated use `Nineteen$inboundSchema` instead. */
  export const inboundSchema = Nineteen$inboundSchema;
  /** @deprecated use `Nineteen$outboundSchema` instead. */
  export const outboundSchema = Nineteen$outboundSchema;
}

/** @internal */
export const Eighteen$inboundSchema: z.ZodNativeEnum<typeof Eighteen> = z
  .nativeEnum(Eighteen);

/** @internal */
export const Eighteen$outboundSchema: z.ZodNativeEnum<typeof Eighteen> =
  Eighteen$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Eighteen$ {
  /** @deprecated use `Eighteen$inboundSchema` instead. */
  export const inboundSchema = Eighteen$inboundSchema;
  /** @deprecated use `Eighteen$outboundSchema` instead. */
  export const outboundSchema = Eighteen$outboundSchema;
}

/** @internal */
export const Seventeen$inboundSchema: z.ZodNativeEnum<typeof Seventeen> = z
  .nativeEnum(Seventeen);

/** @internal */
export const Seventeen$outboundSchema: z.ZodNativeEnum<typeof Seventeen> =
  Seventeen$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Seventeen$ {
  /** @deprecated use `Seventeen$inboundSchema` instead. */
  export const inboundSchema = Seventeen$inboundSchema;
  /** @deprecated use `Seventeen$outboundSchema` instead. */
  export const outboundSchema = Seventeen$outboundSchema;
}

/** @internal */
export const Sixteen$inboundSchema: z.ZodNativeEnum<typeof Sixteen> = z
  .nativeEnum(Sixteen);

/** @internal */
export const Sixteen$outboundSchema: z.ZodNativeEnum<typeof Sixteen> =
  Sixteen$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Sixteen$ {
  /** @deprecated use `Sixteen$inboundSchema` instead. */
  export const inboundSchema = Sixteen$inboundSchema;
  /** @deprecated use `Sixteen$outboundSchema` instead. */
  export const outboundSchema = Sixteen$outboundSchema;
}

/** @internal */
export const Fifteen$inboundSchema: z.ZodNativeEnum<typeof Fifteen> = z
  .nativeEnum(Fifteen);

/** @internal */
export const Fifteen$outboundSchema: z.ZodNativeEnum<typeof Fifteen> =
  Fifteen$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Fifteen$ {
  /** @deprecated use `Fifteen$inboundSchema` instead. */
  export const inboundSchema = Fifteen$inboundSchema;
  /** @deprecated use `Fifteen$outboundSchema` instead. */
  export const outboundSchema = Fifteen$outboundSchema;
}

/** @internal */
export const Fourteen$inboundSchema: z.ZodNativeEnum<typeof Fourteen> = z
  .nativeEnum(Fourteen);

/** @internal */
export const Fourteen$outboundSchema: z.ZodNativeEnum<typeof Fourteen> =
  Fourteen$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Fourteen$ {
  /** @deprecated use `Fourteen$inboundSchema` instead. */
  export const inboundSchema = Fourteen$inboundSchema;
  /** @deprecated use `Fourteen$outboundSchema` instead. */
  export const outboundSchema = Fourteen$outboundSchema;
}

/** @internal */
export const Thirteen$inboundSchema: z.ZodNativeEnum<typeof Thirteen> = z
  .nativeEnum(Thirteen);

/** @internal */
export const Thirteen$outboundSchema: z.ZodNativeEnum<typeof Thirteen> =
  Thirteen$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Thirteen$ {
  /** @deprecated use `Thirteen$inboundSchema` instead. */
  export const inboundSchema = Thirteen$inboundSchema;
  /** @deprecated use `Thirteen$outboundSchema` instead. */
  export const outboundSchema = Thirteen$outboundSchema;
}

/** @internal */
export const Twelve$inboundSchema: z.ZodNativeEnum<typeof Twelve> = z
  .nativeEnum(Twelve);

/** @internal */
export const Twelve$outboundSchema: z.ZodNativeEnum<typeof Twelve> =
  Twelve$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Twelve$ {
  /** @deprecated use `Twelve$inboundSchema` instead. */
  export const inboundSchema = Twelve$inboundSchema;
  /** @deprecated use `Twelve$outboundSchema` instead. */
  export const outboundSchema = Twelve$outboundSchema;
}

/** @internal */
export const Eleven$inboundSchema: z.ZodNativeEnum<typeof Eleven> = z
  .nativeEnum(Eleven);

/** @internal */
export const Eleven$outboundSchema: z.ZodNativeEnum<typeof Eleven> =
  Eleven$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Eleven$ {
  /** @deprecated use `Eleven$inboundSchema` instead. */
  export const inboundSchema = Eleven$inboundSchema;
  /** @deprecated use `Eleven$outboundSchema` instead. */
  export const outboundSchema = Eleven$outboundSchema;
}

/** @internal */
export const Ten$inboundSchema: z.ZodNativeEnum<typeof Ten> = z.nativeEnum(Ten);

/** @internal */
export const Ten$outboundSchema: z.ZodNativeEnum<typeof Ten> =
  Ten$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Ten$ {
  /** @deprecated use `Ten$inboundSchema` instead. */
  export const inboundSchema = Ten$inboundSchema;
  /** @deprecated use `Ten$outboundSchema` instead. */
  export const outboundSchema = Ten$outboundSchema;
}

/** @internal */
export const Nine$inboundSchema: z.ZodNativeEnum<typeof Nine> = z.nativeEnum(
  Nine,
);

/** @internal */
export const Nine$outboundSchema: z.ZodNativeEnum<typeof Nine> =
  Nine$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Nine$ {
  /** @deprecated use `Nine$inboundSchema` instead. */
  export const inboundSchema = Nine$inboundSchema;
  /** @deprecated use `Nine$outboundSchema` instead. */
  export const outboundSchema = Nine$outboundSchema;
}

/** @internal */
export const Eight$inboundSchema: z.ZodNativeEnum<typeof Eight> = z.nativeEnum(
  Eight,
);

/** @internal */
export const Eight$outboundSchema: z.ZodNativeEnum<typeof Eight> =
  Eight$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Eight$ {
  /** @deprecated use `Eight$inboundSchema` instead. */
  export const inboundSchema = Eight$inboundSchema;
  /** @deprecated use `Eight$outboundSchema` instead. */
  export const outboundSchema = Eight$outboundSchema;
}

/** @internal */
export const AggregationSelectionField7$inboundSchema: z.ZodNativeEnum<
  typeof AggregationSelectionField7
> = z.nativeEnum(AggregationSelectionField7);

/** @internal */
export const AggregationSelectionField7$outboundSchema: z.ZodNativeEnum<
  typeof AggregationSelectionField7
> = AggregationSelectionField7$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AggregationSelectionField7$ {
  /** @deprecated use `AggregationSelectionField7$inboundSchema` instead. */
  export const inboundSchema = AggregationSelectionField7$inboundSchema;
  /** @deprecated use `AggregationSelectionField7$outboundSchema` instead. */
  export const outboundSchema = AggregationSelectionField7$outboundSchema;
}

/** @internal */
export const AggregationSelectionField6$inboundSchema: z.ZodNativeEnum<
  typeof AggregationSelectionField6
> = z.nativeEnum(AggregationSelectionField6);

/** @internal */
export const AggregationSelectionField6$outboundSchema: z.ZodNativeEnum<
  typeof AggregationSelectionField6
> = AggregationSelectionField6$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AggregationSelectionField6$ {
  /** @deprecated use `AggregationSelectionField6$inboundSchema` instead. */
  export const inboundSchema = AggregationSelectionField6$inboundSchema;
  /** @deprecated use `AggregationSelectionField6$outboundSchema` instead. */
  export const outboundSchema = AggregationSelectionField6$outboundSchema;
}

/** @internal */
export const AggregationSelectionField5$inboundSchema: z.ZodNativeEnum<
  typeof AggregationSelectionField5
> = z.nativeEnum(AggregationSelectionField5);

/** @internal */
export const AggregationSelectionField5$outboundSchema: z.ZodNativeEnum<
  typeof AggregationSelectionField5
> = AggregationSelectionField5$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AggregationSelectionField5$ {
  /** @deprecated use `AggregationSelectionField5$inboundSchema` instead. */
  export const inboundSchema = AggregationSelectionField5$inboundSchema;
  /** @deprecated use `AggregationSelectionField5$outboundSchema` instead. */
  export const outboundSchema = AggregationSelectionField5$outboundSchema;
}

/** @internal */
export const AggregationSelectionField4$inboundSchema: z.ZodNativeEnum<
  typeof AggregationSelectionField4
> = z.nativeEnum(AggregationSelectionField4);

/** @internal */
export const AggregationSelectionField4$outboundSchema: z.ZodNativeEnum<
  typeof AggregationSelectionField4
> = AggregationSelectionField4$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AggregationSelectionField4$ {
  /** @deprecated use `AggregationSelectionField4$inboundSchema` instead. */
  export const inboundSchema = AggregationSelectionField4$inboundSchema;
  /** @deprecated use `AggregationSelectionField4$outboundSchema` instead. */
  export const outboundSchema = AggregationSelectionField4$outboundSchema;
}

/** @internal */
export const AggregationSelectionField3$inboundSchema: z.ZodNativeEnum<
  typeof AggregationSelectionField3
> = z.nativeEnum(AggregationSelectionField3);

/** @internal */
export const AggregationSelectionField3$outboundSchema: z.ZodNativeEnum<
  typeof AggregationSelectionField3
> = AggregationSelectionField3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AggregationSelectionField3$ {
  /** @deprecated use `AggregationSelectionField3$inboundSchema` instead. */
  export const inboundSchema = AggregationSelectionField3$inboundSchema;
  /** @deprecated use `AggregationSelectionField3$outboundSchema` instead. */
  export const outboundSchema = AggregationSelectionField3$outboundSchema;
}

/** @internal */
export const AggregationSelectionField2$inboundSchema: z.ZodNativeEnum<
  typeof AggregationSelectionField2
> = z.nativeEnum(AggregationSelectionField2);

/** @internal */
export const AggregationSelectionField2$outboundSchema: z.ZodNativeEnum<
  typeof AggregationSelectionField2
> = AggregationSelectionField2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AggregationSelectionField2$ {
  /** @deprecated use `AggregationSelectionField2$inboundSchema` instead. */
  export const inboundSchema = AggregationSelectionField2$inboundSchema;
  /** @deprecated use `AggregationSelectionField2$outboundSchema` instead. */
  export const outboundSchema = AggregationSelectionField2$outboundSchema;
}

/** @internal */
export const AggregationSelectionField1$inboundSchema: z.ZodNativeEnum<
  typeof AggregationSelectionField1
> = z.nativeEnum(AggregationSelectionField1);

/** @internal */
export const AggregationSelectionField1$outboundSchema: z.ZodNativeEnum<
  typeof AggregationSelectionField1
> = AggregationSelectionField1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AggregationSelectionField1$ {
  /** @deprecated use `AggregationSelectionField1$inboundSchema` instead. */
  export const inboundSchema = AggregationSelectionField1$inboundSchema;
  /** @deprecated use `AggregationSelectionField1$outboundSchema` instead. */
  export const outboundSchema = AggregationSelectionField1$outboundSchema;
}

/** @internal */
export const AggregationSelectionField$inboundSchema: z.ZodType<
  AggregationSelectionField,
  z.ZodTypeDef,
  unknown
> = z.union([
  AggregationSelectionField1$inboundSchema,
  AggregationSelectionField2$inboundSchema,
  AggregationSelectionField3$inboundSchema,
  AggregationSelectionField4$inboundSchema,
  AggregationSelectionField5$inboundSchema,
  AggregationSelectionField6$inboundSchema,
  AggregationSelectionField7$inboundSchema,
  Eight$inboundSchema,
  Nine$inboundSchema,
  Ten$inboundSchema,
  Eleven$inboundSchema,
  Twelve$inboundSchema,
  Thirteen$inboundSchema,
  Fourteen$inboundSchema,
  Fifteen$inboundSchema,
  Sixteen$inboundSchema,
  Seventeen$inboundSchema,
  Eighteen$inboundSchema,
  Nineteen$inboundSchema,
  Twenty$inboundSchema,
  TwentyOne$inboundSchema,
  TwentyTwo$inboundSchema,
  TwentyThree$inboundSchema,
  TwentyFour$inboundSchema,
  TwentyFive$inboundSchema,
  TwentySix$inboundSchema,
  TwentySeven$inboundSchema,
  TwentyEight$inboundSchema,
  TwentyNine$inboundSchema,
  Thirty$inboundSchema,
  ThirtyOne$inboundSchema,
]);

/** @internal */
export type AggregationSelectionField$Outbound =
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string;

/** @internal */
export const AggregationSelectionField$outboundSchema: z.ZodType<
  AggregationSelectionField$Outbound,
  z.ZodTypeDef,
  AggregationSelectionField
> = z.union([
  AggregationSelectionField1$outboundSchema,
  AggregationSelectionField2$outboundSchema,
  AggregationSelectionField3$outboundSchema,
  AggregationSelectionField4$outboundSchema,
  AggregationSelectionField5$outboundSchema,
  AggregationSelectionField6$outboundSchema,
  AggregationSelectionField7$outboundSchema,
  Eight$outboundSchema,
  Nine$outboundSchema,
  Ten$outboundSchema,
  Eleven$outboundSchema,
  Twelve$outboundSchema,
  Thirteen$outboundSchema,
  Fourteen$outboundSchema,
  Fifteen$outboundSchema,
  Sixteen$outboundSchema,
  Seventeen$outboundSchema,
  Eighteen$outboundSchema,
  Nineteen$outboundSchema,
  Twenty$outboundSchema,
  TwentyOne$outboundSchema,
  TwentyTwo$outboundSchema,
  TwentyThree$outboundSchema,
  TwentyFour$outboundSchema,
  TwentyFive$outboundSchema,
  TwentySix$outboundSchema,
  TwentySeven$outboundSchema,
  TwentyEight$outboundSchema,
  TwentyNine$outboundSchema,
  Thirty$outboundSchema,
  ThirtyOne$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AggregationSelectionField$ {
  /** @deprecated use `AggregationSelectionField$inboundSchema` instead. */
  export const inboundSchema = AggregationSelectionField$inboundSchema;
  /** @deprecated use `AggregationSelectionField$outboundSchema` instead. */
  export const outboundSchema = AggregationSelectionField$outboundSchema;
  /** @deprecated use `AggregationSelectionField$Outbound` instead. */
  export type Outbound = AggregationSelectionField$Outbound;
}

export function aggregationSelectionFieldToJSON(
  aggregationSelectionField: AggregationSelectionField,
): string {
  return JSON.stringify(
    AggregationSelectionField$outboundSchema.parse(aggregationSelectionField),
  );
}

export function aggregationSelectionFieldFromJSON(
  jsonString: string,
): SafeParseResult<AggregationSelectionField, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AggregationSelectionField$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AggregationSelectionField' from JSON`,
  );
}

/** @internal */
export const AggregationSelection$inboundSchema: z.ZodType<
  AggregationSelection,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: AggregationSelectionType$inboundSchema,
  aggregation: z.union([
    Aggregation1$inboundSchema,
    Aggregation2$inboundSchema,
    Aggregation3$inboundSchema,
    Aggregation4$inboundSchema,
    Aggregation5$inboundSchema,
  ]),
  field: z.union([
    AggregationSelectionField1$inboundSchema,
    AggregationSelectionField2$inboundSchema,
    AggregationSelectionField3$inboundSchema,
    AggregationSelectionField4$inboundSchema,
    AggregationSelectionField5$inboundSchema,
    AggregationSelectionField6$inboundSchema,
    AggregationSelectionField7$inboundSchema,
    Eight$inboundSchema,
    Nine$inboundSchema,
    Ten$inboundSchema,
    Eleven$inboundSchema,
    Twelve$inboundSchema,
    Thirteen$inboundSchema,
    Fourteen$inboundSchema,
    Fifteen$inboundSchema,
    Sixteen$inboundSchema,
    Seventeen$inboundSchema,
    Eighteen$inboundSchema,
    Nineteen$inboundSchema,
    Twenty$inboundSchema,
    TwentyOne$inboundSchema,
    TwentyTwo$inboundSchema,
    TwentyThree$inboundSchema,
    TwentyFour$inboundSchema,
    TwentyFive$inboundSchema,
    TwentySix$inboundSchema,
    TwentySeven$inboundSchema,
    TwentyEight$inboundSchema,
    TwentyNine$inboundSchema,
    Thirty$inboundSchema,
    ThirtyOne$inboundSchema,
  ]).optional(),
});

/** @internal */
export type AggregationSelection$Outbound = {
  type: string;
  aggregation: string | string | string | string | string;
  field?:
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | undefined;
};

/** @internal */
export const AggregationSelection$outboundSchema: z.ZodType<
  AggregationSelection$Outbound,
  z.ZodTypeDef,
  AggregationSelection
> = z.object({
  type: AggregationSelectionType$outboundSchema,
  aggregation: z.union([
    Aggregation1$outboundSchema,
    Aggregation2$outboundSchema,
    Aggregation3$outboundSchema,
    Aggregation4$outboundSchema,
    Aggregation5$outboundSchema,
  ]),
  field: z.union([
    AggregationSelectionField1$outboundSchema,
    AggregationSelectionField2$outboundSchema,
    AggregationSelectionField3$outboundSchema,
    AggregationSelectionField4$outboundSchema,
    AggregationSelectionField5$outboundSchema,
    AggregationSelectionField6$outboundSchema,
    AggregationSelectionField7$outboundSchema,
    Eight$outboundSchema,
    Nine$outboundSchema,
    Ten$outboundSchema,
    Eleven$outboundSchema,
    Twelve$outboundSchema,
    Thirteen$outboundSchema,
    Fourteen$outboundSchema,
    Fifteen$outboundSchema,
    Sixteen$outboundSchema,
    Seventeen$outboundSchema,
    Eighteen$outboundSchema,
    Nineteen$outboundSchema,
    Twenty$outboundSchema,
    TwentyOne$outboundSchema,
    TwentyTwo$outboundSchema,
    TwentyThree$outboundSchema,
    TwentyFour$outboundSchema,
    TwentyFive$outboundSchema,
    TwentySix$outboundSchema,
    TwentySeven$outboundSchema,
    TwentyEight$outboundSchema,
    TwentyNine$outboundSchema,
    Thirty$outboundSchema,
    ThirtyOne$outboundSchema,
  ]).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AggregationSelection$ {
  /** @deprecated use `AggregationSelection$inboundSchema` instead. */
  export const inboundSchema = AggregationSelection$inboundSchema;
  /** @deprecated use `AggregationSelection$outboundSchema` instead. */
  export const outboundSchema = AggregationSelection$outboundSchema;
  /** @deprecated use `AggregationSelection$Outbound` instead. */
  export type Outbound = AggregationSelection$Outbound;
}

export function aggregationSelectionToJSON(
  aggregationSelection: AggregationSelection,
): string {
  return JSON.stringify(
    AggregationSelection$outboundSchema.parse(aggregationSelection),
  );
}

export function aggregationSelectionFromJSON(
  jsonString: string,
): SafeParseResult<AggregationSelection, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AggregationSelection$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AggregationSelection' from JSON`,
  );
}
