/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type SemanticThreadFilterOr =
  | SemanticThreadFilter1
  | SemanticThreadFilter2
  | SemanticThreadFilter3;

export type SemanticThreadFilter3 = {
  /**
   * Or condition
   */
  or: Array<
    SemanticThreadFilter1 | SemanticThreadFilter2 | SemanticThreadFilter3
  >;
};

export type SemanticThreadFilterAnd =
  | SemanticThreadFilter1
  | SemanticThreadFilter2
  | SemanticThreadFilter3;

export type SemanticThreadFilter2 = {
  /**
   * And condition
   */
  and: Array<
    SemanticThreadFilter1 | SemanticThreadFilter2 | SemanticThreadFilter3
  >;
};

export const SemanticThreadFilterField31 = {
  IsInitialQuestionAnswer: "isInitialQuestionAnswer",
} as const;
export type SemanticThreadFilterField31 = ClosedEnum<
  typeof SemanticThreadFilterField31
>;

export const SemanticThreadFilterField30 = {
  AreAIAnnotationsVerified: "areAIAnnotationsVerified",
} as const;
export type SemanticThreadFilterField30 = ClosedEnum<
  typeof SemanticThreadFilterField30
>;

export const SemanticThreadFilterField29 = {
  ConversationIds: "conversationIds",
} as const;
export type SemanticThreadFilterField29 = ClosedEnum<
  typeof SemanticThreadFilterField29
>;

export const SemanticThreadFilterField28 = {
  HasNegativeFeedback: "hasNegativeFeedback",
} as const;
export type SemanticThreadFilterField28 = ClosedEnum<
  typeof SemanticThreadFilterField28
>;

export const SemanticThreadFilterField27 = {
  HasPositiveFeedback: "hasPositiveFeedback",
} as const;
export type SemanticThreadFilterField27 = ClosedEnum<
  typeof SemanticThreadFilterField27
>;

export const SemanticThreadFilterField26 = {
  LastUpdated: "lastUpdated",
} as const;
export type SemanticThreadFilterField26 = ClosedEnum<
  typeof SemanticThreadFilterField26
>;

export const SemanticThreadFilterField25 = {
  LastMessageTime: "lastMessageTime",
} as const;
export type SemanticThreadFilterField25 = ClosedEnum<
  typeof SemanticThreadFilterField25
>;

export const SemanticThreadFilterField24 = {
  FirstMessageTime: "firstMessageTime",
} as const;
export type SemanticThreadFilterField24 = ClosedEnum<
  typeof SemanticThreadFilterField24
>;

export const SemanticThreadFilterField23 = {
  IntegrationId: "integrationId",
} as const;
export type SemanticThreadFilterField23 = ClosedEnum<
  typeof SemanticThreadFilterField23
>;

export const SemanticThreadFilterField22 = {
  ProjectId: "projectId",
} as const;
export type SemanticThreadFilterField22 = ClosedEnum<
  typeof SemanticThreadFilterField22
>;

export const SemanticThreadFilterField21 = {
  QuestionType: "questionType",
} as const;
export type SemanticThreadFilterField21 = ClosedEnum<
  typeof SemanticThreadFilterField21
>;

export const SemanticThreadFilterField20 = {
  Sentiment: "sentiment",
} as const;
export type SemanticThreadFilterField20 = ClosedEnum<
  typeof SemanticThreadFilterField20
>;

export const SemanticThreadFilterField19 = {
  Emotion: "emotion",
} as const;
export type SemanticThreadFilterField19 = ClosedEnum<
  typeof SemanticThreadFilterField19
>;

export const SemanticThreadFilterField18 = {
  ThirdPartyEntities: "thirdPartyEntities",
} as const;
export type SemanticThreadFilterField18 = ClosedEnum<
  typeof SemanticThreadFilterField18
>;

export const SemanticThreadFilterField17 = {
  FirstPartyEntities: "firstPartyEntities",
} as const;
export type SemanticThreadFilterField17 = ClosedEnum<
  typeof SemanticThreadFilterField17
>;

export const SemanticThreadFilterField16 = {
  Languages: "languages",
} as const;
export type SemanticThreadFilterField16 = ClosedEnum<
  typeof SemanticThreadFilterField16
>;

export const SemanticThreadFilterField15 = {
  Category: "category",
} as const;
export type SemanticThreadFilterField15 = ClosedEnum<
  typeof SemanticThreadFilterField15
>;

export const SemanticThreadFilterField14 = {
  Subject: "subject",
} as const;
export type SemanticThreadFilterField14 = ClosedEnum<
  typeof SemanticThreadFilterField14
>;

export const SemanticThreadFilterField13 = {
  GapSummary: "gapSummary",
} as const;
export type SemanticThreadFilterField13 = ClosedEnum<
  typeof SemanticThreadFilterField13
>;

export const SemanticThreadFilterField12 = {
  IsAnswerConfident: "isAnswerConfident",
} as const;
export type SemanticThreadFilterField12 = ClosedEnum<
  typeof SemanticThreadFilterField12
>;

export const SemanticThreadFilterField11 = {
  IsFeatureSupported: "isFeatureSupported",
} as const;
export type SemanticThreadFilterField11 = ClosedEnum<
  typeof SemanticThreadFilterField11
>;

export const SemanticThreadFilterField10 = {
  IsDocumented: "isDocumented",
} as const;
export type SemanticThreadFilterField10 = ClosedEnum<
  typeof SemanticThreadFilterField10
>;

export const SemanticThreadFilterField9 = {
  IsClear: "isClear",
} as const;
export type SemanticThreadFilterField9 = ClosedEnum<
  typeof SemanticThreadFilterField9
>;

export const SemanticThreadFilterField8 = {
  IsOnTopic: "isOnTopic",
} as const;
export type SemanticThreadFilterField8 = ClosedEnum<
  typeof SemanticThreadFilterField8
>;

export const SemanticThreadFilterField7 = {
  Answer: "answer",
} as const;
export type SemanticThreadFilterField7 = ClosedEnum<
  typeof SemanticThreadFilterField7
>;

export const SemanticThreadFilterField6 = {
  QuestionLength: "questionLength",
} as const;
export type SemanticThreadFilterField6 = ClosedEnum<
  typeof SemanticThreadFilterField6
>;

export const SemanticThreadFilterField5 = {
  Question: "question",
} as const;
export type SemanticThreadFilterField5 = ClosedEnum<
  typeof SemanticThreadFilterField5
>;

export const SemanticThreadFilterField4 = {
  OrganizationId: "organizationId",
} as const;
export type SemanticThreadFilterField4 = ClosedEnum<
  typeof SemanticThreadFilterField4
>;

export const SemanticThreadFilterField3 = {
  MessagesCount: "messagesCount",
} as const;
export type SemanticThreadFilterField3 = ClosedEnum<
  typeof SemanticThreadFilterField3
>;

export const SemanticThreadFilterField2 = {
  MessageIds: "messageIds",
} as const;
export type SemanticThreadFilterField2 = ClosedEnum<
  typeof SemanticThreadFilterField2
>;

export const SemanticThreadFilterField1 = {
  Id: "id",
} as const;
export type SemanticThreadFilterField1 = ClosedEnum<
  typeof SemanticThreadFilterField1
>;

export type SemanticThreadFilterField =
  | SemanticThreadFilterField1
  | SemanticThreadFilterField2
  | SemanticThreadFilterField3
  | SemanticThreadFilterField4
  | SemanticThreadFilterField5
  | SemanticThreadFilterField6
  | SemanticThreadFilterField7
  | SemanticThreadFilterField8
  | SemanticThreadFilterField9
  | SemanticThreadFilterField10
  | SemanticThreadFilterField11
  | SemanticThreadFilterField12
  | SemanticThreadFilterField13
  | SemanticThreadFilterField14
  | SemanticThreadFilterField15
  | SemanticThreadFilterField16
  | SemanticThreadFilterField17
  | SemanticThreadFilterField18
  | SemanticThreadFilterField19
  | SemanticThreadFilterField20
  | SemanticThreadFilterField21
  | SemanticThreadFilterField22
  | SemanticThreadFilterField23
  | SemanticThreadFilterField24
  | SemanticThreadFilterField25
  | SemanticThreadFilterField26
  | SemanticThreadFilterField27
  | SemanticThreadFilterField28
  | SemanticThreadFilterField29
  | SemanticThreadFilterField30
  | SemanticThreadFilterField31;

export const SemanticThreadFilterSelectOperators9 = {
  ArrayContains: "arrayContains",
} as const;
export type SemanticThreadFilterSelectOperators9 = ClosedEnum<
  typeof SemanticThreadFilterSelectOperators9
>;

export const SemanticThreadFilterSelectOperators8 = {
  NotIn: "notIn",
} as const;
export type SemanticThreadFilterSelectOperators8 = ClosedEnum<
  typeof SemanticThreadFilterSelectOperators8
>;

export const SemanticThreadFilterSelectOperators7 = {
  In: "in",
} as const;
export type SemanticThreadFilterSelectOperators7 = ClosedEnum<
  typeof SemanticThreadFilterSelectOperators7
>;

export const SemanticThreadFilterSelectOperators6 = {
  Lte: "lte",
} as const;
export type SemanticThreadFilterSelectOperators6 = ClosedEnum<
  typeof SemanticThreadFilterSelectOperators6
>;

export const SemanticThreadFilterSelectOperators5 = {
  Lt: "lt",
} as const;
export type SemanticThreadFilterSelectOperators5 = ClosedEnum<
  typeof SemanticThreadFilterSelectOperators5
>;

export const SemanticThreadFilterSelectOperators4 = {
  Gte: "gte",
} as const;
export type SemanticThreadFilterSelectOperators4 = ClosedEnum<
  typeof SemanticThreadFilterSelectOperators4
>;

export const SemanticThreadFilterSelectOperators3 = {
  Gt: "gt",
} as const;
export type SemanticThreadFilterSelectOperators3 = ClosedEnum<
  typeof SemanticThreadFilterSelectOperators3
>;

export const SemanticThreadFilterSelectOperators2 = {
  Neq: "neq",
} as const;
export type SemanticThreadFilterSelectOperators2 = ClosedEnum<
  typeof SemanticThreadFilterSelectOperators2
>;

export const SemanticThreadFilterSelectOperators1 = {
  Eq: "eq",
} as const;
export type SemanticThreadFilterSelectOperators1 = ClosedEnum<
  typeof SemanticThreadFilterSelectOperators1
>;

/**
 * Available Select Operators
 */
export type SemanticThreadFilterSelectOperators =
  | SemanticThreadFilterSelectOperators1
  | SemanticThreadFilterSelectOperators2
  | SemanticThreadFilterSelectOperators3
  | SemanticThreadFilterSelectOperators4
  | SemanticThreadFilterSelectOperators5
  | SemanticThreadFilterSelectOperators6
  | SemanticThreadFilterSelectOperators7
  | SemanticThreadFilterSelectOperators8
  | SemanticThreadFilterSelectOperators9;

export type SemanticThreadFilterValue =
  | string
  | boolean
  | number
  | Array<string>;

export type SemanticThreadFilterCondition = {
  field:
    | SemanticThreadFilterField1
    | SemanticThreadFilterField2
    | SemanticThreadFilterField3
    | SemanticThreadFilterField4
    | SemanticThreadFilterField5
    | SemanticThreadFilterField6
    | SemanticThreadFilterField7
    | SemanticThreadFilterField8
    | SemanticThreadFilterField9
    | SemanticThreadFilterField10
    | SemanticThreadFilterField11
    | SemanticThreadFilterField12
    | SemanticThreadFilterField13
    | SemanticThreadFilterField14
    | SemanticThreadFilterField15
    | SemanticThreadFilterField16
    | SemanticThreadFilterField17
    | SemanticThreadFilterField18
    | SemanticThreadFilterField19
    | SemanticThreadFilterField20
    | SemanticThreadFilterField21
    | SemanticThreadFilterField22
    | SemanticThreadFilterField23
    | SemanticThreadFilterField24
    | SemanticThreadFilterField25
    | SemanticThreadFilterField26
    | SemanticThreadFilterField27
    | SemanticThreadFilterField28
    | SemanticThreadFilterField29
    | SemanticThreadFilterField30
    | SemanticThreadFilterField31;
  /**
   * Available Select Operators
   */
  operator:
    | SemanticThreadFilterSelectOperators1
    | SemanticThreadFilterSelectOperators2
    | SemanticThreadFilterSelectOperators3
    | SemanticThreadFilterSelectOperators4
    | SemanticThreadFilterSelectOperators5
    | SemanticThreadFilterSelectOperators6
    | SemanticThreadFilterSelectOperators7
    | SemanticThreadFilterSelectOperators8
    | SemanticThreadFilterSelectOperators9;
  value: string | boolean | number | Array<string>;
};

export type SemanticThreadFilter1 = {
  condition: SemanticThreadFilterCondition;
};

export type SemanticThreadFilter =
  | SemanticThreadFilter1
  | SemanticThreadFilter2
  | SemanticThreadFilter3;

/** @internal */
export const SemanticThreadFilterOr$inboundSchema: z.ZodType<
  SemanticThreadFilterOr,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => SemanticThreadFilter1$inboundSchema),
  z.lazy(() => SemanticThreadFilter2$inboundSchema),
  z.lazy(() => SemanticThreadFilter3$inboundSchema),
]);

/** @internal */
export type SemanticThreadFilterOr$Outbound =
  | SemanticThreadFilter1$Outbound
  | SemanticThreadFilter2$Outbound
  | SemanticThreadFilter3$Outbound;

/** @internal */
export const SemanticThreadFilterOr$outboundSchema: z.ZodType<
  SemanticThreadFilterOr$Outbound,
  z.ZodTypeDef,
  SemanticThreadFilterOr
> = z.union([
  z.lazy(() => SemanticThreadFilter1$outboundSchema),
  z.lazy(() => SemanticThreadFilter2$outboundSchema),
  z.lazy(() => SemanticThreadFilter3$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilterOr$ {
  /** @deprecated use `SemanticThreadFilterOr$inboundSchema` instead. */
  export const inboundSchema = SemanticThreadFilterOr$inboundSchema;
  /** @deprecated use `SemanticThreadFilterOr$outboundSchema` instead. */
  export const outboundSchema = SemanticThreadFilterOr$outboundSchema;
  /** @deprecated use `SemanticThreadFilterOr$Outbound` instead. */
  export type Outbound = SemanticThreadFilterOr$Outbound;
}

export function semanticThreadFilterOrToJSON(
  semanticThreadFilterOr: SemanticThreadFilterOr,
): string {
  return JSON.stringify(
    SemanticThreadFilterOr$outboundSchema.parse(semanticThreadFilterOr),
  );
}

export function semanticThreadFilterOrFromJSON(
  jsonString: string,
): SafeParseResult<SemanticThreadFilterOr, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SemanticThreadFilterOr$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SemanticThreadFilterOr' from JSON`,
  );
}

/** @internal */
export const SemanticThreadFilter3$inboundSchema: z.ZodType<
  SemanticThreadFilter3,
  z.ZodTypeDef,
  unknown
> = z.object({
  or: z.array(
    z.union([
      z.lazy(() => SemanticThreadFilter1$inboundSchema),
      z.lazy(() => SemanticThreadFilter2$inboundSchema),
      z.lazy(() => SemanticThreadFilter3$inboundSchema),
    ]),
  ),
});

/** @internal */
export type SemanticThreadFilter3$Outbound = {
  or: Array<
    | SemanticThreadFilter1$Outbound
    | SemanticThreadFilter2$Outbound
    | SemanticThreadFilter3$Outbound
  >;
};

/** @internal */
export const SemanticThreadFilter3$outboundSchema: z.ZodType<
  SemanticThreadFilter3$Outbound,
  z.ZodTypeDef,
  SemanticThreadFilter3
> = z.object({
  or: z.array(
    z.union([
      z.lazy(() => SemanticThreadFilter1$outboundSchema),
      z.lazy(() => SemanticThreadFilter2$outboundSchema),
      z.lazy(() => SemanticThreadFilter3$outboundSchema),
    ]),
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilter3$ {
  /** @deprecated use `SemanticThreadFilter3$inboundSchema` instead. */
  export const inboundSchema = SemanticThreadFilter3$inboundSchema;
  /** @deprecated use `SemanticThreadFilter3$outboundSchema` instead. */
  export const outboundSchema = SemanticThreadFilter3$outboundSchema;
  /** @deprecated use `SemanticThreadFilter3$Outbound` instead. */
  export type Outbound = SemanticThreadFilter3$Outbound;
}

export function semanticThreadFilter3ToJSON(
  semanticThreadFilter3: SemanticThreadFilter3,
): string {
  return JSON.stringify(
    SemanticThreadFilter3$outboundSchema.parse(semanticThreadFilter3),
  );
}

export function semanticThreadFilter3FromJSON(
  jsonString: string,
): SafeParseResult<SemanticThreadFilter3, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SemanticThreadFilter3$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SemanticThreadFilter3' from JSON`,
  );
}

/** @internal */
export const SemanticThreadFilterAnd$inboundSchema: z.ZodType<
  SemanticThreadFilterAnd,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => SemanticThreadFilter1$inboundSchema),
  z.lazy(() => SemanticThreadFilter2$inboundSchema),
  z.lazy(() => SemanticThreadFilter3$inboundSchema),
]);

/** @internal */
export type SemanticThreadFilterAnd$Outbound =
  | SemanticThreadFilter1$Outbound
  | SemanticThreadFilter2$Outbound
  | SemanticThreadFilter3$Outbound;

/** @internal */
export const SemanticThreadFilterAnd$outboundSchema: z.ZodType<
  SemanticThreadFilterAnd$Outbound,
  z.ZodTypeDef,
  SemanticThreadFilterAnd
> = z.union([
  z.lazy(() => SemanticThreadFilter1$outboundSchema),
  z.lazy(() => SemanticThreadFilter2$outboundSchema),
  z.lazy(() => SemanticThreadFilter3$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilterAnd$ {
  /** @deprecated use `SemanticThreadFilterAnd$inboundSchema` instead. */
  export const inboundSchema = SemanticThreadFilterAnd$inboundSchema;
  /** @deprecated use `SemanticThreadFilterAnd$outboundSchema` instead. */
  export const outboundSchema = SemanticThreadFilterAnd$outboundSchema;
  /** @deprecated use `SemanticThreadFilterAnd$Outbound` instead. */
  export type Outbound = SemanticThreadFilterAnd$Outbound;
}

export function semanticThreadFilterAndToJSON(
  semanticThreadFilterAnd: SemanticThreadFilterAnd,
): string {
  return JSON.stringify(
    SemanticThreadFilterAnd$outboundSchema.parse(semanticThreadFilterAnd),
  );
}

export function semanticThreadFilterAndFromJSON(
  jsonString: string,
): SafeParseResult<SemanticThreadFilterAnd, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SemanticThreadFilterAnd$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SemanticThreadFilterAnd' from JSON`,
  );
}

/** @internal */
export const SemanticThreadFilter2$inboundSchema: z.ZodType<
  SemanticThreadFilter2,
  z.ZodTypeDef,
  unknown
> = z.object({
  and: z.array(
    z.union([
      z.lazy(() => SemanticThreadFilter1$inboundSchema),
      z.lazy(() => SemanticThreadFilter2$inboundSchema),
      z.lazy(() => SemanticThreadFilter3$inboundSchema),
    ]),
  ),
});

/** @internal */
export type SemanticThreadFilter2$Outbound = {
  and: Array<
    | SemanticThreadFilter1$Outbound
    | SemanticThreadFilter2$Outbound
    | SemanticThreadFilter3$Outbound
  >;
};

/** @internal */
export const SemanticThreadFilter2$outboundSchema: z.ZodType<
  SemanticThreadFilter2$Outbound,
  z.ZodTypeDef,
  SemanticThreadFilter2
> = z.object({
  and: z.array(
    z.union([
      z.lazy(() => SemanticThreadFilter1$outboundSchema),
      z.lazy(() => SemanticThreadFilter2$outboundSchema),
      z.lazy(() => SemanticThreadFilter3$outboundSchema),
    ]),
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilter2$ {
  /** @deprecated use `SemanticThreadFilter2$inboundSchema` instead. */
  export const inboundSchema = SemanticThreadFilter2$inboundSchema;
  /** @deprecated use `SemanticThreadFilter2$outboundSchema` instead. */
  export const outboundSchema = SemanticThreadFilter2$outboundSchema;
  /** @deprecated use `SemanticThreadFilter2$Outbound` instead. */
  export type Outbound = SemanticThreadFilter2$Outbound;
}

export function semanticThreadFilter2ToJSON(
  semanticThreadFilter2: SemanticThreadFilter2,
): string {
  return JSON.stringify(
    SemanticThreadFilter2$outboundSchema.parse(semanticThreadFilter2),
  );
}

export function semanticThreadFilter2FromJSON(
  jsonString: string,
): SafeParseResult<SemanticThreadFilter2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SemanticThreadFilter2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SemanticThreadFilter2' from JSON`,
  );
}

/** @internal */
export const SemanticThreadFilterField31$inboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField31
> = z.nativeEnum(SemanticThreadFilterField31);

/** @internal */
export const SemanticThreadFilterField31$outboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField31
> = SemanticThreadFilterField31$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilterField31$ {
  /** @deprecated use `SemanticThreadFilterField31$inboundSchema` instead. */
  export const inboundSchema = SemanticThreadFilterField31$inboundSchema;
  /** @deprecated use `SemanticThreadFilterField31$outboundSchema` instead. */
  export const outboundSchema = SemanticThreadFilterField31$outboundSchema;
}

/** @internal */
export const SemanticThreadFilterField30$inboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField30
> = z.nativeEnum(SemanticThreadFilterField30);

/** @internal */
export const SemanticThreadFilterField30$outboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField30
> = SemanticThreadFilterField30$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilterField30$ {
  /** @deprecated use `SemanticThreadFilterField30$inboundSchema` instead. */
  export const inboundSchema = SemanticThreadFilterField30$inboundSchema;
  /** @deprecated use `SemanticThreadFilterField30$outboundSchema` instead. */
  export const outboundSchema = SemanticThreadFilterField30$outboundSchema;
}

/** @internal */
export const SemanticThreadFilterField29$inboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField29
> = z.nativeEnum(SemanticThreadFilterField29);

/** @internal */
export const SemanticThreadFilterField29$outboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField29
> = SemanticThreadFilterField29$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilterField29$ {
  /** @deprecated use `SemanticThreadFilterField29$inboundSchema` instead. */
  export const inboundSchema = SemanticThreadFilterField29$inboundSchema;
  /** @deprecated use `SemanticThreadFilterField29$outboundSchema` instead. */
  export const outboundSchema = SemanticThreadFilterField29$outboundSchema;
}

/** @internal */
export const SemanticThreadFilterField28$inboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField28
> = z.nativeEnum(SemanticThreadFilterField28);

/** @internal */
export const SemanticThreadFilterField28$outboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField28
> = SemanticThreadFilterField28$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilterField28$ {
  /** @deprecated use `SemanticThreadFilterField28$inboundSchema` instead. */
  export const inboundSchema = SemanticThreadFilterField28$inboundSchema;
  /** @deprecated use `SemanticThreadFilterField28$outboundSchema` instead. */
  export const outboundSchema = SemanticThreadFilterField28$outboundSchema;
}

/** @internal */
export const SemanticThreadFilterField27$inboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField27
> = z.nativeEnum(SemanticThreadFilterField27);

/** @internal */
export const SemanticThreadFilterField27$outboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField27
> = SemanticThreadFilterField27$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilterField27$ {
  /** @deprecated use `SemanticThreadFilterField27$inboundSchema` instead. */
  export const inboundSchema = SemanticThreadFilterField27$inboundSchema;
  /** @deprecated use `SemanticThreadFilterField27$outboundSchema` instead. */
  export const outboundSchema = SemanticThreadFilterField27$outboundSchema;
}

/** @internal */
export const SemanticThreadFilterField26$inboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField26
> = z.nativeEnum(SemanticThreadFilterField26);

/** @internal */
export const SemanticThreadFilterField26$outboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField26
> = SemanticThreadFilterField26$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilterField26$ {
  /** @deprecated use `SemanticThreadFilterField26$inboundSchema` instead. */
  export const inboundSchema = SemanticThreadFilterField26$inboundSchema;
  /** @deprecated use `SemanticThreadFilterField26$outboundSchema` instead. */
  export const outboundSchema = SemanticThreadFilterField26$outboundSchema;
}

/** @internal */
export const SemanticThreadFilterField25$inboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField25
> = z.nativeEnum(SemanticThreadFilterField25);

/** @internal */
export const SemanticThreadFilterField25$outboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField25
> = SemanticThreadFilterField25$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilterField25$ {
  /** @deprecated use `SemanticThreadFilterField25$inboundSchema` instead. */
  export const inboundSchema = SemanticThreadFilterField25$inboundSchema;
  /** @deprecated use `SemanticThreadFilterField25$outboundSchema` instead. */
  export const outboundSchema = SemanticThreadFilterField25$outboundSchema;
}

/** @internal */
export const SemanticThreadFilterField24$inboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField24
> = z.nativeEnum(SemanticThreadFilterField24);

/** @internal */
export const SemanticThreadFilterField24$outboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField24
> = SemanticThreadFilterField24$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilterField24$ {
  /** @deprecated use `SemanticThreadFilterField24$inboundSchema` instead. */
  export const inboundSchema = SemanticThreadFilterField24$inboundSchema;
  /** @deprecated use `SemanticThreadFilterField24$outboundSchema` instead. */
  export const outboundSchema = SemanticThreadFilterField24$outboundSchema;
}

/** @internal */
export const SemanticThreadFilterField23$inboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField23
> = z.nativeEnum(SemanticThreadFilterField23);

/** @internal */
export const SemanticThreadFilterField23$outboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField23
> = SemanticThreadFilterField23$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilterField23$ {
  /** @deprecated use `SemanticThreadFilterField23$inboundSchema` instead. */
  export const inboundSchema = SemanticThreadFilterField23$inboundSchema;
  /** @deprecated use `SemanticThreadFilterField23$outboundSchema` instead. */
  export const outboundSchema = SemanticThreadFilterField23$outboundSchema;
}

/** @internal */
export const SemanticThreadFilterField22$inboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField22
> = z.nativeEnum(SemanticThreadFilterField22);

/** @internal */
export const SemanticThreadFilterField22$outboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField22
> = SemanticThreadFilterField22$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilterField22$ {
  /** @deprecated use `SemanticThreadFilterField22$inboundSchema` instead. */
  export const inboundSchema = SemanticThreadFilterField22$inboundSchema;
  /** @deprecated use `SemanticThreadFilterField22$outboundSchema` instead. */
  export const outboundSchema = SemanticThreadFilterField22$outboundSchema;
}

/** @internal */
export const SemanticThreadFilterField21$inboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField21
> = z.nativeEnum(SemanticThreadFilterField21);

/** @internal */
export const SemanticThreadFilterField21$outboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField21
> = SemanticThreadFilterField21$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilterField21$ {
  /** @deprecated use `SemanticThreadFilterField21$inboundSchema` instead. */
  export const inboundSchema = SemanticThreadFilterField21$inboundSchema;
  /** @deprecated use `SemanticThreadFilterField21$outboundSchema` instead. */
  export const outboundSchema = SemanticThreadFilterField21$outboundSchema;
}

/** @internal */
export const SemanticThreadFilterField20$inboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField20
> = z.nativeEnum(SemanticThreadFilterField20);

/** @internal */
export const SemanticThreadFilterField20$outboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField20
> = SemanticThreadFilterField20$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilterField20$ {
  /** @deprecated use `SemanticThreadFilterField20$inboundSchema` instead. */
  export const inboundSchema = SemanticThreadFilterField20$inboundSchema;
  /** @deprecated use `SemanticThreadFilterField20$outboundSchema` instead. */
  export const outboundSchema = SemanticThreadFilterField20$outboundSchema;
}

/** @internal */
export const SemanticThreadFilterField19$inboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField19
> = z.nativeEnum(SemanticThreadFilterField19);

/** @internal */
export const SemanticThreadFilterField19$outboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField19
> = SemanticThreadFilterField19$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilterField19$ {
  /** @deprecated use `SemanticThreadFilterField19$inboundSchema` instead. */
  export const inboundSchema = SemanticThreadFilterField19$inboundSchema;
  /** @deprecated use `SemanticThreadFilterField19$outboundSchema` instead. */
  export const outboundSchema = SemanticThreadFilterField19$outboundSchema;
}

/** @internal */
export const SemanticThreadFilterField18$inboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField18
> = z.nativeEnum(SemanticThreadFilterField18);

/** @internal */
export const SemanticThreadFilterField18$outboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField18
> = SemanticThreadFilterField18$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilterField18$ {
  /** @deprecated use `SemanticThreadFilterField18$inboundSchema` instead. */
  export const inboundSchema = SemanticThreadFilterField18$inboundSchema;
  /** @deprecated use `SemanticThreadFilterField18$outboundSchema` instead. */
  export const outboundSchema = SemanticThreadFilterField18$outboundSchema;
}

/** @internal */
export const SemanticThreadFilterField17$inboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField17
> = z.nativeEnum(SemanticThreadFilterField17);

/** @internal */
export const SemanticThreadFilterField17$outboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField17
> = SemanticThreadFilterField17$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilterField17$ {
  /** @deprecated use `SemanticThreadFilterField17$inboundSchema` instead. */
  export const inboundSchema = SemanticThreadFilterField17$inboundSchema;
  /** @deprecated use `SemanticThreadFilterField17$outboundSchema` instead. */
  export const outboundSchema = SemanticThreadFilterField17$outboundSchema;
}

/** @internal */
export const SemanticThreadFilterField16$inboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField16
> = z.nativeEnum(SemanticThreadFilterField16);

/** @internal */
export const SemanticThreadFilterField16$outboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField16
> = SemanticThreadFilterField16$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilterField16$ {
  /** @deprecated use `SemanticThreadFilterField16$inboundSchema` instead. */
  export const inboundSchema = SemanticThreadFilterField16$inboundSchema;
  /** @deprecated use `SemanticThreadFilterField16$outboundSchema` instead. */
  export const outboundSchema = SemanticThreadFilterField16$outboundSchema;
}

/** @internal */
export const SemanticThreadFilterField15$inboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField15
> = z.nativeEnum(SemanticThreadFilterField15);

/** @internal */
export const SemanticThreadFilterField15$outboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField15
> = SemanticThreadFilterField15$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilterField15$ {
  /** @deprecated use `SemanticThreadFilterField15$inboundSchema` instead. */
  export const inboundSchema = SemanticThreadFilterField15$inboundSchema;
  /** @deprecated use `SemanticThreadFilterField15$outboundSchema` instead. */
  export const outboundSchema = SemanticThreadFilterField15$outboundSchema;
}

/** @internal */
export const SemanticThreadFilterField14$inboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField14
> = z.nativeEnum(SemanticThreadFilterField14);

/** @internal */
export const SemanticThreadFilterField14$outboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField14
> = SemanticThreadFilterField14$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilterField14$ {
  /** @deprecated use `SemanticThreadFilterField14$inboundSchema` instead. */
  export const inboundSchema = SemanticThreadFilterField14$inboundSchema;
  /** @deprecated use `SemanticThreadFilterField14$outboundSchema` instead. */
  export const outboundSchema = SemanticThreadFilterField14$outboundSchema;
}

/** @internal */
export const SemanticThreadFilterField13$inboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField13
> = z.nativeEnum(SemanticThreadFilterField13);

/** @internal */
export const SemanticThreadFilterField13$outboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField13
> = SemanticThreadFilterField13$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilterField13$ {
  /** @deprecated use `SemanticThreadFilterField13$inboundSchema` instead. */
  export const inboundSchema = SemanticThreadFilterField13$inboundSchema;
  /** @deprecated use `SemanticThreadFilterField13$outboundSchema` instead. */
  export const outboundSchema = SemanticThreadFilterField13$outboundSchema;
}

/** @internal */
export const SemanticThreadFilterField12$inboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField12
> = z.nativeEnum(SemanticThreadFilterField12);

/** @internal */
export const SemanticThreadFilterField12$outboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField12
> = SemanticThreadFilterField12$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilterField12$ {
  /** @deprecated use `SemanticThreadFilterField12$inboundSchema` instead. */
  export const inboundSchema = SemanticThreadFilterField12$inboundSchema;
  /** @deprecated use `SemanticThreadFilterField12$outboundSchema` instead. */
  export const outboundSchema = SemanticThreadFilterField12$outboundSchema;
}

/** @internal */
export const SemanticThreadFilterField11$inboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField11
> = z.nativeEnum(SemanticThreadFilterField11);

/** @internal */
export const SemanticThreadFilterField11$outboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField11
> = SemanticThreadFilterField11$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilterField11$ {
  /** @deprecated use `SemanticThreadFilterField11$inboundSchema` instead. */
  export const inboundSchema = SemanticThreadFilterField11$inboundSchema;
  /** @deprecated use `SemanticThreadFilterField11$outboundSchema` instead. */
  export const outboundSchema = SemanticThreadFilterField11$outboundSchema;
}

/** @internal */
export const SemanticThreadFilterField10$inboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField10
> = z.nativeEnum(SemanticThreadFilterField10);

/** @internal */
export const SemanticThreadFilterField10$outboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField10
> = SemanticThreadFilterField10$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilterField10$ {
  /** @deprecated use `SemanticThreadFilterField10$inboundSchema` instead. */
  export const inboundSchema = SemanticThreadFilterField10$inboundSchema;
  /** @deprecated use `SemanticThreadFilterField10$outboundSchema` instead. */
  export const outboundSchema = SemanticThreadFilterField10$outboundSchema;
}

/** @internal */
export const SemanticThreadFilterField9$inboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField9
> = z.nativeEnum(SemanticThreadFilterField9);

/** @internal */
export const SemanticThreadFilterField9$outboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField9
> = SemanticThreadFilterField9$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilterField9$ {
  /** @deprecated use `SemanticThreadFilterField9$inboundSchema` instead. */
  export const inboundSchema = SemanticThreadFilterField9$inboundSchema;
  /** @deprecated use `SemanticThreadFilterField9$outboundSchema` instead. */
  export const outboundSchema = SemanticThreadFilterField9$outboundSchema;
}

/** @internal */
export const SemanticThreadFilterField8$inboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField8
> = z.nativeEnum(SemanticThreadFilterField8);

/** @internal */
export const SemanticThreadFilterField8$outboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField8
> = SemanticThreadFilterField8$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilterField8$ {
  /** @deprecated use `SemanticThreadFilterField8$inboundSchema` instead. */
  export const inboundSchema = SemanticThreadFilterField8$inboundSchema;
  /** @deprecated use `SemanticThreadFilterField8$outboundSchema` instead. */
  export const outboundSchema = SemanticThreadFilterField8$outboundSchema;
}

/** @internal */
export const SemanticThreadFilterField7$inboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField7
> = z.nativeEnum(SemanticThreadFilterField7);

/** @internal */
export const SemanticThreadFilterField7$outboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField7
> = SemanticThreadFilterField7$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilterField7$ {
  /** @deprecated use `SemanticThreadFilterField7$inboundSchema` instead. */
  export const inboundSchema = SemanticThreadFilterField7$inboundSchema;
  /** @deprecated use `SemanticThreadFilterField7$outboundSchema` instead. */
  export const outboundSchema = SemanticThreadFilterField7$outboundSchema;
}

/** @internal */
export const SemanticThreadFilterField6$inboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField6
> = z.nativeEnum(SemanticThreadFilterField6);

/** @internal */
export const SemanticThreadFilterField6$outboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField6
> = SemanticThreadFilterField6$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilterField6$ {
  /** @deprecated use `SemanticThreadFilterField6$inboundSchema` instead. */
  export const inboundSchema = SemanticThreadFilterField6$inboundSchema;
  /** @deprecated use `SemanticThreadFilterField6$outboundSchema` instead. */
  export const outboundSchema = SemanticThreadFilterField6$outboundSchema;
}

/** @internal */
export const SemanticThreadFilterField5$inboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField5
> = z.nativeEnum(SemanticThreadFilterField5);

/** @internal */
export const SemanticThreadFilterField5$outboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField5
> = SemanticThreadFilterField5$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilterField5$ {
  /** @deprecated use `SemanticThreadFilterField5$inboundSchema` instead. */
  export const inboundSchema = SemanticThreadFilterField5$inboundSchema;
  /** @deprecated use `SemanticThreadFilterField5$outboundSchema` instead. */
  export const outboundSchema = SemanticThreadFilterField5$outboundSchema;
}

/** @internal */
export const SemanticThreadFilterField4$inboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField4
> = z.nativeEnum(SemanticThreadFilterField4);

/** @internal */
export const SemanticThreadFilterField4$outboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField4
> = SemanticThreadFilterField4$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilterField4$ {
  /** @deprecated use `SemanticThreadFilterField4$inboundSchema` instead. */
  export const inboundSchema = SemanticThreadFilterField4$inboundSchema;
  /** @deprecated use `SemanticThreadFilterField4$outboundSchema` instead. */
  export const outboundSchema = SemanticThreadFilterField4$outboundSchema;
}

/** @internal */
export const SemanticThreadFilterField3$inboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField3
> = z.nativeEnum(SemanticThreadFilterField3);

/** @internal */
export const SemanticThreadFilterField3$outboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField3
> = SemanticThreadFilterField3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilterField3$ {
  /** @deprecated use `SemanticThreadFilterField3$inboundSchema` instead. */
  export const inboundSchema = SemanticThreadFilterField3$inboundSchema;
  /** @deprecated use `SemanticThreadFilterField3$outboundSchema` instead. */
  export const outboundSchema = SemanticThreadFilterField3$outboundSchema;
}

/** @internal */
export const SemanticThreadFilterField2$inboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField2
> = z.nativeEnum(SemanticThreadFilterField2);

/** @internal */
export const SemanticThreadFilterField2$outboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField2
> = SemanticThreadFilterField2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilterField2$ {
  /** @deprecated use `SemanticThreadFilterField2$inboundSchema` instead. */
  export const inboundSchema = SemanticThreadFilterField2$inboundSchema;
  /** @deprecated use `SemanticThreadFilterField2$outboundSchema` instead. */
  export const outboundSchema = SemanticThreadFilterField2$outboundSchema;
}

/** @internal */
export const SemanticThreadFilterField1$inboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField1
> = z.nativeEnum(SemanticThreadFilterField1);

/** @internal */
export const SemanticThreadFilterField1$outboundSchema: z.ZodNativeEnum<
  typeof SemanticThreadFilterField1
> = SemanticThreadFilterField1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilterField1$ {
  /** @deprecated use `SemanticThreadFilterField1$inboundSchema` instead. */
  export const inboundSchema = SemanticThreadFilterField1$inboundSchema;
  /** @deprecated use `SemanticThreadFilterField1$outboundSchema` instead. */
  export const outboundSchema = SemanticThreadFilterField1$outboundSchema;
}

/** @internal */
export const SemanticThreadFilterField$inboundSchema: z.ZodType<
  SemanticThreadFilterField,
  z.ZodTypeDef,
  unknown
> = z.union([
  SemanticThreadFilterField1$inboundSchema,
  SemanticThreadFilterField2$inboundSchema,
  SemanticThreadFilterField3$inboundSchema,
  SemanticThreadFilterField4$inboundSchema,
  SemanticThreadFilterField5$inboundSchema,
  SemanticThreadFilterField6$inboundSchema,
  SemanticThreadFilterField7$inboundSchema,
  SemanticThreadFilterField8$inboundSchema,
  SemanticThreadFilterField9$inboundSchema,
  SemanticThreadFilterField10$inboundSchema,
  SemanticThreadFilterField11$inboundSchema,
  SemanticThreadFilterField12$inboundSchema,
  SemanticThreadFilterField13$inboundSchema,
  SemanticThreadFilterField14$inboundSchema,
  SemanticThreadFilterField15$inboundSchema,
  SemanticThreadFilterField16$inboundSchema,
  SemanticThreadFilterField17$inboundSchema,
  SemanticThreadFilterField18$inboundSchema,
  SemanticThreadFilterField19$inboundSchema,
  SemanticThreadFilterField20$inboundSchema,
  SemanticThreadFilterField21$inboundSchema,
  SemanticThreadFilterField22$inboundSchema,
  SemanticThreadFilterField23$inboundSchema,
  SemanticThreadFilterField24$inboundSchema,
  SemanticThreadFilterField25$inboundSchema,
  SemanticThreadFilterField26$inboundSchema,
  SemanticThreadFilterField27$inboundSchema,
  SemanticThreadFilterField28$inboundSchema,
  SemanticThreadFilterField29$inboundSchema,
  SemanticThreadFilterField30$inboundSchema,
  SemanticThreadFilterField31$inboundSchema,
]);

/** @internal */
export type SemanticThreadFilterField$Outbound =
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string;

/** @internal */
export const SemanticThreadFilterField$outboundSchema: z.ZodType<
  SemanticThreadFilterField$Outbound,
  z.ZodTypeDef,
  SemanticThreadFilterField
> = z.union([
  SemanticThreadFilterField1$outboundSchema,
  SemanticThreadFilterField2$outboundSchema,
  SemanticThreadFilterField3$outboundSchema,
  SemanticThreadFilterField4$outboundSchema,
  SemanticThreadFilterField5$outboundSchema,
  SemanticThreadFilterField6$outboundSchema,
  SemanticThreadFilterField7$outboundSchema,
  SemanticThreadFilterField8$outboundSchema,
  SemanticThreadFilterField9$outboundSchema,
  SemanticThreadFilterField10$outboundSchema,
  SemanticThreadFilterField11$outboundSchema,
  SemanticThreadFilterField12$outboundSchema,
  SemanticThreadFilterField13$outboundSchema,
  SemanticThreadFilterField14$outboundSchema,
  SemanticThreadFilterField15$outboundSchema,
  SemanticThreadFilterField16$outboundSchema,
  SemanticThreadFilterField17$outboundSchema,
  SemanticThreadFilterField18$outboundSchema,
  SemanticThreadFilterField19$outboundSchema,
  SemanticThreadFilterField20$outboundSchema,
  SemanticThreadFilterField21$outboundSchema,
  SemanticThreadFilterField22$outboundSchema,
  SemanticThreadFilterField23$outboundSchema,
  SemanticThreadFilterField24$outboundSchema,
  SemanticThreadFilterField25$outboundSchema,
  SemanticThreadFilterField26$outboundSchema,
  SemanticThreadFilterField27$outboundSchema,
  SemanticThreadFilterField28$outboundSchema,
  SemanticThreadFilterField29$outboundSchema,
  SemanticThreadFilterField30$outboundSchema,
  SemanticThreadFilterField31$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilterField$ {
  /** @deprecated use `SemanticThreadFilterField$inboundSchema` instead. */
  export const inboundSchema = SemanticThreadFilterField$inboundSchema;
  /** @deprecated use `SemanticThreadFilterField$outboundSchema` instead. */
  export const outboundSchema = SemanticThreadFilterField$outboundSchema;
  /** @deprecated use `SemanticThreadFilterField$Outbound` instead. */
  export type Outbound = SemanticThreadFilterField$Outbound;
}

export function semanticThreadFilterFieldToJSON(
  semanticThreadFilterField: SemanticThreadFilterField,
): string {
  return JSON.stringify(
    SemanticThreadFilterField$outboundSchema.parse(semanticThreadFilterField),
  );
}

export function semanticThreadFilterFieldFromJSON(
  jsonString: string,
): SafeParseResult<SemanticThreadFilterField, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SemanticThreadFilterField$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SemanticThreadFilterField' from JSON`,
  );
}

/** @internal */
export const SemanticThreadFilterSelectOperators9$inboundSchema:
  z.ZodNativeEnum<typeof SemanticThreadFilterSelectOperators9> = z.nativeEnum(
    SemanticThreadFilterSelectOperators9,
  );

/** @internal */
export const SemanticThreadFilterSelectOperators9$outboundSchema:
  z.ZodNativeEnum<typeof SemanticThreadFilterSelectOperators9> =
    SemanticThreadFilterSelectOperators9$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilterSelectOperators9$ {
  /** @deprecated use `SemanticThreadFilterSelectOperators9$inboundSchema` instead. */
  export const inboundSchema =
    SemanticThreadFilterSelectOperators9$inboundSchema;
  /** @deprecated use `SemanticThreadFilterSelectOperators9$outboundSchema` instead. */
  export const outboundSchema =
    SemanticThreadFilterSelectOperators9$outboundSchema;
}

/** @internal */
export const SemanticThreadFilterSelectOperators8$inboundSchema:
  z.ZodNativeEnum<typeof SemanticThreadFilterSelectOperators8> = z.nativeEnum(
    SemanticThreadFilterSelectOperators8,
  );

/** @internal */
export const SemanticThreadFilterSelectOperators8$outboundSchema:
  z.ZodNativeEnum<typeof SemanticThreadFilterSelectOperators8> =
    SemanticThreadFilterSelectOperators8$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilterSelectOperators8$ {
  /** @deprecated use `SemanticThreadFilterSelectOperators8$inboundSchema` instead. */
  export const inboundSchema =
    SemanticThreadFilterSelectOperators8$inboundSchema;
  /** @deprecated use `SemanticThreadFilterSelectOperators8$outboundSchema` instead. */
  export const outboundSchema =
    SemanticThreadFilterSelectOperators8$outboundSchema;
}

/** @internal */
export const SemanticThreadFilterSelectOperators7$inboundSchema:
  z.ZodNativeEnum<typeof SemanticThreadFilterSelectOperators7> = z.nativeEnum(
    SemanticThreadFilterSelectOperators7,
  );

/** @internal */
export const SemanticThreadFilterSelectOperators7$outboundSchema:
  z.ZodNativeEnum<typeof SemanticThreadFilterSelectOperators7> =
    SemanticThreadFilterSelectOperators7$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilterSelectOperators7$ {
  /** @deprecated use `SemanticThreadFilterSelectOperators7$inboundSchema` instead. */
  export const inboundSchema =
    SemanticThreadFilterSelectOperators7$inboundSchema;
  /** @deprecated use `SemanticThreadFilterSelectOperators7$outboundSchema` instead. */
  export const outboundSchema =
    SemanticThreadFilterSelectOperators7$outboundSchema;
}

/** @internal */
export const SemanticThreadFilterSelectOperators6$inboundSchema:
  z.ZodNativeEnum<typeof SemanticThreadFilterSelectOperators6> = z.nativeEnum(
    SemanticThreadFilterSelectOperators6,
  );

/** @internal */
export const SemanticThreadFilterSelectOperators6$outboundSchema:
  z.ZodNativeEnum<typeof SemanticThreadFilterSelectOperators6> =
    SemanticThreadFilterSelectOperators6$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilterSelectOperators6$ {
  /** @deprecated use `SemanticThreadFilterSelectOperators6$inboundSchema` instead. */
  export const inboundSchema =
    SemanticThreadFilterSelectOperators6$inboundSchema;
  /** @deprecated use `SemanticThreadFilterSelectOperators6$outboundSchema` instead. */
  export const outboundSchema =
    SemanticThreadFilterSelectOperators6$outboundSchema;
}

/** @internal */
export const SemanticThreadFilterSelectOperators5$inboundSchema:
  z.ZodNativeEnum<typeof SemanticThreadFilterSelectOperators5> = z.nativeEnum(
    SemanticThreadFilterSelectOperators5,
  );

/** @internal */
export const SemanticThreadFilterSelectOperators5$outboundSchema:
  z.ZodNativeEnum<typeof SemanticThreadFilterSelectOperators5> =
    SemanticThreadFilterSelectOperators5$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilterSelectOperators5$ {
  /** @deprecated use `SemanticThreadFilterSelectOperators5$inboundSchema` instead. */
  export const inboundSchema =
    SemanticThreadFilterSelectOperators5$inboundSchema;
  /** @deprecated use `SemanticThreadFilterSelectOperators5$outboundSchema` instead. */
  export const outboundSchema =
    SemanticThreadFilterSelectOperators5$outboundSchema;
}

/** @internal */
export const SemanticThreadFilterSelectOperators4$inboundSchema:
  z.ZodNativeEnum<typeof SemanticThreadFilterSelectOperators4> = z.nativeEnum(
    SemanticThreadFilterSelectOperators4,
  );

/** @internal */
export const SemanticThreadFilterSelectOperators4$outboundSchema:
  z.ZodNativeEnum<typeof SemanticThreadFilterSelectOperators4> =
    SemanticThreadFilterSelectOperators4$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilterSelectOperators4$ {
  /** @deprecated use `SemanticThreadFilterSelectOperators4$inboundSchema` instead. */
  export const inboundSchema =
    SemanticThreadFilterSelectOperators4$inboundSchema;
  /** @deprecated use `SemanticThreadFilterSelectOperators4$outboundSchema` instead. */
  export const outboundSchema =
    SemanticThreadFilterSelectOperators4$outboundSchema;
}

/** @internal */
export const SemanticThreadFilterSelectOperators3$inboundSchema:
  z.ZodNativeEnum<typeof SemanticThreadFilterSelectOperators3> = z.nativeEnum(
    SemanticThreadFilterSelectOperators3,
  );

/** @internal */
export const SemanticThreadFilterSelectOperators3$outboundSchema:
  z.ZodNativeEnum<typeof SemanticThreadFilterSelectOperators3> =
    SemanticThreadFilterSelectOperators3$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilterSelectOperators3$ {
  /** @deprecated use `SemanticThreadFilterSelectOperators3$inboundSchema` instead. */
  export const inboundSchema =
    SemanticThreadFilterSelectOperators3$inboundSchema;
  /** @deprecated use `SemanticThreadFilterSelectOperators3$outboundSchema` instead. */
  export const outboundSchema =
    SemanticThreadFilterSelectOperators3$outboundSchema;
}

/** @internal */
export const SemanticThreadFilterSelectOperators2$inboundSchema:
  z.ZodNativeEnum<typeof SemanticThreadFilterSelectOperators2> = z.nativeEnum(
    SemanticThreadFilterSelectOperators2,
  );

/** @internal */
export const SemanticThreadFilterSelectOperators2$outboundSchema:
  z.ZodNativeEnum<typeof SemanticThreadFilterSelectOperators2> =
    SemanticThreadFilterSelectOperators2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilterSelectOperators2$ {
  /** @deprecated use `SemanticThreadFilterSelectOperators2$inboundSchema` instead. */
  export const inboundSchema =
    SemanticThreadFilterSelectOperators2$inboundSchema;
  /** @deprecated use `SemanticThreadFilterSelectOperators2$outboundSchema` instead. */
  export const outboundSchema =
    SemanticThreadFilterSelectOperators2$outboundSchema;
}

/** @internal */
export const SemanticThreadFilterSelectOperators1$inboundSchema:
  z.ZodNativeEnum<typeof SemanticThreadFilterSelectOperators1> = z.nativeEnum(
    SemanticThreadFilterSelectOperators1,
  );

/** @internal */
export const SemanticThreadFilterSelectOperators1$outboundSchema:
  z.ZodNativeEnum<typeof SemanticThreadFilterSelectOperators1> =
    SemanticThreadFilterSelectOperators1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilterSelectOperators1$ {
  /** @deprecated use `SemanticThreadFilterSelectOperators1$inboundSchema` instead. */
  export const inboundSchema =
    SemanticThreadFilterSelectOperators1$inboundSchema;
  /** @deprecated use `SemanticThreadFilterSelectOperators1$outboundSchema` instead. */
  export const outboundSchema =
    SemanticThreadFilterSelectOperators1$outboundSchema;
}

/** @internal */
export const SemanticThreadFilterSelectOperators$inboundSchema: z.ZodType<
  SemanticThreadFilterSelectOperators,
  z.ZodTypeDef,
  unknown
> = z.union([
  SemanticThreadFilterSelectOperators1$inboundSchema,
  SemanticThreadFilterSelectOperators2$inboundSchema,
  SemanticThreadFilterSelectOperators3$inboundSchema,
  SemanticThreadFilterSelectOperators4$inboundSchema,
  SemanticThreadFilterSelectOperators5$inboundSchema,
  SemanticThreadFilterSelectOperators6$inboundSchema,
  SemanticThreadFilterSelectOperators7$inboundSchema,
  SemanticThreadFilterSelectOperators8$inboundSchema,
  SemanticThreadFilterSelectOperators9$inboundSchema,
]);

/** @internal */
export type SemanticThreadFilterSelectOperators$Outbound =
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string
  | string;

/** @internal */
export const SemanticThreadFilterSelectOperators$outboundSchema: z.ZodType<
  SemanticThreadFilterSelectOperators$Outbound,
  z.ZodTypeDef,
  SemanticThreadFilterSelectOperators
> = z.union([
  SemanticThreadFilterSelectOperators1$outboundSchema,
  SemanticThreadFilterSelectOperators2$outboundSchema,
  SemanticThreadFilterSelectOperators3$outboundSchema,
  SemanticThreadFilterSelectOperators4$outboundSchema,
  SemanticThreadFilterSelectOperators5$outboundSchema,
  SemanticThreadFilterSelectOperators6$outboundSchema,
  SemanticThreadFilterSelectOperators7$outboundSchema,
  SemanticThreadFilterSelectOperators8$outboundSchema,
  SemanticThreadFilterSelectOperators9$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilterSelectOperators$ {
  /** @deprecated use `SemanticThreadFilterSelectOperators$inboundSchema` instead. */
  export const inboundSchema =
    SemanticThreadFilterSelectOperators$inboundSchema;
  /** @deprecated use `SemanticThreadFilterSelectOperators$outboundSchema` instead. */
  export const outboundSchema =
    SemanticThreadFilterSelectOperators$outboundSchema;
  /** @deprecated use `SemanticThreadFilterSelectOperators$Outbound` instead. */
  export type Outbound = SemanticThreadFilterSelectOperators$Outbound;
}

export function semanticThreadFilterSelectOperatorsToJSON(
  semanticThreadFilterSelectOperators: SemanticThreadFilterSelectOperators,
): string {
  return JSON.stringify(
    SemanticThreadFilterSelectOperators$outboundSchema.parse(
      semanticThreadFilterSelectOperators,
    ),
  );
}

export function semanticThreadFilterSelectOperatorsFromJSON(
  jsonString: string,
): SafeParseResult<SemanticThreadFilterSelectOperators, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      SemanticThreadFilterSelectOperators$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SemanticThreadFilterSelectOperators' from JSON`,
  );
}

/** @internal */
export const SemanticThreadFilterValue$inboundSchema: z.ZodType<
  SemanticThreadFilterValue,
  z.ZodTypeDef,
  unknown
> = z.union([z.string(), z.boolean(), z.number(), z.array(z.string())]);

/** @internal */
export type SemanticThreadFilterValue$Outbound =
  | string
  | boolean
  | number
  | Array<string>;

/** @internal */
export const SemanticThreadFilterValue$outboundSchema: z.ZodType<
  SemanticThreadFilterValue$Outbound,
  z.ZodTypeDef,
  SemanticThreadFilterValue
> = z.union([z.string(), z.boolean(), z.number(), z.array(z.string())]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilterValue$ {
  /** @deprecated use `SemanticThreadFilterValue$inboundSchema` instead. */
  export const inboundSchema = SemanticThreadFilterValue$inboundSchema;
  /** @deprecated use `SemanticThreadFilterValue$outboundSchema` instead. */
  export const outboundSchema = SemanticThreadFilterValue$outboundSchema;
  /** @deprecated use `SemanticThreadFilterValue$Outbound` instead. */
  export type Outbound = SemanticThreadFilterValue$Outbound;
}

export function semanticThreadFilterValueToJSON(
  semanticThreadFilterValue: SemanticThreadFilterValue,
): string {
  return JSON.stringify(
    SemanticThreadFilterValue$outboundSchema.parse(semanticThreadFilterValue),
  );
}

export function semanticThreadFilterValueFromJSON(
  jsonString: string,
): SafeParseResult<SemanticThreadFilterValue, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SemanticThreadFilterValue$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SemanticThreadFilterValue' from JSON`,
  );
}

/** @internal */
export const SemanticThreadFilterCondition$inboundSchema: z.ZodType<
  SemanticThreadFilterCondition,
  z.ZodTypeDef,
  unknown
> = z.object({
  field: z.union([
    SemanticThreadFilterField1$inboundSchema,
    SemanticThreadFilterField2$inboundSchema,
    SemanticThreadFilterField3$inboundSchema,
    SemanticThreadFilterField4$inboundSchema,
    SemanticThreadFilterField5$inboundSchema,
    SemanticThreadFilterField6$inboundSchema,
    SemanticThreadFilterField7$inboundSchema,
    SemanticThreadFilterField8$inboundSchema,
    SemanticThreadFilterField9$inboundSchema,
    SemanticThreadFilterField10$inboundSchema,
    SemanticThreadFilterField11$inboundSchema,
    SemanticThreadFilterField12$inboundSchema,
    SemanticThreadFilterField13$inboundSchema,
    SemanticThreadFilterField14$inboundSchema,
    SemanticThreadFilterField15$inboundSchema,
    SemanticThreadFilterField16$inboundSchema,
    SemanticThreadFilterField17$inboundSchema,
    SemanticThreadFilterField18$inboundSchema,
    SemanticThreadFilterField19$inboundSchema,
    SemanticThreadFilterField20$inboundSchema,
    SemanticThreadFilterField21$inboundSchema,
    SemanticThreadFilterField22$inboundSchema,
    SemanticThreadFilterField23$inboundSchema,
    SemanticThreadFilterField24$inboundSchema,
    SemanticThreadFilterField25$inboundSchema,
    SemanticThreadFilterField26$inboundSchema,
    SemanticThreadFilterField27$inboundSchema,
    SemanticThreadFilterField28$inboundSchema,
    SemanticThreadFilterField29$inboundSchema,
    SemanticThreadFilterField30$inboundSchema,
    SemanticThreadFilterField31$inboundSchema,
  ]),
  operator: z.union([
    SemanticThreadFilterSelectOperators1$inboundSchema,
    SemanticThreadFilterSelectOperators2$inboundSchema,
    SemanticThreadFilterSelectOperators3$inboundSchema,
    SemanticThreadFilterSelectOperators4$inboundSchema,
    SemanticThreadFilterSelectOperators5$inboundSchema,
    SemanticThreadFilterSelectOperators6$inboundSchema,
    SemanticThreadFilterSelectOperators7$inboundSchema,
    SemanticThreadFilterSelectOperators8$inboundSchema,
    SemanticThreadFilterSelectOperators9$inboundSchema,
  ]),
  value: z.union([z.string(), z.boolean(), z.number(), z.array(z.string())]),
});

/** @internal */
export type SemanticThreadFilterCondition$Outbound = {
  field:
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string;
  operator:
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string
    | string;
  value: string | boolean | number | Array<string>;
};

/** @internal */
export const SemanticThreadFilterCondition$outboundSchema: z.ZodType<
  SemanticThreadFilterCondition$Outbound,
  z.ZodTypeDef,
  SemanticThreadFilterCondition
> = z.object({
  field: z.union([
    SemanticThreadFilterField1$outboundSchema,
    SemanticThreadFilterField2$outboundSchema,
    SemanticThreadFilterField3$outboundSchema,
    SemanticThreadFilterField4$outboundSchema,
    SemanticThreadFilterField5$outboundSchema,
    SemanticThreadFilterField6$outboundSchema,
    SemanticThreadFilterField7$outboundSchema,
    SemanticThreadFilterField8$outboundSchema,
    SemanticThreadFilterField9$outboundSchema,
    SemanticThreadFilterField10$outboundSchema,
    SemanticThreadFilterField11$outboundSchema,
    SemanticThreadFilterField12$outboundSchema,
    SemanticThreadFilterField13$outboundSchema,
    SemanticThreadFilterField14$outboundSchema,
    SemanticThreadFilterField15$outboundSchema,
    SemanticThreadFilterField16$outboundSchema,
    SemanticThreadFilterField17$outboundSchema,
    SemanticThreadFilterField18$outboundSchema,
    SemanticThreadFilterField19$outboundSchema,
    SemanticThreadFilterField20$outboundSchema,
    SemanticThreadFilterField21$outboundSchema,
    SemanticThreadFilterField22$outboundSchema,
    SemanticThreadFilterField23$outboundSchema,
    SemanticThreadFilterField24$outboundSchema,
    SemanticThreadFilterField25$outboundSchema,
    SemanticThreadFilterField26$outboundSchema,
    SemanticThreadFilterField27$outboundSchema,
    SemanticThreadFilterField28$outboundSchema,
    SemanticThreadFilterField29$outboundSchema,
    SemanticThreadFilterField30$outboundSchema,
    SemanticThreadFilterField31$outboundSchema,
  ]),
  operator: z.union([
    SemanticThreadFilterSelectOperators1$outboundSchema,
    SemanticThreadFilterSelectOperators2$outboundSchema,
    SemanticThreadFilterSelectOperators3$outboundSchema,
    SemanticThreadFilterSelectOperators4$outboundSchema,
    SemanticThreadFilterSelectOperators5$outboundSchema,
    SemanticThreadFilterSelectOperators6$outboundSchema,
    SemanticThreadFilterSelectOperators7$outboundSchema,
    SemanticThreadFilterSelectOperators8$outboundSchema,
    SemanticThreadFilterSelectOperators9$outboundSchema,
  ]),
  value: z.union([z.string(), z.boolean(), z.number(), z.array(z.string())]),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilterCondition$ {
  /** @deprecated use `SemanticThreadFilterCondition$inboundSchema` instead. */
  export const inboundSchema = SemanticThreadFilterCondition$inboundSchema;
  /** @deprecated use `SemanticThreadFilterCondition$outboundSchema` instead. */
  export const outboundSchema = SemanticThreadFilterCondition$outboundSchema;
  /** @deprecated use `SemanticThreadFilterCondition$Outbound` instead. */
  export type Outbound = SemanticThreadFilterCondition$Outbound;
}

export function semanticThreadFilterConditionToJSON(
  semanticThreadFilterCondition: SemanticThreadFilterCondition,
): string {
  return JSON.stringify(
    SemanticThreadFilterCondition$outboundSchema.parse(
      semanticThreadFilterCondition,
    ),
  );
}

export function semanticThreadFilterConditionFromJSON(
  jsonString: string,
): SafeParseResult<SemanticThreadFilterCondition, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SemanticThreadFilterCondition$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SemanticThreadFilterCondition' from JSON`,
  );
}

/** @internal */
export const SemanticThreadFilter1$inboundSchema: z.ZodType<
  SemanticThreadFilter1,
  z.ZodTypeDef,
  unknown
> = z.object({
  condition: z.lazy(() => SemanticThreadFilterCondition$inboundSchema),
});

/** @internal */
export type SemanticThreadFilter1$Outbound = {
  condition: SemanticThreadFilterCondition$Outbound;
};

/** @internal */
export const SemanticThreadFilter1$outboundSchema: z.ZodType<
  SemanticThreadFilter1$Outbound,
  z.ZodTypeDef,
  SemanticThreadFilter1
> = z.object({
  condition: z.lazy(() => SemanticThreadFilterCondition$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilter1$ {
  /** @deprecated use `SemanticThreadFilter1$inboundSchema` instead. */
  export const inboundSchema = SemanticThreadFilter1$inboundSchema;
  /** @deprecated use `SemanticThreadFilter1$outboundSchema` instead. */
  export const outboundSchema = SemanticThreadFilter1$outboundSchema;
  /** @deprecated use `SemanticThreadFilter1$Outbound` instead. */
  export type Outbound = SemanticThreadFilter1$Outbound;
}

export function semanticThreadFilter1ToJSON(
  semanticThreadFilter1: SemanticThreadFilter1,
): string {
  return JSON.stringify(
    SemanticThreadFilter1$outboundSchema.parse(semanticThreadFilter1),
  );
}

export function semanticThreadFilter1FromJSON(
  jsonString: string,
): SafeParseResult<SemanticThreadFilter1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SemanticThreadFilter1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SemanticThreadFilter1' from JSON`,
  );
}

/** @internal */
export const SemanticThreadFilter$inboundSchema: z.ZodType<
  SemanticThreadFilter,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => SemanticThreadFilter1$inboundSchema),
  z.lazy(() => SemanticThreadFilter2$inboundSchema),
  z.lazy(() => SemanticThreadFilter3$inboundSchema),
]);

/** @internal */
export type SemanticThreadFilter$Outbound =
  | SemanticThreadFilter1$Outbound
  | SemanticThreadFilter2$Outbound
  | SemanticThreadFilter3$Outbound;

/** @internal */
export const SemanticThreadFilter$outboundSchema: z.ZodType<
  SemanticThreadFilter$Outbound,
  z.ZodTypeDef,
  SemanticThreadFilter
> = z.union([
  z.lazy(() => SemanticThreadFilter1$outboundSchema),
  z.lazy(() => SemanticThreadFilter2$outboundSchema),
  z.lazy(() => SemanticThreadFilter3$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SemanticThreadFilter$ {
  /** @deprecated use `SemanticThreadFilter$inboundSchema` instead. */
  export const inboundSchema = SemanticThreadFilter$inboundSchema;
  /** @deprecated use `SemanticThreadFilter$outboundSchema` instead. */
  export const outboundSchema = SemanticThreadFilter$outboundSchema;
  /** @deprecated use `SemanticThreadFilter$Outbound` instead. */
  export type Outbound = SemanticThreadFilter$Outbound;
}

export function semanticThreadFilterToJSON(
  semanticThreadFilter: SemanticThreadFilter,
): string {
  return JSON.stringify(
    SemanticThreadFilter$outboundSchema.parse(semanticThreadFilter),
  );
}

export function semanticThreadFilterFromJSON(
  jsonString: string,
): SafeParseResult<SemanticThreadFilter, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SemanticThreadFilter$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SemanticThreadFilter' from JSON`,
  );
}
