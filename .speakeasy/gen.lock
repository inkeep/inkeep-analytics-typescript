lockVersion: 2.0.0
id: 63a2136d-3fa3-4a0b-a766-1ddb2460cc12
management:
  docChecksum: 21b0df96ca59079500d07a175bf4988f
  docVersion: 0.1.1
  speakeasyVersion: 1.582.0
  generationVersion: 2.657.1
  releaseVersion: 0.2.4-alpha.28
  configChecksum: f164bb3507bf6cba233836c9e3a4604d
  repoURL: https://github.com/inkeep/inkeep-analytics-typescript.git
  installationURL: https://github.com/inkeep/inkeep-analytics-typescript
  published: true
features:
  typescript:
    additionalDependencies: 0.1.0
    additionalProperties: 0.1.1
    constsAndDefaults: 0.1.12
    core: 3.21.14
    defaultEnabledRetries: 0.1.0
    devContainers: 2.90.0
    downloadStreams: 0.1.1
    enumUnions: 0.1.0
    envVarSecurityUsage: 0.1.2
    globalSecurity: 2.82.13
    globalSecurityCallbacks: 0.1.0
    globalSecurityFlattening: 0.1.0
    globalServerURLs: 2.82.5
    groups: 2.81.2
    mcpServer: 0.9.3
    methodSecurity: 2.82.6
    nameOverrides: 2.81.2
    nullables: 0.1.1
    reactQueryHooks: 0.2.3
    responseFormat: 0.2.3
    retries: 2.83.0
    sdkHooks: 0.3.0
    unions: 2.85.11
generatedFiles:
  - .devcontainer/README.md
  - .devcontainer/devcontainer.json
  - .devcontainer/setup.sh
  - .gitattributes
  - .npmignore
  - FUNCTIONS.md
  - REACT_QUERY.md
  - RUNTIMES.md
  - USAGE.md
  - docs/lib/utils/retryconfig.md
  - docs/models/components/aggregation.md
  - docs/models/components/and.md
  - docs/models/components/condition.md
  - docs/models/components/content.md
  - docs/models/components/conversation.md
  - docs/models/components/conversationsaggregationselection.md
  - docs/models/components/conversationsaggregationselectiontype.md
  - docs/models/components/conversationsfield.md
  - docs/models/components/conversationsfilter.md
  - docs/models/components/conversationsfilterand.md
  - docs/models/components/conversationsfiltercondition.md
  - docs/models/components/conversationsfilteror.md
  - docs/models/components/conversationsgroupby.md
  - docs/models/components/conversationsorderby.md
  - docs/models/components/conversationsorderbyfield.md
  - docs/models/components/conversationsresultitem.md
  - docs/models/components/conversationsselection.md
  - docs/models/components/conversationssimplefieldselection.md
  - docs/models/components/conversationssimplefieldselectionfield.md
  - docs/models/components/conversationssimplefieldselectiontype.md
  - docs/models/components/conversationstimebasedgroupbyselection.md
  - docs/models/components/conversationstimebasedgroupbyselectionfield.md
  - docs/models/components/conversationstimebasedgroupbyselectiontype.md
  - docs/models/components/createconversation.md
  - docs/models/components/createopenaiconversation.md
  - docs/models/components/createopenaiconversationcontent.md
  - docs/models/components/createopenaiconversationid.md
  - docs/models/components/createopenaiconversationlinks.md
  - docs/models/components/createopenaiconversationrole.md
  - docs/models/components/createopenaiconversationtype.md
  - docs/models/components/createopenaiconversationtype1.md
  - docs/models/components/createopenaiconversationuserid.md
  - docs/models/components/createopenaiconversationuserproperties.md
  - docs/models/components/createsupportcopilotconversation.md
  - docs/models/components/createsupportcopilotconversationid.md
  - docs/models/components/createsupportcopilotconversationlinks.md
  - docs/models/components/createsupportcopilotconversationmessages.md
  - docs/models/components/createsupportcopilotconversationmessagesid.md
  - docs/models/components/createsupportcopilotconversationmessagestype.md
  - docs/models/components/createsupportcopilotconversationmessagesuserid.md
  - docs/models/components/createsupportcopilotconversationmessagesuserproperties.md
  - docs/models/components/createsupportcopilotconversationtype.md
  - docs/models/components/createsupportcopilotconversationtype1.md
  - docs/models/components/createsupportcopilotconversationuserid.md
  - docs/models/components/createsupportcopilotconversationuserproperties.md
  - docs/models/components/createsupportcopilotconversationvisibility.md
  - docs/models/components/createsupportticketconversation.md
  - docs/models/components/createsupportticketconversationid.md
  - docs/models/components/createsupportticketconversationlinks.md
  - docs/models/components/createsupportticketconversationmessages.md
  - docs/models/components/createsupportticketconversationmessagesid.md
  - docs/models/components/createsupportticketconversationmessagestype.md
  - docs/models/components/createsupportticketconversationmessagesuserid.md
  - docs/models/components/createsupportticketconversationmessagesuserproperties.md
  - docs/models/components/createsupportticketconversationtype.md
  - docs/models/components/createsupportticketconversationtype1.md
  - docs/models/components/createsupportticketconversationuserid.md
  - docs/models/components/createsupportticketconversationuserproperties.md
  - docs/models/components/createsupportticketconversationvisibility.md
  - docs/models/components/detail.md
  - docs/models/components/direction.md
  - docs/models/components/entitytype.md
  - docs/models/components/eventsaggregationselection.md
  - docs/models/components/eventsaggregationselectionaggregation.md
  - docs/models/components/eventsaggregationselectionfield.md
  - docs/models/components/eventsaggregationselectiontype.md
  - docs/models/components/eventsfield.md
  - docs/models/components/eventsfilter.md
  - docs/models/components/eventsfilterand.md
  - docs/models/components/eventsfilterandand.md
  - docs/models/components/eventsfiltercondition.md
  - docs/models/components/eventsfilterconditioncondition.md
  - docs/models/components/eventsfilterconditionvalue7.md
  - docs/models/components/eventsfilterconditionvaluevalue.md
  - docs/models/components/eventsfilteror.md
  - docs/models/components/eventsfilteroror.md
  - docs/models/components/eventsgroupby.md
  - docs/models/components/eventsorderby.md
  - docs/models/components/eventsorderbydirection.md
  - docs/models/components/eventsorderbyfield.md
  - docs/models/components/eventsresultitem.md
  - docs/models/components/eventsselection.md
  - docs/models/components/eventssimplefieldselection.md
  - docs/models/components/eventssimplefieldselectionfield.md
  - docs/models/components/eventssimplefieldselectiontype.md
  - docs/models/components/eventstimebasedgroupbyselection.md
  - docs/models/components/eventstimebasedgroupbyselectionfield.md
  - docs/models/components/eventstimebasedgroupbyselectiontype.md
  - docs/models/components/feedbackaggregationselection.md
  - docs/models/components/feedbackaggregationselectionaggregation.md
  - docs/models/components/feedbackaggregationselectionfield.md
  - docs/models/components/feedbackaggregationselectiontype.md
  - docs/models/components/feedbackfield.md
  - docs/models/components/feedbackfilter.md
  - docs/models/components/feedbackfilterand.md
  - docs/models/components/feedbackfilterandand.md
  - docs/models/components/feedbackfiltercondition.md
  - docs/models/components/feedbackfilterconditioncondition.md
  - docs/models/components/feedbackfilterconditionvalue7.md
  - docs/models/components/feedbackfilterconditionvaluevalue.md
  - docs/models/components/feedbackfilterconditionvaluevalue4.md
  - docs/models/components/feedbackfilteror.md
  - docs/models/components/feedbackfilteroror.md
  - docs/models/components/feedbackgroupby.md
  - docs/models/components/feedbackorderby.md
  - docs/models/components/feedbackorderbydirection.md
  - docs/models/components/feedbackorderbyfield.md
  - docs/models/components/feedbackresultitem.md
  - docs/models/components/feedbackselection.md
  - docs/models/components/feedbacksimplefieldselection.md
  - docs/models/components/feedbacksimplefieldselectionfield.md
  - docs/models/components/feedbacksimplefieldselectiontype.md
  - docs/models/components/feedbacktimebasedgroupbyselection.md
  - docs/models/components/feedbacktimebasedgroupbyselectionfield.md
  - docs/models/components/feedbacktimebasedgroupbyselectiontype.md
  - docs/models/components/field.md
  - docs/models/components/filteroperator.md
  - docs/models/components/four.md
  - docs/models/components/getallfeedbackresponse.md
  - docs/models/components/getallfeedbackresponseid.md
  - docs/models/components/getallfeedbackresponsenegativefeedbackid.md
  - docs/models/components/getallfeedbackresponsenegativefeedbacksourcestype.md
  - docs/models/components/getallfeedbackresponsenegativefeedbacktype.md
  - docs/models/components/getallfeedbackresponsenegativefeedbackuserid.md
  - docs/models/components/getallfeedbackresponsenegativefeedbackuserproperties.md
  - docs/models/components/getallfeedbackresponsepositivefeedbacktype.md
  - docs/models/components/getallfeedbackresponsereasons.md
  - docs/models/components/getallfeedbackresponsesources.md
  - docs/models/components/getallfeedbackresponsetype.md
  - docs/models/components/getallfeedbackresponseuserid.md
  - docs/models/components/getallfeedbackresponseuserproperties.md
  - docs/models/components/id.md
  - docs/models/components/insertconversationevent.md
  - docs/models/components/insertconversationevententitytype.md
  - docs/models/components/insertconversationeventid.md
  - docs/models/components/insertconversationeventuserid.md
  - docs/models/components/insertconversationeventuserproperties.md
  - docs/models/components/insertevent.md
  - docs/models/components/insertmessageevent.md
  - docs/models/components/insertmessageeventid.md
  - docs/models/components/insertmessageeventuserid.md
  - docs/models/components/insertmessageeventuserproperties.md
  - docs/models/components/insertsearchevent.md
  - docs/models/components/insertsearchevententitytype.md
  - docs/models/components/insertsearcheventid.md
  - docs/models/components/insertsearcheventuserid.md
  - docs/models/components/insertsearcheventuserproperties.md
  - docs/models/components/links.md
  - docs/models/components/message.md
  - docs/models/components/messages.md
  - docs/models/components/negativefeedback.md
  - docs/models/components/one.md
  - docs/models/components/openaichatcompletionmessage.md
  - docs/models/components/openaichatcompletionmessagecontent.md
  - docs/models/components/openaichatcompletionmessagerole.md
  - docs/models/components/openaicontentitem.md
  - docs/models/components/openaicontentitemtype.md
  - docs/models/components/openaiconversation.md
  - docs/models/components/openaiconversationid.md
  - docs/models/components/openaiconversationtype.md
  - docs/models/components/openaiconversationuserid.md
  - docs/models/components/openaiconversationuserproperties.md
  - docs/models/components/openaiconversationvisibility.md
  - docs/models/components/openaiextendedmessage.md
  - docs/models/components/openaiextendedmessageid.md
  - docs/models/components/openaiextendedmessagelinkstype.md
  - docs/models/components/openaiextendedmessagetype.md
  - docs/models/components/openaiextendedmessageuserid.md
  - docs/models/components/openaiextendedmessageuserproperties.md
  - docs/models/components/openaiimageurlobject.md
  - docs/models/components/openaitoolcall.md
  - docs/models/components/openaitoolcallfunction.md
  - docs/models/components/openaitoolcalltype.md
  - docs/models/components/or.md
  - docs/models/components/positivefeedback.md
  - docs/models/components/propertykeysrequestbody.md
  - docs/models/components/propertykeysrequestbodyfield.md
  - docs/models/components/propertykeysresponsebody.md
  - docs/models/components/propertyvaluesrequestbody.md
  - docs/models/components/propertyvaluesrequestbodyfield.md
  - docs/models/components/propertyvaluesrequestbodyviews.md
  - docs/models/components/propertyvaluesresponsebody.md
  - docs/models/components/queryconversationsrequestbody.md
  - docs/models/components/queryconversationsresponsebody.md
  - docs/models/components/queryconversationsresponsedata.md
  - docs/models/components/queryconversationsresponsedataid.md
  - docs/models/components/queryconversationsresponsedatatype.md
  - docs/models/components/queryconversationsresponsedatauserid.md
  - docs/models/components/queryconversationsresponsedatauserproperties.md
  - docs/models/components/queryeventsrequestbody.md
  - docs/models/components/queryeventsresponsebody.md
  - docs/models/components/queryeventsresponsebodystatus.md
  - docs/models/components/queryeventsresponsedata.md
  - docs/models/components/queryfeedbackrequestbody.md
  - docs/models/components/queryfeedbackresponsebody.md
  - docs/models/components/queryfeedbackresponsebodystatus.md
  - docs/models/components/queryfeedbackresponsedata.md
  - docs/models/components/queryfeedbackresponsedataid.md
  - docs/models/components/queryfeedbackresponsedatareasons.md
  - docs/models/components/queryfeedbackresponsedataresulttype.md
  - docs/models/components/queryfeedbackresponsedatasources.md
  - docs/models/components/queryfeedbackresponsedatatype.md
  - docs/models/components/queryfeedbackresponsedatauserid.md
  - docs/models/components/queryfeedbackresponsedatauserproperties.md
  - docs/models/components/querysemanticthreadsrequestbody.md
  - docs/models/components/querysemanticthreadsresponsebody.md
  - docs/models/components/querysemanticthreadsresponsebodystatus.md
  - docs/models/components/querysemanticthreadsresponsedata.md
  - docs/models/components/querysemanticthreadsresponsedataid.md
  - docs/models/components/querysemanticthreadsresponsedatauserid.md
  - docs/models/components/querysemanticthreadsresponsedatauserproperties.md
  - docs/models/components/reasons.md
  - docs/models/components/role.md
  - docs/models/components/security.md
  - docs/models/components/selectconversationevent.md
  - docs/models/components/selectconversationevententitytype.md
  - docs/models/components/selectconversationeventid.md
  - docs/models/components/selectconversationeventuserid.md
  - docs/models/components/selectconversationeventuserproperties.md
  - docs/models/components/selectevent.md
  - docs/models/components/selectmessageevent.md
  - docs/models/components/selectmessageevententitytype.md
  - docs/models/components/selectmessageeventid.md
  - docs/models/components/selectmessageeventuserid.md
  - docs/models/components/selectmessageeventuserproperties.md
  - docs/models/components/selectsearchevent.md
  - docs/models/components/selectsearchevententitytype.md
  - docs/models/components/selectsearcheventid.md
  - docs/models/components/selectsearcheventuserid.md
  - docs/models/components/selectsearcheventuserproperties.md
  - docs/models/components/semanticthreadaggregationselection.md
  - docs/models/components/semanticthreadaggregationselectionaggregation.md
  - docs/models/components/semanticthreadaggregationselectionfield.md
  - docs/models/components/semanticthreadaggregationselectiontype.md
  - docs/models/components/semanticthreadfield.md
  - docs/models/components/semanticthreadfilter.md
  - docs/models/components/semanticthreadfilterand.md
  - docs/models/components/semanticthreadfilterandand.md
  - docs/models/components/semanticthreadfiltercondition.md
  - docs/models/components/semanticthreadfilterconditioncondition.md
  - docs/models/components/semanticthreadfilterconditionvalue7.md
  - docs/models/components/semanticthreadfilterconditionvaluevalue.md
  - docs/models/components/semanticthreadfilterconditionvaluevalue4.md
  - docs/models/components/semanticthreadfilteror.md
  - docs/models/components/semanticthreadfilteroror.md
  - docs/models/components/semanticthreadgroupby.md
  - docs/models/components/semanticthreadorderby.md
  - docs/models/components/semanticthreadorderbydirection.md
  - docs/models/components/semanticthreadorderbyfield.md
  - docs/models/components/semanticthreadresultitem.md
  - docs/models/components/semanticthreadselection.md
  - docs/models/components/semanticthreadsimplefieldselection.md
  - docs/models/components/semanticthreadsimplefieldselectionfield.md
  - docs/models/components/semanticthreadsimplefieldselectiontype.md
  - docs/models/components/semanticthreadtimebasedgroupbyselection.md
  - docs/models/components/semanticthreadtimebasedgroupbyselectionfield.md
  - docs/models/components/semanticthreadtimebasedgroupbyselectiontype.md
  - docs/models/components/seven.md
  - docs/models/components/sources.md
  - docs/models/components/status.md
  - docs/models/components/supportcopilotconversation.md
  - docs/models/components/supportcopilotconversationid.md
  - docs/models/components/supportcopilotconversationtype.md
  - docs/models/components/supportcopilotconversationuserid.md
  - docs/models/components/supportcopilotconversationuserproperties.md
  - docs/models/components/supportcopilotconversationvisibility.md
  - docs/models/components/supportcopilotmessage.md
  - docs/models/components/supportcopilotmessageid.md
  - docs/models/components/supportcopilotmessagelinks.md
  - docs/models/components/supportcopilotmessagelinkstype.md
  - docs/models/components/supportcopilotmessagetype.md
  - docs/models/components/supportcopilotmessagetype1.md
  - docs/models/components/supportcopilotmessageuserid.md
  - docs/models/components/supportcopilotmessageuserproperties.md
  - docs/models/components/supportticketconversation.md
  - docs/models/components/supportticketconversationid.md
  - docs/models/components/supportticketconversationtype.md
  - docs/models/components/supportticketconversationuserid.md
  - docs/models/components/supportticketconversationuserproperties.md
  - docs/models/components/supportticketconversationvisibility.md
  - docs/models/components/supportticketmessage.md
  - docs/models/components/supportticketmessageid.md
  - docs/models/components/supportticketmessagelinks.md
  - docs/models/components/supportticketmessagelinkstype.md
  - docs/models/components/supportticketmessagetype.md
  - docs/models/components/supportticketmessageuserid.md
  - docs/models/components/supportticketmessageuserproperties.md
  - docs/models/components/timeunit.md
  - docs/models/components/type.md
  - docs/models/components/type1.md
  - docs/models/components/userid.md
  - docs/models/components/userproperties.md
  - docs/models/components/value.md
  - docs/models/components/value4.md
  - docs/models/components/views.md
  - docs/models/components/visibility.md
  - docs/models/components/where.md
  - docs/models/errors/badrequest.md
  - docs/models/errors/badrequestcode.md
  - docs/models/errors/code.md
  - docs/models/errors/errort.md
  - docs/models/errors/forbidden.md
  - docs/models/errors/forbiddencode.md
  - docs/models/errors/forbiddenerror.md
  - docs/models/errors/forbiddenerrorcode.md
  - docs/models/errors/internalservererror.md
  - docs/models/errors/internalservererrorcode.md
  - docs/models/errors/internalservererrorerror.md
  - docs/models/errors/internalservererrorerrorcode.md
  - docs/models/errors/notfound.md
  - docs/models/errors/notfoundcode.md
  - docs/models/errors/notfounderror.md
  - docs/models/errors/notfounderrorcode.md
  - docs/models/errors/unauthorized.md
  - docs/models/errors/unauthorizedcode.md
  - docs/models/errors/unauthorizederror.md
  - docs/models/errors/unauthorizederrorcode.md
  - docs/models/errors/unprocessableentity.md
  - docs/models/errors/unprocessableentitycode.md
  - docs/models/errors/unprocessableentityerror.md
  - docs/models/errors/unprocessableentityerrorcode.md
  - docs/models/operations/data.md
  - docs/models/operations/deleteconversationrequest.md
  - docs/models/operations/deleteconversationresponsebody.md
  - docs/models/operations/deleteconversationsecurity.md
  - docs/models/operations/getallconversationrequest.md
  - docs/models/operations/getallconversationresponsebody.md
  - docs/models/operations/getallfeedbackrequest.md
  - docs/models/operations/getconversationbyexternalidrequest.md
  - docs/models/operations/getconversationrequest.md
  - docs/models/operations/getconversationsecurity.md
  - docs/models/operations/getfeedbackbyidfeedbacktype.md
  - docs/models/operations/getfeedbackbyidid.md
  - docs/models/operations/getfeedbackbyidreasons.md
  - docs/models/operations/getfeedbackbyidrequest.md
  - docs/models/operations/getfeedbackbyidresponsebody.md
  - docs/models/operations/getfeedbackbyidsources.md
  - docs/models/operations/getfeedbackbyidtype.md
  - docs/models/operations/getfeedbackbyiduserid.md
  - docs/models/operations/getfeedbackbyiduserproperties.md
  - docs/models/operations/id.md
  - docs/models/operations/logconversationsecurity.md
  - docs/models/operations/logeventsecurity.md
  - docs/models/operations/logfeedbackfeedbackresponsetype.md
  - docs/models/operations/logfeedbackfeedbacktype.md
  - docs/models/operations/logfeedbackid.md
  - docs/models/operations/logfeedbackreasons.md
  - docs/models/operations/logfeedbackrequestbody.md
  - docs/models/operations/logfeedbackresponsebody.md
  - docs/models/operations/logfeedbacksources.md
  - docs/models/operations/logfeedbacktype.md
  - docs/models/operations/logfeedbackuserid.md
  - docs/models/operations/logfeedbackuserproperties.md
  - docs/models/operations/reasons.md
  - docs/models/operations/result.md
  - docs/models/operations/sources.md
  - docs/models/operations/topsearchqueriesrequest.md
  - docs/models/operations/topsearchqueriesresponsebody.md
  - docs/models/operations/type.md
  - docs/models/operations/userid.md
  - docs/models/operations/userproperties.md
  - docs/models/operations/weeklysearchusersdata.md
  - docs/models/operations/weeklysearchusersrequest.md
  - docs/models/operations/weeklysearchusersresponsebody.md
  - docs/models/operations/weeklysearchusersresult.md
  - docs/sdks/conversation/README.md
  - docs/sdks/conversations/README.md
  - docs/sdks/events/README.md
  - docs/sdks/feedback/README.md
  - docs/sdks/inkeepanalytics/README.md
  - docs/sdks/query/README.md
  - eslint.config.mjs
  - examples/.env.template
  - examples/README.md
  - examples/package.json
  - examples/topSearchQueries.example.ts
  - jsr.json
  - package.json
  - src/core.ts
  - src/funcs/conversationGetConversationByExternalId.ts
  - src/funcs/conversationsDelete.ts
  - src/funcs/conversationsGet.ts
  - src/funcs/conversationsList.ts
  - src/funcs/conversationsLog.ts
  - src/funcs/eventsLog.ts
  - src/funcs/feedbackGetFeedbackById.ts
  - src/funcs/feedbackList.ts
  - src/funcs/feedbackSubmit.ts
  - src/funcs/queryConversations.ts
  - src/funcs/queryExportSemanticThreadsQueryResults.ts
  - src/funcs/queryQueryEvents.ts
  - src/funcs/queryQueryFeedback.ts
  - src/funcs/queryQueryPropertyKeys.ts
  - src/funcs/queryQueryPropertyValues.ts
  - src/funcs/queryQuerySemanticThreads.ts
  - src/funcs/topSearchQueries.ts
  - src/funcs/weeklySearchUsers.ts
  - src/hooks/hooks.ts
  - src/hooks/index.ts
  - src/hooks/types.ts
  - src/index.ts
  - src/lib/base64.ts
  - src/lib/config.ts
  - src/lib/dlv.ts
  - src/lib/encodings.ts
  - src/lib/env.ts
  - src/lib/files.ts
  - src/lib/http.ts
  - src/lib/is-plain-object.ts
  - src/lib/logger.ts
  - src/lib/matchers.ts
  - src/lib/primitives.ts
  - src/lib/retries.ts
  - src/lib/schemas.ts
  - src/lib/sdks.ts
  - src/lib/security.ts
  - src/lib/url.ts
  - src/mcp-server/build.mts
  - src/mcp-server/cli.ts
  - src/mcp-server/cli/start/command.ts
  - src/mcp-server/cli/start/impl.ts
  - src/mcp-server/console-logger.ts
  - src/mcp-server/extensions.ts
  - src/mcp-server/mcp-server.ts
  - src/mcp-server/prompts.ts
  - src/mcp-server/resources.ts
  - src/mcp-server/scopes.ts
  - src/mcp-server/server.ts
  - src/mcp-server/shared.ts
  - src/mcp-server/tools.ts
  - src/mcp-server/tools/conversationGetConversationByExternalId.ts
  - src/mcp-server/tools/conversationsList.ts
  - src/mcp-server/tools/feedbackGetFeedbackById.ts
  - src/mcp-server/tools/feedbackList.ts
  - src/mcp-server/tools/feedbackSubmit.ts
  - src/mcp-server/tools/queryConversations.ts
  - src/mcp-server/tools/queryExportSemanticThreadsQueryResults.ts
  - src/mcp-server/tools/queryQueryEvents.ts
  - src/mcp-server/tools/queryQueryFeedback.ts
  - src/mcp-server/tools/queryQueryPropertyKeys.ts
  - src/mcp-server/tools/queryQueryPropertyValues.ts
  - src/mcp-server/tools/queryQuerySemanticThreads.ts
  - src/mcp-server/tools/topSearchQueries.ts
  - src/mcp-server/tools/weeklySearchUsers.ts
  - src/models/components/conversation.ts
  - src/models/components/conversationsaggregationselection.ts
  - src/models/components/conversationsfield.ts
  - src/models/components/conversationsfilter.ts
  - src/models/components/conversationsfilterand.ts
  - src/models/components/conversationsfiltercondition.ts
  - src/models/components/conversationsfilteror.ts
  - src/models/components/conversationsgroupby.ts
  - src/models/components/conversationsorderby.ts
  - src/models/components/conversationsselection.ts
  - src/models/components/conversationssimplefieldselection.ts
  - src/models/components/conversationstimebasedgroupbyselection.ts
  - src/models/components/createconversation.ts
  - src/models/components/createopenaiconversation.ts
  - src/models/components/createsupportcopilotconversation.ts
  - src/models/components/createsupportticketconversation.ts
  - src/models/components/eventsaggregationselection.ts
  - src/models/components/eventsfield.ts
  - src/models/components/eventsfilter.ts
  - src/models/components/eventsfilterand.ts
  - src/models/components/eventsfiltercondition.ts
  - src/models/components/eventsfilteror.ts
  - src/models/components/eventsgroupby.ts
  - src/models/components/eventsorderby.ts
  - src/models/components/eventsselection.ts
  - src/models/components/eventssimplefieldselection.ts
  - src/models/components/eventstimebasedgroupbyselection.ts
  - src/models/components/feedbackaggregationselection.ts
  - src/models/components/feedbackfield.ts
  - src/models/components/feedbackfilter.ts
  - src/models/components/feedbackfilterand.ts
  - src/models/components/feedbackfiltercondition.ts
  - src/models/components/feedbackfilteror.ts
  - src/models/components/feedbackgroupby.ts
  - src/models/components/feedbackorderby.ts
  - src/models/components/feedbackselection.ts
  - src/models/components/feedbacksimplefieldselection.ts
  - src/models/components/feedbacktimebasedgroupbyselection.ts
  - src/models/components/filteroperator.ts
  - src/models/components/getallfeedbackresponse.ts
  - src/models/components/index.ts
  - src/models/components/insertconversationevent.ts
  - src/models/components/insertevent.ts
  - src/models/components/insertmessageevent.ts
  - src/models/components/insertsearchevent.ts
  - src/models/components/message.ts
  - src/models/components/openaichatcompletionmessage.ts
  - src/models/components/openaicontentitem.ts
  - src/models/components/openaiconversation.ts
  - src/models/components/openaiextendedmessage.ts
  - src/models/components/openaiimageurlobject.ts
  - src/models/components/openaitoolcall.ts
  - src/models/components/openaitoolcallfunction.ts
  - src/models/components/propertykeysrequestbody.ts
  - src/models/components/propertykeysresponsebody.ts
  - src/models/components/propertyvaluesrequestbody.ts
  - src/models/components/propertyvaluesresponsebody.ts
  - src/models/components/queryconversationsrequestbody.ts
  - src/models/components/queryconversationsresponsebody.ts
  - src/models/components/queryconversationsresponsedata.ts
  - src/models/components/queryeventsrequestbody.ts
  - src/models/components/queryeventsresponsebody.ts
  - src/models/components/queryeventsresponsedata.ts
  - src/models/components/queryfeedbackrequestbody.ts
  - src/models/components/queryfeedbackresponsebody.ts
  - src/models/components/queryfeedbackresponsedata.ts
  - src/models/components/querysemanticthreadsrequestbody.ts
  - src/models/components/querysemanticthreadsresponsebody.ts
  - src/models/components/querysemanticthreadsresponsedata.ts
  - src/models/components/security.ts
  - src/models/components/selectconversationevent.ts
  - src/models/components/selectevent.ts
  - src/models/components/selectmessageevent.ts
  - src/models/components/selectsearchevent.ts
  - src/models/components/semanticthreadaggregationselection.ts
  - src/models/components/semanticthreadfield.ts
  - src/models/components/semanticthreadfilter.ts
  - src/models/components/semanticthreadfilterand.ts
  - src/models/components/semanticthreadfiltercondition.ts
  - src/models/components/semanticthreadfilteror.ts
  - src/models/components/semanticthreadgroupby.ts
  - src/models/components/semanticthreadorderby.ts
  - src/models/components/semanticthreadselection.ts
  - src/models/components/semanticthreadsimplefieldselection.ts
  - src/models/components/semanticthreadtimebasedgroupbyselection.ts
  - src/models/components/supportcopilotconversation.ts
  - src/models/components/supportcopilotmessage.ts
  - src/models/components/supportticketconversation.ts
  - src/models/components/supportticketmessage.ts
  - src/models/components/timeunit.ts
  - src/models/errors/apierror.ts
  - src/models/errors/badrequest.ts
  - src/models/errors/forbidden.ts
  - src/models/errors/httpclienterrors.ts
  - src/models/errors/index.ts
  - src/models/errors/inkeepanalyticserror.ts
  - src/models/errors/internalservererror.ts
  - src/models/errors/notfound.ts
  - src/models/errors/responsevalidationerror.ts
  - src/models/errors/sdkvalidationerror.ts
  - src/models/errors/unauthorized.ts
  - src/models/errors/unprocessableentity.ts
  - src/models/operations/deleteconversation.ts
  - src/models/operations/getallconversation.ts
  - src/models/operations/getallfeedback.ts
  - src/models/operations/getconversation.ts
  - src/models/operations/getconversationbyexternalid.ts
  - src/models/operations/getfeedbackbyid.ts
  - src/models/operations/index.ts
  - src/models/operations/logconversation.ts
  - src/models/operations/logevent.ts
  - src/models/operations/logfeedback.ts
  - src/models/operations/topsearchqueries.ts
  - src/models/operations/weeklysearchusers.ts
  - src/react-query/_context.tsx
  - src/react-query/_types.ts
  - src/react-query/conversationGetConversationByExternalId.ts
  - src/react-query/conversationsDelete.ts
  - src/react-query/conversationsGet.ts
  - src/react-query/conversationsList.ts
  - src/react-query/conversationsLog.ts
  - src/react-query/eventsLog.ts
  - src/react-query/feedbackGetFeedbackById.ts
  - src/react-query/feedbackList.ts
  - src/react-query/feedbackSubmit.ts
  - src/react-query/index.ts
  - src/react-query/queryConversations.ts
  - src/react-query/queryExportSemanticThreadsQueryResults.ts
  - src/react-query/queryQueryEvents.ts
  - src/react-query/queryQueryFeedback.ts
  - src/react-query/queryQueryPropertyKeys.ts
  - src/react-query/queryQueryPropertyValues.ts
  - src/react-query/queryQuerySemanticThreads.ts
  - src/react-query/topSearchQueries.ts
  - src/react-query/weeklySearchUsers.ts
  - src/sdk/conversation.ts
  - src/sdk/conversations.ts
  - src/sdk/events.ts
  - src/sdk/feedback.ts
  - src/sdk/index.ts
  - src/sdk/query.ts
  - src/sdk/sdk.ts
  - src/types/async.ts
  - src/types/blobs.ts
  - src/types/constdatetime.ts
  - src/types/enums.ts
  - src/types/fp.ts
  - src/types/index.ts
  - src/types/operations.ts
  - src/types/rfcdate.ts
  - src/types/streams.ts
  - tsconfig.json
examples:
  topSearchQueries:
    speakeasy-default-top-search-queries:
      responses:
        "200":
          application/json: {"data": {"result": [{"search_query": "<value>", "count": "<value>"}], "total": 6920.24}}
        "400":
          application/problem+json: {"title": "Bad Request", "status": 400, "detail": "Bad Request", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "bad_request", "error": {"code": "bad_request", "message": "Bad Request"}}
        "401":
          application/problem+json: {"title": "Unauthorized", "status": 401, "detail": "Unauthorized", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "unauthorized", "error": {"code": "unauthorized", "message": "Unauthorized"}}
        "403":
          application/problem+json: {"title": "Forbidden", "status": 403, "detail": "Forbidden", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "forbidden", "error": {"code": "forbidden", "message": "Forbidden"}}
        "422":
          application/problem+json: {"title": "Unprocessable Entity", "status": 422, "detail": "Unprocessable Entity", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "unprocessable_entity", "error": {"code": "unprocessable_entity", "message": "Unprocessable Entity"}}
        "500":
          application/problem+json: {"title": "Internal Server Error", "status": 500, "detail": "Internal Server Error", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "internal_server_error", "error": {"code": "internal_server_error", "message": "Internal Server Error"}}
  weeklySearchUsers:
    speakeasy-default-weekly-search-users:
      responses:
        "200":
          application/json: {"data": {"result": [], "total": 3099.99}}
        "400":
          application/problem+json: {"title": "Bad Request", "status": 400, "detail": "Bad Request", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "bad_request", "error": {"code": "bad_request", "message": "Bad Request"}}
        "401":
          application/problem+json: {"title": "Unauthorized", "status": 401, "detail": "Unauthorized", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "unauthorized", "error": {"code": "unauthorized", "message": "Unauthorized"}}
        "403":
          application/problem+json: {"title": "Forbidden", "status": 403, "detail": "Forbidden", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "forbidden", "error": {"code": "forbidden", "message": "Forbidden"}}
        "422":
          application/problem+json: {"title": "Unprocessable Entity", "status": 422, "detail": "Unprocessable Entity", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "unprocessable_entity", "error": {"code": "unprocessable_entity", "message": "Unprocessable Entity"}}
        "500":
          application/problem+json: {"title": "Internal Server Error", "status": 500, "detail": "Internal Server Error", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "internal_server_error", "error": {"code": "internal_server_error", "message": "Internal Server Error"}}
  logConversation:
    speakeasy-default-log-conversation:
      requestBody:
        application/json: {"type": "support_copilot", "messages": [{"role": "<value>", "userProperties": {"identificationType": "COOKIED"}}]}
      responses:
        "200":
          application/json: {"id": "<id>", "externalId": "<id>", "externalUrl": "https://dull-agreement.name", "type": "openai", "supportTicketConversationId": "<id>", "createdAt": "1710447916221", "updatedAt": "1735645816798", "projectId": "<id>", "integrationId": null, "visibility": "public", "messages": [], "messagesOpenAIFormat": [{"role": "user", "content": "<value>"}]}
        "400":
          application/problem+json: {"title": "Bad Request", "status": 400, "detail": "Bad Request", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "bad_request", "error": {"code": "bad_request", "message": "Bad Request"}}
        "401":
          application/problem+json: {"title": "Unauthorized", "status": 401, "detail": "Unauthorized", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "unauthorized", "error": {"code": "unauthorized", "message": "Unauthorized"}}
        "403":
          application/problem+json: {"title": "Forbidden", "status": 403, "detail": "Forbidden", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "forbidden", "error": {"code": "forbidden", "message": "Forbidden"}}
        "422":
          application/problem+json: {"title": "Unprocessable Entity", "status": 422, "detail": "Unprocessable Entity", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "unprocessable_entity", "error": {"code": "unprocessable_entity", "message": "Unprocessable Entity"}}
        "500":
          application/problem+json: {"title": "Internal Server Error", "status": 500, "detail": "Internal Server Error", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "internal_server_error", "error": {"code": "internal_server_error", "message": "Internal Server Error"}}
  getAllConversation:
    speakeasy-default-get-all-conversation:
      parameters:
        query:
          limit: 20
          offset: 0
      responses:
        "200":
          application/json: {"conversations": [{"id": "<id>", "externalId": "<id>", "externalUrl": "https://potable-equal.net", "type": "openai", "supportTicketConversationId": "<id>", "createdAt": "1723170898887", "updatedAt": "1735676356412", "projectId": "<id>", "integrationId": "<id>", "visibility": "public", "messages": [], "messagesOpenAIFormat": []}], "total": 1243.68, "pageSize": 6415.32, "count": 3551.39}
        "400":
          application/problem+json: {"title": "Bad Request", "status": 400, "detail": "Bad Request", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "bad_request", "error": {"code": "bad_request", "message": "Bad Request"}}
        "401":
          application/problem+json: {"title": "Unauthorized", "status": 401, "detail": "Unauthorized", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "unauthorized", "error": {"code": "unauthorized", "message": "Unauthorized"}}
        "403":
          application/problem+json: {"title": "Forbidden", "status": 403, "detail": "Forbidden", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "forbidden", "error": {"code": "forbidden", "message": "Forbidden"}}
        "404":
          application/problem+json: {"title": "Not Found", "status": 404, "detail": "Not Found", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "not_found", "error": {"code": "not_found", "message": "Not Found"}}
        "422":
          application/problem+json: {"title": "Unprocessable Entity", "status": 422, "detail": "Unprocessable Entity", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "unprocessable_entity", "error": {"code": "unprocessable_entity", "message": "Unprocessable Entity"}}
        "500":
          application/problem+json: {"title": "Internal Server Error", "status": 500, "detail": "Internal Server Error", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "internal_server_error", "error": {"code": "internal_server_error", "message": "Internal Server Error"}}
  getConversation:
    speakeasy-default-get-conversation:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {"id": "<id>", "externalId": "<id>", "externalUrl": null, "type": "support_copilot", "supportTicketConversationId": "<id>", "createdAt": "1709372366877", "updatedAt": "1735637831816", "projectId": "<id>", "integrationId": "<id>", "visibility": "private", "messages": []}
        "400":
          application/problem+json: {"title": "Bad Request", "status": 400, "detail": "Bad Request", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "bad_request", "error": {"code": "bad_request", "message": "Bad Request"}}
        "401":
          application/problem+json: {"title": "Unauthorized", "status": 401, "detail": "Unauthorized", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "unauthorized", "error": {"code": "unauthorized", "message": "Unauthorized"}}
        "403":
          application/problem+json: {"title": "Forbidden", "status": 403, "detail": "Forbidden", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "forbidden", "error": {"code": "forbidden", "message": "Forbidden"}}
        "404":
          application/problem+json: {"title": "Not Found", "status": 404, "detail": "Not Found", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "not_found", "error": {"code": "not_found", "message": "Not Found"}}
        "422":
          application/problem+json: {"title": "Unprocessable Entity", "status": 422, "detail": "Unprocessable Entity", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "unprocessable_entity", "error": {"code": "unprocessable_entity", "message": "Unprocessable Entity"}}
        "500":
          application/problem+json: {"title": "Internal Server Error", "status": 500, "detail": "Internal Server Error", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "internal_server_error", "error": {"code": "internal_server_error", "message": "Internal Server Error"}}
  deleteConversation:
    speakeasy-default-delete-conversation:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {"success": true, "message": "<value>"}
        "400":
          application/problem+json: {"title": "Bad Request", "status": 400, "detail": "Bad Request", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "bad_request", "error": {"code": "bad_request", "message": "Bad Request"}}
        "401":
          application/problem+json: {"title": "Unauthorized", "status": 401, "detail": "Unauthorized", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "unauthorized", "error": {"code": "unauthorized", "message": "Unauthorized"}}
        "403":
          application/problem+json: {"title": "Forbidden", "status": 403, "detail": "Forbidden", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "forbidden", "error": {"code": "forbidden", "message": "Forbidden"}}
        "404":
          application/problem+json: {"title": "Not Found", "status": 404, "detail": "Not Found", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "not_found", "error": {"code": "not_found", "message": "Not Found"}}
        "422":
          application/problem+json: {"title": "Unprocessable Entity", "status": 422, "detail": "Unprocessable Entity", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "unprocessable_entity", "error": {"code": "unprocessable_entity", "message": "Unprocessable Entity"}}
        "500":
          application/problem+json: {"title": "Internal Server Error", "status": 500, "detail": "Internal Server Error", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "internal_server_error", "error": {"code": "internal_server_error", "message": "Internal Server Error"}}
  getConversationByExternalId:
    speakeasy-default-get-conversation-by-external-id:
      parameters:
        path:
          externalId: "<id>"
      responses:
        "200":
          application/json: {"id": "<id>", "externalId": "<id>", "externalUrl": "https://shimmering-passport.name", "type": "support_ticket", "supportTicketConversationId": "<id>", "createdAt": "1708947030077", "updatedAt": "1735631602145", "projectId": "<id>", "integrationId": "<id>", "visibility": null, "messages": []}
        "400":
          application/problem+json: {"title": "Bad Request", "status": 400, "detail": "Bad Request", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "bad_request", "error": {"code": "bad_request", "message": "Bad Request"}}
        "401":
          application/problem+json: {"title": "Unauthorized", "status": 401, "detail": "Unauthorized", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "unauthorized", "error": {"code": "unauthorized", "message": "Unauthorized"}}
        "403":
          application/problem+json: {"title": "Forbidden", "status": 403, "detail": "Forbidden", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "forbidden", "error": {"code": "forbidden", "message": "Forbidden"}}
        "404":
          application/problem+json: {"title": "Not Found", "status": 404, "detail": "Not Found", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "not_found", "error": {"code": "not_found", "message": "Not Found"}}
        "422":
          application/problem+json: {"title": "Unprocessable Entity", "status": 422, "detail": "Unprocessable Entity", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "unprocessable_entity", "error": {"code": "unprocessable_entity", "message": "Unprocessable Entity"}}
        "500":
          application/problem+json: {"title": "Internal Server Error", "status": 500, "detail": "Internal Server Error", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "internal_server_error", "error": {"code": "internal_server_error", "message": "Internal Server Error"}}
  submitFeedback:
    speakeasy-default-submit-feedback:
      requestBody:
        application/json: {"type": "positive", "messageId": "<id>", "userProperties": null}
      responses:
        "200":
          application/json: {"id": "<id>", "type": "negative", "messageId": "<id>", "createdAt": "1704799406060", "userProperties": {"identificationType": "COOKIED"}}
        "400":
          application/problem+json: {"title": "Bad Request", "status": 400, "detail": "Bad Request", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "bad_request", "error": {"code": "bad_request", "message": "Bad Request"}}
        "401":
          application/problem+json: {"title": "Unauthorized", "status": 401, "detail": "Unauthorized", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "unauthorized", "error": {"code": "unauthorized", "message": "Unauthorized"}}
        "403":
          application/problem+json: {"title": "Forbidden", "status": 403, "detail": "Forbidden", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "forbidden", "error": {"code": "forbidden", "message": "Forbidden"}}
        "422":
          application/problem+json: {"title": "Unprocessable Entity", "status": 422, "detail": "Unprocessable Entity", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "unprocessable_entity", "error": {"code": "unprocessable_entity", "message": "Unprocessable Entity"}}
        "500":
          application/problem+json: {"title": "Internal Server Error", "status": 500, "detail": "Internal Server Error", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "internal_server_error", "error": {"code": "internal_server_error", "message": "Internal Server Error"}}
  getAllFeedback:
    speakeasy-default-get-all-feedback:
      parameters:
        query:
          limit: 10
          offset: 0
      responses:
        "200":
          application/json: {"positiveFeedbackCount": 6961.56, "negativeFeedbackCount": 4153.74, "positiveFeedback": [{"id": "<id>", "type": "positive", "messageId": "<id>", "createdAt": "1713328476280", "details": "<value>", "userProperties": {"identificationType": "COOKIED"}, "conversation": {"id": "<id>", "externalId": "<id>", "externalUrl": "https://grizzled-editor.org/", "type": "openai", "supportTicketConversationId": "<id>", "createdAt": "1710817203853", "updatedAt": "1735687690121", "projectId": "<id>", "integrationId": "<id>", "visibility": "public", "messages": [], "messagesOpenAIFormat": [{"role": "system", "content": "<value>"}]}, "message": {"id": "<id>", "type": "support_copilot", "externalId": "<id>", "externalUrl": "https://linear-collaboration.net", "conversationId": "<id>", "createdAt": "1715477061988", "updatedAt": "1735684129218", "role": "<value>", "content": null}}], "negativeFeedback": []}
        "400":
          application/problem+json: {"title": "Bad Request", "status": 400, "detail": "Bad Request", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "bad_request", "error": {"code": "bad_request", "message": "Bad Request"}}
        "401":
          application/problem+json: {"title": "Unauthorized", "status": 401, "detail": "Unauthorized", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "unauthorized", "error": {"code": "unauthorized", "message": "Unauthorized"}}
        "403":
          application/problem+json: {"title": "Forbidden", "status": 403, "detail": "Forbidden", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "forbidden", "error": {"code": "forbidden", "message": "Forbidden"}}
        "404":
          application/problem+json: {"title": "Not Found", "status": 404, "detail": "Not Found", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "not_found", "error": {"code": "not_found", "message": "Not Found"}}
        "422":
          application/problem+json: {"title": "Unprocessable Entity", "status": 422, "detail": "Unprocessable Entity", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "unprocessable_entity", "error": {"code": "unprocessable_entity", "message": "Unprocessable Entity"}}
        "500":
          application/problem+json: {"title": "Internal Server Error", "status": 500, "detail": "Internal Server Error", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "internal_server_error", "error": {"code": "internal_server_error", "message": "Internal Server Error"}}
  getFeedbackById:
    speakeasy-default-get-feedback-by-id:
      parameters:
        path:
          id: "feedback-id-123"
      responses:
        "200":
          application/json: {"id": "<id>", "type": "negative", "messageId": "<id>", "createdAt": "1722259016960", "details": "<value>", "userProperties": {"identificationType": "COOKIED"}, "conversation": {"id": "<id>", "externalId": "<id>", "externalUrl": "https://difficult-accountability.info/", "type": "support_copilot", "supportTicketConversationId": "<id>", "createdAt": "1712671280110", "updatedAt": "1735652249363", "projectId": "<id>", "integrationId": "<id>", "visibility": "private", "messages": [{"id": "<id>", "type": "support_copilot", "externalId": "<id>", "externalUrl": "https://merry-solution.com", "conversationId": "<id>", "createdAt": "1706159703123", "updatedAt": "1735669717348", "role": "<value>", "content": "<value>", "userProperties": {"identificationType": "COOKIED"}}]}, "message": {"id": "<id>", "type": "support_copilot", "externalId": "<id>", "externalUrl": "https://heavenly-reservation.info", "conversationId": "<id>", "createdAt": "1715541556343", "updatedAt": "1735675403237", "role": "<value>", "content": "<value>"}}
        "400":
          application/problem+json: {"title": "Bad Request", "status": 400, "detail": "Bad Request", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "bad_request", "error": {"code": "bad_request", "message": "Bad Request"}}
        "401":
          application/problem+json: {"title": "Unauthorized", "status": 401, "detail": "Unauthorized", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "unauthorized", "error": {"code": "unauthorized", "message": "Unauthorized"}}
        "403":
          application/problem+json: {"title": "Forbidden", "status": 403, "detail": "Forbidden", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "forbidden", "error": {"code": "forbidden", "message": "Forbidden"}}
        "404":
          application/problem+json: {"title": "Not Found", "status": 404, "detail": "Not Found", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "not_found", "error": {"code": "not_found", "message": "Not Found"}}
        "422":
          application/problem+json: {"title": "Unprocessable Entity", "status": 422, "detail": "Unprocessable Entity", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "unprocessable_entity", "error": {"code": "unprocessable_entity", "message": "Unprocessable Entity"}}
        "500":
          application/problem+json: {"title": "Internal Server Error", "status": 500, "detail": "Internal Server Error", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "internal_server_error", "error": {"code": "internal_server_error", "message": "Internal Server Error"}}
  logEvent:
    speakeasy-default-log-event:
      requestBody:
        application/json: {"type": "<value>", "messageId": "<id>", "entityType": "message"}
      responses:
        "200":
          application/json: {"id": "<id>", "type": "<value>", "conversationId": "<id>", "createdAt": "1710237716988", "projectId": "<id>", "integrationId": "<id>", "entityType": "conversation"}
        "400":
          application/problem+json: {"title": "Bad Request", "status": 400, "detail": "Bad Request", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "bad_request", "error": {"code": "bad_request", "message": "Bad Request"}}
        "401":
          application/problem+json: {"title": "Unauthorized", "status": 401, "detail": "Unauthorized", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "unauthorized", "error": {"code": "unauthorized", "message": "Unauthorized"}}
        "403":
          application/problem+json: {"title": "Forbidden", "status": 403, "detail": "Forbidden", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "forbidden", "error": {"code": "forbidden", "message": "Forbidden"}}
        "422":
          application/problem+json: {"title": "Unprocessable Entity", "status": 422, "detail": "Unprocessable Entity", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "unprocessable_entity", "error": {"code": "unprocessable_entity", "message": "Unprocessable Entity"}}
        "500":
          application/problem+json: {"title": "Internal Server Error", "status": 500, "detail": "Internal Server Error", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "internal_server_error", "error": {"code": "internal_server_error", "message": "Internal Server Error"}}
  queryConversations:
    speakeasy-default-query-conversations:
      requestBody:
        application/json: {"notes": "Count of support ticket conversations by integration"}
      responses:
        "200":
          application/json: {"status": "ok", "data": {"result": [{"userProperties": {"identificationType": "COOKIED"}}], "total": 9481.48, "pageSize": 7362.16, "count": 63.77}}
        "400":
          application/problem+json: {"title": "Bad Request", "status": 400, "detail": "Bad Request", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "bad_request", "error": {"code": "bad_request", "message": "Bad Request"}}
        "401":
          application/problem+json: {"title": "Unauthorized", "status": 401, "detail": "Unauthorized", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "unauthorized", "error": {"code": "unauthorized", "message": "Unauthorized"}}
        "403":
          application/problem+json: {"title": "Forbidden", "status": 403, "detail": "Forbidden", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "forbidden", "error": {"code": "forbidden", "message": "Forbidden"}}
        "422":
          application/problem+json: {"title": "Unprocessable Entity", "status": 422, "detail": "Unprocessable Entity", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "unprocessable_entity", "error": {"code": "unprocessable_entity", "message": "Unprocessable Entity"}}
        "500":
          application/problem+json: {"title": "Internal Server Error", "status": 500, "detail": "Internal Server Error", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "internal_server_error", "error": {"code": "internal_server_error", "message": "Internal Server Error"}}
  queryEvents:
    speakeasy-default-query-events:
      requestBody:
        application/json: {"notes": "Count of events by type"}
      responses:
        "200":
          application/json: {"status": "ok", "data": {"result": [], "total": 5434.83, "pageSize": 8522.52, "count": 8854.8}}
        "400":
          application/problem+json: {"title": "Bad Request", "status": 400, "detail": "Bad Request", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "bad_request", "error": {"code": "bad_request", "message": "Bad Request"}}
        "401":
          application/problem+json: {"title": "Unauthorized", "status": 401, "detail": "Unauthorized", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "unauthorized", "error": {"code": "unauthorized", "message": "Unauthorized"}}
        "403":
          application/problem+json: {"title": "Forbidden", "status": 403, "detail": "Forbidden", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "forbidden", "error": {"code": "forbidden", "message": "Forbidden"}}
        "422":
          application/problem+json: {"title": "Unprocessable Entity", "status": 422, "detail": "Unprocessable Entity", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "unprocessable_entity", "error": {"code": "unprocessable_entity", "message": "Unprocessable Entity"}}
        "500":
          application/problem+json: {"title": "Internal Server Error", "status": 500, "detail": "Internal Server Error", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "internal_server_error", "error": {"code": "internal_server_error", "message": "Internal Server Error"}}
  queryFeedback:
    speakeasy-default-query-feedback:
      requestBody:
        application/json: {"notes": "Count of feedback by type"}
      responses:
        "200":
          application/json: {"status": "ok", "data": {"result": [{"status": "unreviewed"}], "total": 9528.15, "pageSize": 7967.05, "count": 3920.41}}
        "400":
          application/problem+json: {"title": "Bad Request", "status": 400, "detail": "Bad Request", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "bad_request", "error": {"code": "bad_request", "message": "Bad Request"}}
        "401":
          application/problem+json: {"title": "Unauthorized", "status": 401, "detail": "Unauthorized", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "unauthorized", "error": {"code": "unauthorized", "message": "Unauthorized"}}
        "403":
          application/problem+json: {"title": "Forbidden", "status": 403, "detail": "Forbidden", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "forbidden", "error": {"code": "forbidden", "message": "Forbidden"}}
        "422":
          application/problem+json: {"title": "Unprocessable Entity", "status": 422, "detail": "Unprocessable Entity", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "unprocessable_entity", "error": {"code": "unprocessable_entity", "message": "Unprocessable Entity"}}
        "500":
          application/problem+json: {"title": "Internal Server Error", "status": 500, "detail": "Internal Server Error", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "internal_server_error", "error": {"code": "internal_server_error", "message": "Internal Server Error"}}
  querySemanticThreads:
    speakeasy-default-query-semantic-threads:
      requestBody:
        application/json: {"notes": "Count of chat sessions with documentation gaps by integration"}
      responses:
        "200":
          application/json: {"status": "ok", "data": {"result": [{"userProperties": {"identificationType": "COOKIED"}}], "total": 3606.4, "pageSize": 3631.78, "count": 7147.51}}
        "400":
          application/problem+json: {"title": "Bad Request", "status": 400, "detail": "Bad Request", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "bad_request", "error": {"code": "bad_request", "message": "Bad Request"}}
        "401":
          application/problem+json: {"title": "Unauthorized", "status": 401, "detail": "Unauthorized", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "unauthorized", "error": {"code": "unauthorized", "message": "Unauthorized"}}
        "403":
          application/problem+json: {"title": "Forbidden", "status": 403, "detail": "Forbidden", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "forbidden", "error": {"code": "forbidden", "message": "Forbidden"}}
        "422":
          application/problem+json: {"title": "Unprocessable Entity", "status": 422, "detail": "Unprocessable Entity", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "unprocessable_entity", "error": {"code": "unprocessable_entity", "message": "Unprocessable Entity"}}
        "500":
          application/problem+json: {"title": "Internal Server Error", "status": 500, "detail": "Internal Server Error", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "internal_server_error", "error": {"code": "internal_server_error", "message": "Internal Server Error"}}
  exportSemanticThreadsQueryResults:
    speakeasy-default-export-semantic-threads-query-results:
      requestBody:
        application/json: {"notes": "Count of chat sessions with documentation gaps by integration"}
      responses:
        "200":
          text/csv: "x-file: example.file"
        "400":
          application/problem+json: {"title": "Bad Request", "status": 400, "detail": "Bad Request", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "bad_request", "error": {"code": "bad_request", "message": "Bad Request"}}
        "401":
          application/problem+json: {"title": "Unauthorized", "status": 401, "detail": "Unauthorized", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "unauthorized", "error": {"code": "unauthorized", "message": "Unauthorized"}}
        "403":
          application/problem+json: {"title": "Forbidden", "status": 403, "detail": "Forbidden", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "forbidden", "error": {"code": "forbidden", "message": "Forbidden"}}
        "422":
          application/problem+json: {"title": "Unprocessable Entity", "status": 422, "detail": "Unprocessable Entity", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "unprocessable_entity", "error": {"code": "unprocessable_entity", "message": "Unprocessable Entity"}}
        "500":
          application/problem+json: {"title": "Internal Server Error", "status": 500, "detail": "Internal Server Error", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "internal_server_error", "error": {"code": "internal_server_error", "message": "Internal Server Error"}}
  queryPropertyKeys:
    speakeasy-default-query-property-keys:
      requestBody:
        application/json: {"field": "properties", "views": ["events_view", "conversations_view", "semantic_threads_view", "feedback_view"]}
      responses:
        "200":
          application/json: {"results": ["theme"]}
        "400":
          application/problem+json: {"title": "Bad Request", "status": 400, "detail": "Bad Request", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "bad_request", "error": {"code": "bad_request", "message": "Bad Request"}}
        "401":
          application/problem+json: {"title": "Unauthorized", "status": 401, "detail": "Unauthorized", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "unauthorized", "error": {"code": "unauthorized", "message": "Unauthorized"}}
        "403":
          application/problem+json: {"title": "Forbidden", "status": 403, "detail": "Forbidden", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "forbidden", "error": {"code": "forbidden", "message": "Forbidden"}}
        "422":
          application/problem+json: {"title": "Unprocessable Entity", "status": 422, "detail": "Unprocessable Entity", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "unprocessable_entity", "error": {"code": "unprocessable_entity", "message": "Unprocessable Entity"}}
        "500":
          application/problem+json: {"title": "Internal Server Error", "status": 500, "detail": "Internal Server Error", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "internal_server_error", "error": {"code": "internal_server_error", "message": "Internal Server Error"}}
  queryPropertyValues:
    speakeasy-default-query-property-values:
      requestBody:
        application/json: {"field": "properties", "key": "theme", "views": ["events_view", "conversations_view", "semantic_threads_view", "feedback_view"], "limit": 100}
      responses:
        "200":
          application/json: {"results": ["dark"]}
        "400":
          application/problem+json: {"title": "Bad Request", "status": 400, "detail": "Bad Request", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "bad_request", "error": {"code": "bad_request", "message": "Bad Request"}}
        "401":
          application/problem+json: {"title": "Unauthorized", "status": 401, "detail": "Unauthorized", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "unauthorized", "error": {"code": "unauthorized", "message": "Unauthorized"}}
        "403":
          application/problem+json: {"title": "Forbidden", "status": 403, "detail": "Forbidden", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "forbidden", "error": {"code": "forbidden", "message": "Forbidden"}}
        "422":
          application/problem+json: {"title": "Unprocessable Entity", "status": 422, "detail": "Unprocessable Entity", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "unprocessable_entity", "error": {"code": "unprocessable_entity", "message": "Unprocessable Entity"}}
        "500":
          application/problem+json: {"title": "Internal Server Error", "status": 500, "detail": "Internal Server Error", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "internal_server_error", "error": {"code": "internal_server_error", "message": "Internal Server Error"}}
  logFeedback:
    speakeasy-default-log-feedback:
      requestBody:
        application/json: {"type": "positive", "messageId": "<id>", "details": "<value>", "userProperties": {"identificationType": "COOKIED"}}
      responses:
        "200":
          application/json: {"id": "<id>", "type": "negative", "messageId": "<id>", "createdAt": "1715498996076", "details": "<value>", "userProperties": null}
        "400":
          application/problem+json: {"title": "Bad Request", "status": 400, "detail": "Bad Request", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "bad_request", "error": {"code": "bad_request", "message": "Bad Request"}}
        "401":
          application/problem+json: {"title": "Unauthorized", "status": 401, "detail": "Unauthorized", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "unauthorized", "error": {"code": "unauthorized", "message": "Unauthorized"}}
        "403":
          application/problem+json: {"title": "Forbidden", "status": 403, "detail": "Forbidden", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "forbidden", "error": {"code": "forbidden", "message": "Forbidden"}}
        "422":
          application/problem+json: {"title": "Unprocessable Entity", "status": 422, "detail": "Unprocessable Entity", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "unprocessable_entity", "error": {"code": "unprocessable_entity", "message": "Unprocessable Entity"}}
        "500":
          application/problem+json: {"title": "Internal Server Error", "status": 500, "detail": "Internal Server Error", "instance": "/conversations/123", "requestId": "req_1234567890", "code": "internal_server_error", "error": {"code": "internal_server_error", "message": "Internal Server Error"}}
examplesVersion: 1.0.2
generatedTests: {}
